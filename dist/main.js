/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/lineChart.js":
/*!***************************!*\
  !*** ./dist/lineChart.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction LineChart(data) {\n  let {\n    x = _ref => {\n      let [x] = _ref;\n      return x;\n    },\n    // given d in data, returns the (temporal) x-value\n    y = _ref2 => {\n      let [, y] = _ref2;\n      return y;\n    },\n    // given d in data, returns the (quantitative) y-value\n    z = () => 1,\n    // given d in data, returns the (categorical) z-value\n    title,\n    // given d in data, returns the title text\n    defined,\n    // for gaps in data\n    curve = d3.curveLinear,\n    // method of interpolation between points\n    marginTop = 50,\n    // top margin, in pixels\n    marginRight = 0,\n    // right margin, in pixels\n    marginBottom = 50,\n    // bottom margin, in pixels\n    marginLeft = 30,\n    // left margin, in pixels\n    width,\n    // outer width, in pixels\n    height,\n    // outer height, in pixels\n    xType = d3.scaleUtc,\n    // type of x-scale\n    xDomain,\n    // [xmin, xmax]\n    xRange = [marginLeft, width - marginRight],\n    // [left, right]\n    yType = d3.scaleLinear,\n    // type of y-scale\n    yDomain,\n    // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop],\n    // [bottom, top]\n    yFormat,\n    // a format specifier string for the y-axis\n    yLabel,\n    // a label for the y-axis\n    zDomain,\n    // array of z-values\n    color = \"currentColor\",\n    // stroke color of line, as a constant or a function of *z*\n    strokeLinecap,\n    // stroke line cap of line\n    strokeLinejoin,\n    // stroke line join of line\n    strokeWidth = 1.0,\n    // stroke width of line\n    strokeOpacity,\n    // stroke opacity of line\n    mixBlendMode = \"multiply\",\n    // blend mode of lines\n    voronoi // show a Voronoi overlay? (for debugging)\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Compute values.\n\n  const X = d3.map(data, x);\n  const Y = d3.map(data, y);\n  const Z = d3.map(data, z);\n  const O = d3.map(data, d => d);\n  if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n  const D = d3.map(data, defined);\n\n  // Compute default domains, and unique the z-domain.\n  if (xDomain === undefined) xDomain = d3.extent(X);\n  if (yDomain === undefined) yDomain = [0, d3.max(Y, d => typeof d === \"string\" ? +d : d)];\n  if (zDomain === undefined) zDomain = Z;\n  zDomain = new d3.InternSet(zDomain);\n\n  // Omit any data not present in the z-domain.\n  const I = d3.range(X.length).filter(i => zDomain.has(Z[i]));\n\n  // width = d3.select(\"chart\")._groups[0][0].clientWidth;\n  // height = d3.select(\"chart\")._groups[0][0].clientHeight;\n  // Construct scales and axes.\n  const xScale = xType(xDomain, xRange);\n  const yScale = yType(yDomain, yRange);\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 60, yFormat);\n\n  // Compute titles.\n  const T = title === undefined ? Z : title === null ? null : d3.map(data, title);\n\n  // Construct a line generator.\n  const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").style(\"-webkit-tap-highlight-color\", \"transparent\").on(\"pointerenter\", pointerentered).on(\"pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n\n  // An optional Voronoi display (for fun).\n  if (voronoi) svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"red\").attr(\"d\", d3.Delaunay.from(I, i => xScale(X[i]), i => yScale(Y[i])).voronoi([0, 0, width, height]).render());\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).attr(\"stroke-opacity\", \"0.3\").call(xAxis);\n\n  // Y axis\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).attr(\"font-size\", 15) // font size of y-axis\n  .attr(\"font-family\", \"Inconsolata, monospace\").call(g => g.select(\".domain\").remove()).call(voronoi ? () => {} : g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft - 70).attr(\"y\", -marginRight + 10).attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"green\").attr(\"text-anchor\", \"start\"));\n  // .text(yLabel));\n\n  const path = svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke\", typeof color === \"string\" ? color : null).attr(\"stroke-linecap\", strokeLinecap).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-width\", strokeWidth).attr(\"stroke-opacity\", strokeOpacity).selectAll(\"path\").data(d3.group(I, i => Z[i])).join(\"path\")\n  // .style(\"mix-blend-mode\", mixBlendMode)\n  .style(\"stroke\", \"#ddd\").attr(\"stroke\", typeof color === \"function\" ? _ref3 => {\n    let [z] = _ref3;\n    return color(z);\n  } : null).attr(\"d\", _ref4 => {\n    let [, I] = _ref4;\n    return line(I);\n  });\n  const dot = svg.append(\"g\").attr(\"display\", \"none\");\n  dot.append(\"circle\").attr(\"r\", 3.5).attr(\"fill\", \"white\");\n  dot.append(\"text\").attr(\"font-family\", \"Inter\").attr(\"font-size\", 13).attr(\"fill\", \"white\").attr(\"text-anchor\", \"middle\").attr(\"y\", -8);\n  function pointermoved(event) {\n    const [xm, ym] = d3.pointer(event);\n    const i = d3.least(I, i => Math.hypot(xScale(X[i]) - xm, yScale(Y[i]) - ym)); // closest point\n    path.style(\"stroke-width\", _ref5 => {\n      let [z] = _ref5;\n      return Z[i] === z ? 3 : strokeWidth;\n    }).style(\"stroke\", _ref6 => {\n      let [z] = _ref6;\n      return Z[i] === z ? null : \"#ddd\";\n    }).filter(_ref7 => {\n      let [z] = _ref7;\n      return Z[i] === z;\n    }).raise(); // inactive lines\n    // path.style(\"stroke\", ([z]) => Z[i] === z ? null : \"#ddd\").filter(([z]) => Z[i] === z).raise(); // inactive lines\n    // path.style(\"stroke-width\", 3);\n    dot.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n    if (T) dot.select(\"text\").text(T[i]);\n    svg.property(\"value\", O[i]).dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  function pointerentered() {\n    path.style(\"mix-blend-mode\", null).style(\"stroke\", \"#ddd\");\n    dot.attr(\"display\", null);\n  }\n  function pointerleft() {\n    // path.style(\"mix-blend-mode\", mixBlendMode).style(\"stroke\", null);\n    dot.attr(\"display\", \"none\");\n    svg.node().value = null;\n    svg.dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  return Object.assign(svg.node(), {\n    value: null\n  });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (LineChart);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dist/lineChart.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_census__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/census */ \"./src/scripts/census.js\");\n/* harmony import */ var _scripts_bea__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/bea */ \"./src/scripts/bea.js\");\n/* harmony import */ var _scripts_stats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/stats */ \"./src/scripts/stats.js\");\n/* harmony import */ var _scripts_state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/state */ \"./src/scripts/state.js\");\n/* harmony import */ var _dist_lineChart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dist/lineChart */ \"./dist/lineChart.js\");\n// import map from './scripts/map';\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  // const mapDiv = document.getElementById('map');\n  const statsEl = document.getElementById('stats');\n  // mapDiv.style.width = '100%';\n\n  // Load map\n  const res = await fetch(`https://cdn.jsdelivr.net/npm/us-atlas@3/states-albers-10m.json`);\n  // const mapJson = await res.json()\n\n  // Fetch and setup data\n  const data = await setupData();\n  const states = _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setupStates(data);\n  const stats = new _scripts_stats__WEBPACK_IMPORTED_MODULE_2__[\"default\"](statsEl, states);\n  window['chartCategory'] = 'populationHistorical';\n  window['usData'] = stats.chartData(data);\n\n  // const loadMap = map(mapJson, stats, states, setupLineChart);\n  // mapDiv.appendChild(loadMap);\n\n  const stateData = _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setUpLineChartHistorical(states['Ohio'].populationHist, 'Ohio');\n  const chart = setupLineChart(window['usData'].concat(stateData));\n  const lineChart = document.getElementById('chart');\n  lineChart.appendChild(chart);\n  const loading = document.getElementsByClassName('loading');\n  loading[0].style.display = 'none';\n  let modButton = document.getElementById('modul_button');\n  modButton.style.display = 'block';\n  modButton.addEventListener('click', () => {\n    document.getElementById('modul').remove();\n  });\n  window.addEventListener('resize', () => {\n    updateChart();\n    const lineChart = document.getElementById('chart');\n    lineChart.removeChild(lineChart.firstChild);\n    const chart = setupLineChart(window['usData'].concat(stateData));\n    lineChart.appendChild(chart);\n  });\n});\nconst setupData = async () => {\n  const census = new _scripts_census__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  const bea = new _scripts_bea__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  const populationHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fetchData(census.populationLinks);\n  const employmentHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fetchData(census.employmentLinks);\n  const gdpHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(bea.gdpLink);\n  const personalIncomeHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(bea.personalIncomeLink);\n  const data = {\n    'name': '',\n    'populationHistorical': populationHistorical,\n    'employmentHistorical': employmentHistorical,\n    'gdpHistorical': gdpHistorical,\n    'personalIncomeHistorical': personalIncomeHistorical,\n    'getStatsCensus': census.getStateStats,\n    'getStatsBea': bea.getStateStats\n  };\n  return data;\n};\nconst getParentDimensions = () => {\n  const parent = document.getElementsByClassName('chart_container')[0];\n  const width = parent.offsetWidth;\n  const height = parent.offsetHeight;\n  return [width, height];\n};\nconst setupLineChart = data => {\n  const [width, height] = getParentDimensions();\n  return (0,_dist_lineChart__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(data, {\n    x: d => d.date,\n    y: d => d.populationHistorical,\n    z: d => d.state,\n    yDomain: [1, 30],\n    yLabel: \"↑ Unemployment (%)\",\n    width: width,\n    height: height,\n    color: \"#29DEF2\"\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/apiUtil.js":
/*!********************************!*\
  !*** ./src/scripts/apiUtil.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst apiUtil = {\n  fetchEndpoint: async function (apiLink) {\n    return fetch(apiLink).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    }).then(data => data).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiUtil);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGlVdGlsLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLEdBQUc7RUFDWkMsYUFBYSxFQUFFLGVBQUFBLENBQWVDLE9BQU8sRUFBRTtJQUNuQyxPQUFPQyxLQUFLLENBQUNELE9BQU8sQ0FBQyxDQUNoQkUsSUFBSSxDQUFFQyxRQUFRLElBQUs7TUFDaEIsSUFBSSxDQUFDQSxRQUFRLENBQUNDLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSUMsS0FBSyxDQUFDLDZCQUE2QixDQUFDO01BQ2xEO01BQ0EsT0FBT0YsUUFBUSxDQUFDRyxJQUFJLENBQUMsQ0FBQztJQUMxQixDQUFDLENBQUMsQ0FDREosSUFBSSxDQUFDSyxJQUFJLElBQUlBLElBQUksQ0FBQyxDQUNsQkMsS0FBSyxDQUFFQyxLQUFLLElBQUs7TUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMscURBQXFELEVBQUVBLEtBQUssQ0FBQztJQUMvRSxDQUFDLENBQUM7RUFDVjtBQUNKLENBQUM7QUFHRCwrREFBZVgsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9zY3JpcHRzL2FwaVV0aWwuanM/NWU2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcGlVdGlsID0ge1xuICAgIGZldGNoRW5kcG9pbnQ6IGFzeW5jIGZ1bmN0aW9uKGFwaUxpbmspIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKGFwaUxpbmspXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTmV0d29yayByZXNwb25zZSB3YXMgbm90IE9LJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiBkYXRhKVxuICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1RoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHlvdXIgZmV0Y2ggb3BlcmF0aW9uOicsIGVycm9yKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBhcGlVdGlsO1xuIl0sIm5hbWVzIjpbImFwaVV0aWwiLCJmZXRjaEVuZHBvaW50IiwiYXBpTGluayIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIiwib2siLCJFcnJvciIsImpzb24iLCJkYXRhIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/apiUtil.js\n");

/***/ }),

/***/ "./src/scripts/bea.js":
/*!****************************!*\
  !*** ./src/scripts/bea.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\n\n\nclass Bea {\n  constructor() {\n    this.gdpLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]['gdp']).join('');\n    this.personalIncomeLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]['personalIncome']).join('');\n  }\n  static async fetchData(apiLink) {\n    const dataArray = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n    let twoDArrayOfData = dataArray['BEAAPI']['Results']['Data'];\n    return Bea.createGdpObject(twoDArrayOfData);\n  }\n  static createGdpObject(dataArr) {\n    var output = {};\n    for (let i = 0; i < dataArr.length; i++) {\n      let key = dataArr[i].TimePeriod - 2017;\n      if (output[key]) {\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      } else {\n        output[key] = {};\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      }\n    }\n    return output;\n  }\n  getStateStats(state, data, year) {\n    let gdp = [];\n    if (year === undefined) {\n      for (let i = 0; i < 5; i++) {\n        gdp.push(data[i][state]);\n      }\n    } else {\n      let currentYear = data[year][state];\n      let lastYear = data[1][state];\n      gdp.push(currentYear);\n      currentYear > lastYear ? gdp.push(1) : gdp.push(0);\n    }\n    return gdp;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bea);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iZWEuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStCO0FBQ0k7QUFFbkMsTUFBTUUsR0FBRyxDQUFDO0VBQ05DLFdBQVdBLENBQUEsRUFBRztJQUNWLElBQUksQ0FBQ0MsT0FBTyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ04saURBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ25ELElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdILE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTixpREFBSyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQ08sSUFBSSxDQUFDLEVBQUUsQ0FBQztFQUM3RTtFQUdBLGFBQWFFLFNBQVNBLENBQUNDLE9BQU8sRUFBRTtJQUM1QixNQUFNQyxTQUFTLEdBQUcsTUFBTVYsbURBQU8sQ0FBQ1csYUFBYSxDQUFDRixPQUFPLENBQUM7SUFDdEQsSUFBSUcsZUFBZSxHQUFHRixTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBRTVELE9BQU9ULEdBQUcsQ0FBQ1ksZUFBZSxDQUFDRCxlQUFlLENBQUM7RUFDL0M7RUFHQSxPQUFPQyxlQUFlQSxDQUFDQyxPQUFPLEVBQUU7SUFDNUIsSUFBSUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNmLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRixPQUFPLENBQUNHLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7TUFDckMsSUFBSUUsR0FBRyxHQUFHSixPQUFPLENBQUNFLENBQUMsQ0FBQyxDQUFDRyxVQUFVLEdBQUcsSUFBSTtNQUN0QyxJQUFHSixNQUFNLENBQUNHLEdBQUcsQ0FBQyxFQUFDO1FBQ1hILE1BQU0sQ0FBQ0csR0FBRyxDQUFDLENBQUNKLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNJLE9BQU8sQ0FBQyxHQUFHTixPQUFPLENBQUNFLENBQUMsQ0FBQyxDQUFDSyxTQUFTO01BQzFELENBQUMsTUFBSztRQUNGTixNQUFNLENBQUNHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQkgsTUFBTSxDQUFDRyxHQUFHLENBQUMsQ0FBQ0osT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ksT0FBTyxDQUFDLEdBQUdOLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNLLFNBQVM7TUFDMUQ7SUFDSjtJQUNBLE9BQU9OLE1BQU07RUFDakI7RUFHQU8sYUFBYUEsQ0FBQ0MsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRTtJQUM3QixJQUFJQyxHQUFHLEdBQUcsRUFBRTtJQUVaLElBQUlELElBQUksS0FBS0UsU0FBUyxFQUFFO01BQ3BCLEtBQUssSUFBSVgsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxFQUFFLEVBQUU7UUFDeEJVLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDSixJQUFJLENBQUNSLENBQUMsQ0FBQyxDQUFDTyxLQUFLLENBQUMsQ0FBQztNQUM1QjtJQUNKLENBQUMsTUFBTTtNQUNILElBQUlNLFdBQVcsR0FBR0wsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQ0YsS0FBSyxDQUFDO01BQ25DLElBQUlPLFFBQVEsR0FBR04sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDRCxLQUFLLENBQUM7TUFDN0JHLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDQyxXQUFXLENBQUM7TUFDckJBLFdBQVcsR0FBR0MsUUFBUSxHQUFHSixHQUFHLENBQUNFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBR0YsR0FBRyxDQUFDRSxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3REO0lBRUEsT0FBT0YsR0FBRztFQUNkO0FBQ0o7QUFHQSwrREFBZXpCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9iZWEuanM/ZThjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTElOS1MgZnJvbSAnLi9saW5rcy5qcyc7XG5pbXBvcnQgYXBpVXRpbCBmcm9tICcuL2FwaVV0aWwuanMnO1xuXG5jbGFzcyBCZWEge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmdkcExpbmsgPSBPYmplY3QudmFsdWVzKExJTktTWydnZHAnXSkuam9pbignJyk7XG4gICAgICAgIHRoaXMucGVyc29uYWxJbmNvbWVMaW5rID0gT2JqZWN0LnZhbHVlcyhMSU5LU1sncGVyc29uYWxJbmNvbWUnXSkuam9pbignJyk7XG4gICAgfVxuXG5cbiAgICBzdGF0aWMgYXN5bmMgZmV0Y2hEYXRhKGFwaUxpbmspIHtcbiAgICAgICAgY29uc3QgZGF0YUFycmF5ID0gYXdhaXQgYXBpVXRpbC5mZXRjaEVuZHBvaW50KGFwaUxpbmspO1xuICAgICAgICBsZXQgdHdvREFycmF5T2ZEYXRhID0gZGF0YUFycmF5WydCRUFBUEknXVsnUmVzdWx0cyddWydEYXRhJ107XG5cbiAgICAgICAgcmV0dXJuIEJlYS5jcmVhdGVHZHBPYmplY3QodHdvREFycmF5T2ZEYXRhKTtcbiAgICB9XG5cblxuICAgIHN0YXRpYyBjcmVhdGVHZHBPYmplY3QoZGF0YUFycikge1xuICAgICAgICB2YXIgb3V0cHV0ID0ge307XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YUFyci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IGtleSA9IGRhdGFBcnJbaV0uVGltZVBlcmlvZCAtIDIwMTc7XG4gICAgICAgICAgICBpZihvdXRwdXRba2V5XSl7XG4gICAgICAgICAgICAgICAgb3V0cHV0W2tleV1bZGF0YUFycltpXS5HZW9OYW1lXSA9IGRhdGFBcnJbaV0uRGF0YVZhbHVlXG4gICAgICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICAgICAgb3V0cHV0W2tleV0gPSB7fTtcbiAgICAgICAgICAgICAgICBvdXRwdXRba2V5XVtkYXRhQXJyW2ldLkdlb05hbWVdID0gZGF0YUFycltpXS5EYXRhVmFsdWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cblxuXG4gICAgZ2V0U3RhdGVTdGF0cyhzdGF0ZSwgZGF0YSwgeWVhcikge1xuICAgICAgICBsZXQgZ2RwID0gW11cblxuICAgICAgICBpZiAoeWVhciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xuICAgICAgICAgICAgICAgIGdkcC5wdXNoKGRhdGFbaV1bc3RhdGVdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxldCBjdXJyZW50WWVhciA9IGRhdGFbeWVhcl1bc3RhdGVdXG4gICAgICAgICAgICBsZXQgbGFzdFllYXIgPSBkYXRhWzFdW3N0YXRlXVxuICAgICAgICAgICAgZ2RwLnB1c2goY3VycmVudFllYXIpO1xuICAgICAgICAgICAgY3VycmVudFllYXIgPiBsYXN0WWVhciA/IGdkcC5wdXNoKDEpIDogZ2RwLnB1c2goMCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZ2RwXG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IEJlYTtcbiJdLCJuYW1lcyI6WyJMSU5LUyIsImFwaVV0aWwiLCJCZWEiLCJjb25zdHJ1Y3RvciIsImdkcExpbmsiLCJPYmplY3QiLCJ2YWx1ZXMiLCJqb2luIiwicGVyc29uYWxJbmNvbWVMaW5rIiwiZmV0Y2hEYXRhIiwiYXBpTGluayIsImRhdGFBcnJheSIsImZldGNoRW5kcG9pbnQiLCJ0d29EQXJyYXlPZkRhdGEiLCJjcmVhdGVHZHBPYmplY3QiLCJkYXRhQXJyIiwib3V0cHV0IiwiaSIsImxlbmd0aCIsImtleSIsIlRpbWVQZXJpb2QiLCJHZW9OYW1lIiwiRGF0YVZhbHVlIiwiZ2V0U3RhdGVTdGF0cyIsInN0YXRlIiwiZGF0YSIsInllYXIiLCJnZHAiLCJ1bmRlZmluZWQiLCJwdXNoIiwiY3VycmVudFllYXIiLCJsYXN0WWVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/bea.js\n");

/***/ }),

/***/ "./src/scripts/census.js":
/*!*******************************!*\
  !*** ./src/scripts/census.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nclass Census {\n  constructor() {\n    _defineProperty(this, \"getStateStats\", (state, data, year) => {\n      let searchKey = this.searchKey(data);\n      if (year === undefined) {\n        return this.historicalData(state, data, searchKey);\n      } else {\n        return this.mostRecentYear(state, data, year, searchKey);\n      }\n    });\n    _defineProperty(this, \"searchKey\", data => {\n      let stateObj = data[0]['Alabama'];\n      return stateObj['TOT_EMP'] ? 'TOT_EMP' : 'POP';\n    });\n    _defineProperty(this, \"mostRecentYear\", (state, data, year, searchKey) => {\n      let outputData = [data[year][state][searchKey]];\n      let currentYear = parseInt(data[year][state][searchKey]);\n      let lastYear = parseInt(data[1][state][searchKey]);\n      let status = currentYear > lastYear ? 1 : 0;\n      outputData.push(status);\n      return outputData;\n    });\n    _defineProperty(this, \"historicalData\", (state, data, searchKey) => {\n      let outputData = [];\n      for (let i = 0; i < 5; i++) {\n        let statValue = data[i][state][searchKey];\n        if (statValue === undefined) continue;\n        outputData.push(statValue);\n      }\n\n      // let histObj = {\n      //     values: outputData,\n      //     dataType: data['data']\n      // }\n\n      return outputData;\n    });\n    this.populationLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]['population']);\n    this.employmentLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]['employment']);\n  }\n  static async fetchData(links) {\n    let dataByYear = {};\n    dataByYear['data'] = links[0].includes('population') ? 'population' : 'employment';\n    for (let i = 0; i < 5; i++) {\n      let apiLink = links[i];\n      const dataArrayOfCurrYear = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n      const jsonData = JSON.parse(JSON.stringify(dataArrayOfCurrYear));\n      dataByYear[i] = Census.createPopulationObject(jsonData);\n    }\n    return dataByYear;\n  }\n  static createPopulationObject(data) {\n    let jsonObject;\n    if (Array.isArray(data) && data.length > 0) {\n      let keys = data[0]; // keys are the first row\n      keys = keys.map(key => key === 'POP_2021' || key === 'POP_2020' ? key = 'POP' : key);\n      jsonObject = data.slice(1).reduce((acc, item) => {\n        let nameIdx = keys.includes('NAME') ? keys.indexOf('NAME') : keys.indexOf(\"GEONAME\");\n        acc[item[nameIdx]] = keys.reduce((obj, key, index) => {\n          if (key !== 'NAME') {\n            obj[key] = item[index];\n          }\n          return obj;\n        }, {});\n        acc['dataType'] = keys[0];\n        return acc;\n      }, {});\n    }\n    return jsonObject;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Census);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/census.js\n");

/***/ }),

/***/ "./src/scripts/links.js":
/*!******************************!*\
  !*** ./src/scripts/links.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst LINKS = {\n  'population': {\n    0: 'https://api.census.gov/data/2021/pep/population?get=POP_2021,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/2021/pep/population?get=POP_2020,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/2019/pep/population?get=POP,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/2018/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/2017/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'employment': {\n    0: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2021&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2020&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2019&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2018&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2017&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'gdp': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=1&TableName=CAGDP2&ResultFormat=JSON',\n  'personalIncome': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=30&TableName=SAINC50&Year=2017,2018,2019,2020,2021&ResultFormat=JSON'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (LINKS);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9saW5rcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsS0FBSyxHQUFHO0VBQ1YsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLDRIQUE0SDtJQUMvSCxDQUFDLEVBQUUsNEhBQTRIO0lBQy9ILENBQUMsRUFBRSx1SEFBdUg7SUFDMUgsQ0FBQyxFQUFFLDBIQUEwSDtJQUM3SCxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUUsaUlBQWlJO0lBQ3BJLENBQUMsRUFBRSxpSUFBaUk7SUFDcEksQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsS0FBSyxFQUFFLDRLQUE0SztFQUNuTCxnQkFBZ0IsRUFBRTtBQUN0QixDQUFDO0FBRUQsK0RBQWVBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9saW5rcy5qcz8yZTYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IExJTktTID0ge1xuICAgICdwb3B1bGF0aW9uJzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIxLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAxOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIwLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAyOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMTkvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUCxOQU1FJmZvcj1zdGF0ZToqJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMzogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS8yMDE4L3BlcC9wb3B1bGF0aW9uP2dldD1QT1AsR0VPTkFNRSZmb3I9c3RhdGU6KiZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvMjAxNy9wZXAvcG9wdWxhdGlvbj9nZXQ9UE9QLEdFT05BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnXG4gICAgfSxcblxuICAgICdlbXBsb3ltZW50Jzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAyMSZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDE6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDIwJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMjogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS90aW1lc2VyaWVzL2dvdnM/Z2V0PU5BTUUsVE9UX0VNUCZmb3I9c3RhdGU6KiZ0aW1lPTIwMTkma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAzOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAxOCZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDE3JmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJ1xuICAgIH0sXG5cbiAgICAnZ2RwJzogJ2h0dHBzOi8vYXBwcy5iZWEuZ292L2FwaS9kYXRhPyZVc2VySUQ9NjNEMDdEMEItODc0NC00MTlELTgyMUMtNjU2Q0IxMTIzOUQyJm1ldGhvZD1nZXRkYXRhJmRhdGFzZXRuYW1lPVJlZ2lvbmFsJkdlb0ZpcHM9U1RBVEUmTGluZUNvZGU9MSZUYWJsZU5hbWU9Q0FHRFAyJlJlc3VsdEZvcm1hdD1KU09OJyxcbiAgICAncGVyc29uYWxJbmNvbWUnOiAnaHR0cHM6Ly9hcHBzLmJlYS5nb3YvYXBpL2RhdGE/JlVzZXJJRD02M0QwN0QwQi04NzQ0LTQxOUQtODIxQy02NTZDQjExMjM5RDImbWV0aG9kPWdldGRhdGEmZGF0YXNldG5hbWU9UmVnaW9uYWwmR2VvRmlwcz1TVEFURSZMaW5lQ29kZT0zMCZUYWJsZU5hbWU9U0FJTkM1MCZZZWFyPTIwMTcsMjAxOCwyMDE5LDIwMjAsMjAyMSZSZXN1bHRGb3JtYXQ9SlNPTidcbn1cblxuZXhwb3J0IGRlZmF1bHQgTElOS1M7XG4iXSwibmFtZXMiOlsiTElOS1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/links.js\n");

/***/ }),

/***/ "./src/scripts/state.js":
/*!******************************!*\
  !*** ./src/scripts/state.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass State {\n  static setupStates(data) {\n    let states = {};\n    let names = State.stateNames();\n    for (let i = 0; i < 50; i++) {\n      data['name'] = names[i];\n      states[names[i]] = new State(names[i], data);\n    }\n    return states;\n  }\n  constructor(name, data) {\n    this.name = name;\n    let populationArray = data.getStatsCensus(name, data.populationHistorical, 0);\n    this.population = (parseInt(populationArray[0]) / 1000000).toFixed(2);\n    this.populationStatus = populationArray[1];\n    this.populationHist = data.getStatsCensus(name, data.populationHistorical);\n    let employmentArray = data.getStatsCensus(name, data.employmentHistorical, 0);\n    this.employment = (parseInt(employmentArray[0]) / parseInt(populationArray[0]) * 100).toFixed(2);\n    //     (parseInt((employmentArray[0])) / 1000).toFixed(2);\n    this.employmentStatus = employmentArray[1];\n    this.employmentHist = data.getStatsCensus(name, data.employmentHistorical);\n    let gdpArray = data.getStatsBea(name, data.gdpHistorical, 4);\n    this.gdp = (parseInt(gdpArray[0].split(',').join('')) / 1000000).toFixed(2);\n    this.gdpStatus = gdpArray[1];\n    this.gdpHist = data.getStatsBea(name, data.gdpHistorical);\n    let personalIncomeArray = data.getStatsBea(name, data.personalIncomeHistorical, 4);\n    this.personalincome = personalIncomeArray[0];\n    this.personalIncomeStatus = personalIncomeArray[1];\n    this.personalIncomeHist = data.getStatsBea(name, data.personalIncomeHistorical);\n  }\n}\n_defineProperty(State, \"stateNames\", () => {\n  return ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n});\n_defineProperty(State, \"setUpLineChartHistorical\", function (dataArrayFiveYears) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'US';\n  let dates = ['2021-04-02', '2020-04-02', '2019-04-02', '2018-04-02', '2017-04-02'];\n  let historicalData = [];\n  dataArrayFiveYears.forEach((ele, i) => {\n    let lineData = {};\n\n    // let presentOfTotal = (parseInt(ele) / window['usTotal'][i] * 100).toFixed(10);\n    // lineData[window['chartCategory']] = parseFloat(presentOfTotal);\n    lineData['date'] = new Date(dates[i]);\n    lineData[window['chartCategory']] = parseInt(ele) / 1000000;\n    lineData['state'] = name;\n    historicalData.push(lineData);\n  });\n  return historicalData;\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/state.js\n");

/***/ }),

/***/ "./src/scripts/stats.js":
/*!******************************!*\
  !*** ./src/scripts/stats.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./src/scripts/state.js\");\n\nclass Stats {\n  constructor(divEl, states) {\n    this.divEl = divEl;\n    this.state = states['Alabama'];\n    // divEl.appendChild(this.setUpStats(this.state));\n  }\n\n  setUpStats(state) {\n    let ul = document.createElement('ul');\n    let i = 0;\n    let suffix = ['Mln', 'K'];\n    for (let key in state) {\n      if (key === 'setUpLineChartHistorical') continue;\n      let lastFourLetters = key.slice(key.length - 4);\n      let lastSixLetters = key.slice(key.length - 6);\n      if (lastFourLetters === 'Hist') continue;\n      if (lastSixLetters === 'Status') continue;\n      let liEl = document.createElement('li');\n      let divName = document.createElement('div');\n      let divValue = document.createElement('div');\n      let capitalizeName = key.toUpperCase();\n      let statsValue = state[key];\n      divName.innerHTML = capitalizeName;\n      divValue.innerHTML = statsValue;\n      this.setValueColor(state, key, divValue);\n      liEl.appendChild(divName);\n      liEl.appendChild(divValue);\n      liEl.setAttribute('class', 'stats-item');\n      if (i !== 0) {\n        let divSuffix = document.createElement('div');\n        let index = i % 2 === 0 ? 1 : 0;\n        if (capitalizeName === 'EMPLOYMENT') {\n          divSuffix.innerHTML = '%';\n        } else {\n          divSuffix.innerHTML = suffix[index];\n        }\n        divSuffix.style = 'font-size: 10px';\n        divSuffix.style = 'height: 100hv';\n        liEl.appendChild(divSuffix);\n      }\n      if (i > 0) {\n        liEl.classList.add('class', 'selectable');\n      }\n      ul.appendChild(liEl);\n      i++;\n    }\n    ul.setAttribute('id', 'stats-ul');\n    return ul;\n  }\n  update(state) {\n    let lis = document.querySelectorAll('#stats ul li');\n    // Object.keys(state).forEach((key, i) => {\n\n    for (let i = 0; i < lis.length; i++) {\n      let innerElements = lis[i].querySelectorAll('div');\n      let stateAttribute = innerElements[0].innerText.toLowerCase();\n      let divValue = lis[i].querySelectorAll('div')[1];\n      this.setValueColor(state, stateAttribute, divValue);\n      divValue.innerHTML = `${state[stateAttribute]}`;\n    }\n  }\n  setValueColor(state, key, divValue) {\n    if (key !== 'name') {\n      let status = state[key + 'Status'];\n      status || state[status] === 1 ? divValue.style = 'color: green' : divValue.style = 'color: red';\n    }\n  }\n  chartData(data) {\n    window['usTotal'] = [];\n    this.setCategory();\n    let category = window['chartCategory'];\n    let getStatsCensusHist = data['getStatsCensus']; // TODO: Determine which data api endpoint to use\n\n    let allStatesHistValuesAllYears = [];\n    Object.keys(data[category][0]).forEach(stateName => {\n      if (stateName !== 'dataType') {\n        allStatesHistValuesAllYears.push(getStatsCensusHist(stateName, data[category]));\n      }\n    });\n    let totalHistValuesAllYears = [];\n    for (let i = 0; i < 5; i++) {\n      let count = 0;\n      allStatesHistValuesAllYears.forEach(stateHistValues => {\n        count += parseInt(stateHistValues[i]);\n      });\n      window['usTotal'].push(count);\n      totalHistValuesAllYears.push(Math.round(count / 52));\n    }\n    return _state__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setUpLineChartHistorical(totalHistValuesAllYears);\n  }\n  setCategory() {\n    if (window['chartCategory'] === undefined) {\n      window['chartCategory'] = 'populationHistorical';\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stats);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/stats.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;