/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/lineChart.js":
/*!***************************!*\
  !*** ./dist/lineChart.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction LineChart(data) {\n  let {\n    x = _ref => {\n      let [x] = _ref;\n      return x;\n    },\n    // given d in data, returns the (temporal) x-value\n    y = _ref2 => {\n      let [, y] = _ref2;\n      return y;\n    },\n    // given d in data, returns the (quantitative) y-value\n    z = () => 1,\n    // given d in data, returns the (categorical) z-value\n    title,\n    // given d in data, returns the title text\n    defined,\n    // for gaps in data\n    curve = d3.curveLinear,\n    // method of interpolation between points\n    marginTop = 50,\n    // top margin, in pixels\n    marginRight = 0,\n    // right margin, in pixels\n    marginBottom = 50,\n    // bottom margin, in pixels\n    marginLeft = 30,\n    // left margin, in pixels\n    width,\n    // outer width, in pixels\n    height,\n    // outer height, in pixels\n    xType = d3.scaleUtc,\n    // type of x-scale\n    xDomain,\n    // [xmin, xmax]\n    xRange = [marginLeft, width - marginRight],\n    // [left, right]\n    yType = d3.scaleLinear,\n    // type of y-scale\n    yDomain,\n    // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop],\n    // [bottom, top]\n    yFormat,\n    // a format specifier string for the y-axis\n    yLabel,\n    // a label for the y-axis\n    zDomain,\n    // array of z-values\n    color = \"currentColor\",\n    // stroke color of line, as a constant or a function of *z*\n    strokeLinecap,\n    // stroke line cap of line\n    strokeLinejoin,\n    // stroke line join of line\n    strokeWidth = 1.0,\n    // stroke width of line\n    strokeOpacity,\n    // stroke opacity of line\n    mixBlendMode = \"multiply\",\n    // blend mode of lines\n    voronoi // show a Voronoi overlay? (for debugging)\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Compute values.\n\n  const X = d3.map(data, x);\n  const Y = d3.map(data, y);\n  const Z = d3.map(data, z);\n  const O = d3.map(data, d => d);\n  if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n  const D = d3.map(data, defined);\n\n  // Compute default domains, and unique the z-domain.\n  if (xDomain === undefined) xDomain = d3.extent(X);\n  if (yDomain === undefined) yDomain = [0, d3.max(Y, d => typeof d === \"string\" ? +d : d)];\n  if (zDomain === undefined) zDomain = Z;\n  zDomain = new d3.InternSet(zDomain);\n\n  // Omit any data not present in the z-domain.\n  const I = d3.range(X.length).filter(i => zDomain.has(Z[i]));\n\n  // width = d3.select(\"chart\")._groups[0][0].clientWidth;\n  // height = d3.select(\"chart\")._groups[0][0].clientHeight;\n  // Construct scales and axes.\n  const xScale = xType(xDomain, xRange);\n  const yScale = yType(yDomain, yRange);\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 60, yFormat);\n\n  // Compute titles.\n  const T = title === undefined ? Z : title === null ? null : d3.map(data, title);\n\n  // Construct a line generator.\n  const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").style(\"-webkit-tap-highlight-color\", \"transparent\").on(\"pointerenter\", pointerentered).on(\"pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n\n  // An optional Voronoi display (for fun).\n  if (voronoi) svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"red\").attr(\"d\", d3.Delaunay.from(I, i => xScale(X[i]), i => yScale(Y[i])).voronoi([0, 0, width, height]).render());\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).attr(\"stroke-opacity\", \"0.3\").call(xAxis);\n\n  // Y axis\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).attr(\"font-size\", 15) // font size of y-axis\n  .attr(\"font-family\", \"Inconsolata, monospace\").call(g => g.select(\".domain\").remove()).call(voronoi ? () => {} : g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft - 70).attr(\"y\", -marginRight + 10).attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"green\").attr(\"text-anchor\", \"start\"));\n  // .text(yLabel));\n\n  const path = svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke\", typeof color === \"string\" ? color : null).attr(\"stroke-linecap\", strokeLinecap).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-width\", strokeWidth).attr(\"stroke-opacity\", strokeOpacity).selectAll(\"path\").data(d3.group(I, i => Z[i])).join(\"path\")\n  // .style(\"mix-blend-mode\", mixBlendMode)\n  .style(\"stroke\", \"#ddd\").attr(\"stroke\", typeof color === \"function\" ? _ref3 => {\n    let [z] = _ref3;\n    return color(z);\n  } : null).attr(\"d\", _ref4 => {\n    let [, I] = _ref4;\n    return line(I);\n  });\n  const dot = svg.append(\"g\").attr(\"display\", \"none\");\n  dot.append(\"circle\").attr(\"r\", 3.5).attr(\"fill\", \"white\");\n  dot.append(\"text\").attr(\"font-family\", \"Inter\").attr(\"font-size\", 13).attr(\"fill\", \"white\").attr(\"text-anchor\", \"middle\").attr(\"y\", -8);\n  function pointermoved(event) {\n    const [xm, ym] = d3.pointer(event);\n    const i = d3.least(I, i => Math.hypot(xScale(X[i]) - xm, yScale(Y[i]) - ym)); // closest point\n    path.style(\"stroke-width\", _ref5 => {\n      let [z] = _ref5;\n      return Z[i] === z ? 3 : strokeWidth;\n    }).style(\"stroke\", _ref6 => {\n      let [z] = _ref6;\n      return Z[i] === z ? null : \"#ddd\";\n    }).filter(_ref7 => {\n      let [z] = _ref7;\n      return Z[i] === z;\n    }).raise(); // inactive lines\n    // path.style(\"stroke\", ([z]) => Z[i] === z ? null : \"#ddd\").filter(([z]) => Z[i] === z).raise(); // inactive lines\n    // path.style(\"stroke-width\", 3);\n    dot.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n    if (T) dot.select(\"text\").text(T[i]);\n    svg.property(\"value\", O[i]).dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  function pointerentered() {\n    path.style(\"mix-blend-mode\", null).style(\"stroke\", \"#ddd\");\n    dot.attr(\"display\", null);\n  }\n  function pointerleft() {\n    // path.style(\"mix-blend-mode\", mixBlendMode).style(\"stroke\", null);\n    dot.attr(\"display\", \"none\");\n    svg.node().value = null;\n    svg.dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  return Object.assign(svg.node(), {\n    value: null\n  });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (LineChart);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dist/lineChart.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/map */ \"./src/scripts/map.js\");\n/* harmony import */ var _scripts_census__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/census */ \"./src/scripts/census.js\");\n/* harmony import */ var _scripts_bea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/bea */ \"./src/scripts/bea.js\");\n/* harmony import */ var _scripts_stats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/stats */ \"./src/scripts/stats.js\");\n/* harmony import */ var _scripts_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/state */ \"./src/scripts/state.js\");\n/* harmony import */ var _dist_lineChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dist/lineChart */ \"./dist/lineChart.js\");\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const mapDiv = document.getElementById('smap');\n  const statsEl = document.getElementById('stats');\n  mapDiv.style.width = '100%';\n\n  // Load map\n  const res = await fetch(`https://cdn.jsdelivr.net/npm/us-atlas@3/states-albers-10m.json`);\n  const mapJson = await res.json();\n\n  // Fetch and setup data\n  const data = await setupData();\n  const states = _scripts_state__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setupStates(data);\n  const stats = new _scripts_stats__WEBPACK_IMPORTED_MODULE_3__[\"default\"](statsEl, states);\n  window['chartCategory'] = 'populationHistorical';\n  window['usData'] = stats.chartData(data);\n  const loadMap = (0,_scripts_map__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mapJson, stats, states, setupLineChart);\n  mapDiv.appendChild(loadMap);\n  const stateData = _scripts_state__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setUpLineChartHistorical(states['Ohio'].populationHist, 'Ohio');\n  const chart = setupLineChart(window['usData'].concat(stateData));\n  const lineChart = document.getElementById('chart');\n  lineChart.appendChild(chart);\n  const loading = document.getElementsByClassName('loading');\n  loading[0].style.display = 'none';\n  let modButton = document.getElementById('modul_button');\n  modButton.style.display = 'block';\n  modButton.addEventListener('click', () => {\n    document.getElementById('modul').remove();\n  });\n  window.addEventListener('resize', () => {\n    const lineChart = document.getElementById('chart');\n    lineChart.removeChild(lineChart.firstChild);\n    const chart = setupLineChart(window['usData'].concat(stateData));\n    lineChart.appendChild(chart);\n  });\n});\nconst setupData = async () => {\n  const census = new _scripts_census__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  const bea = new _scripts_bea__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  const populationHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(census.populationLinks);\n  const employmentHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(census.employmentLinks);\n  const gdpHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchData(bea.gdpLink);\n  const personalIncomeHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchData(bea.personalIncomeLink);\n  const data = {\n    'name': '',\n    'populationHistorical': populationHistorical,\n    'employmentHistorical': employmentHistorical,\n    'gdpHistorical': gdpHistorical,\n    'personalIncomeHistorical': personalIncomeHistorical,\n    'getStatsCensus': census.getStateStats,\n    'getStatsBea': bea.getStateStats\n  };\n  return data;\n};\nconst getParentDimensions = () => {\n  const parent = document.getElementsByClassName('chart_container')[0];\n  const width = parent.offsetWidth;\n  const height = parent.offsetHeight;\n  return [width, height];\n};\nconst setupLineChart = data => {\n  const [width, height] = getParentDimensions();\n  return (0,_dist_lineChart__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(data, {\n    x: d => d.date,\n    y: d => d.populationHistorical,\n    z: d => d.state,\n    yDomain: [1, 30],\n    yLabel: \"↑ Unemployment (%)\",\n    width: width,\n    height: height,\n    color: \"#29DEF2\"\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/apiUtil.js":
/*!********************************!*\
  !*** ./src/scripts/apiUtil.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst apiUtil = {\n  fetchEndpoint: async function (apiLink) {\n    return fetch(apiLink).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    }).then(data => data).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiUtil);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGlVdGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLEdBQUc7RUFDWkMsYUFBYSxFQUFFLGdCQUFlQyxPQUFPLEVBQUU7SUFDbkMsT0FBT0MsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FDaEJFLElBQUksQ0FBRUMsUUFBUSxJQUFLO01BQ2hCLElBQUksQ0FBQ0EsUUFBUSxDQUFDQyxFQUFFLEVBQUU7UUFDZCxNQUFNLElBQUlDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQztNQUNsRDtNQUNBLE9BQU9GLFFBQVEsQ0FBQ0csSUFBSSxFQUFFO0lBQzFCLENBQUMsQ0FBQyxDQUNESixJQUFJLENBQUNLLElBQUksSUFBSUEsSUFBSSxDQUFDLENBQ2xCQyxLQUFLLENBQUVDLEtBQUssSUFBSztNQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBQyxxREFBcUQsRUFBRUEsS0FBSyxDQUFDO0lBQy9FLENBQUMsQ0FBQztFQUNWO0FBQ0osQ0FBQztBQUdELCtEQUFlWCxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvYXBpVXRpbC5qcz81ZTZkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwaVV0aWwgPSB7XG4gICAgZmV0Y2hFbmRwb2ludDogYXN5bmMgZnVuY3Rpb24oYXBpTGluaykge1xuICAgICAgICByZXR1cm4gZmV0Y2goYXBpTGluaylcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3QgT0snKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihkYXRhID0+IGRhdGEpXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggeW91ciBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IGFwaVV0aWw7XG4iXSwibmFtZXMiOlsiYXBpVXRpbCIsImZldGNoRW5kcG9pbnQiLCJhcGlMaW5rIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsIkVycm9yIiwianNvbiIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/apiUtil.js\n");

/***/ }),

/***/ "./src/scripts/bea.js":
/*!****************************!*\
  !*** ./src/scripts/bea.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\n\n\nclass Bea {\n  constructor() {\n    this.gdpLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gdp).join('');\n    this.personalIncomeLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].personalIncome).join('');\n  }\n  static async fetchData(apiLink) {\n    const dataArray = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n    let twoDArrayOfData = dataArray['BEAAPI']['Results']['Data'];\n    return Bea.createGdpObject(twoDArrayOfData);\n  }\n  static createGdpObject(dataArr) {\n    var output = {};\n    for (let i = 0; i < dataArr.length; i++) {\n      let key = dataArr[i].TimePeriod - 2017;\n      if (output[key]) {\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      } else {\n        output[key] = {};\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      }\n    }\n    return output;\n  }\n  getStateStats(state, data, year) {\n    let gdp = [];\n    if (year === undefined) {\n      for (let i = 0; i < 5; i++) {\n        gdp.push(data[i][state]);\n      }\n    } else {\n      let currentYear = data[year][state];\n      let lastYear = data[1][state];\n      gdp.push(currentYear);\n      currentYear > lastYear ? gdp.push(1) : gdp.push(0);\n    }\n    return gdp;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bea);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iZWEuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStCO0FBQ0k7QUFFbkMsTUFBTUUsR0FBRyxDQUFDO0VBQ05DLFdBQVcsR0FBRztJQUNWLElBQUksQ0FBQ0MsT0FBTyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ04scURBQVksQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ25ELElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdILE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTixnRUFBdUIsQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0VBQzdFO0VBR0EsYUFBYUUsU0FBUyxDQUFDQyxPQUFPLEVBQUU7SUFDNUIsTUFBTUMsU0FBUyxHQUFHLE1BQU1WLGlFQUFxQixDQUFDUyxPQUFPLENBQUM7SUFDdEQsSUFBSUcsZUFBZSxHQUFHRixTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBRTVELE9BQU9ULEdBQUcsQ0FBQ1ksZUFBZSxDQUFDRCxlQUFlLENBQUM7RUFDL0M7RUFHQSxPQUFPQyxlQUFlLENBQUNDLE9BQU8sRUFBRTtJQUM1QixJQUFJQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtNQUNyQyxJQUFJRSxHQUFHLEdBQUdKLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNHLFVBQVUsR0FBRyxJQUFJO01BQ3RDLElBQUdKLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEVBQUM7UUFDWEgsTUFBTSxDQUFDRyxHQUFHLENBQUMsQ0FBQ0osT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ksT0FBTyxDQUFDLEdBQUdOLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNLLFNBQVM7TUFDMUQsQ0FBQyxNQUFLO1FBQ0ZOLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCSCxNQUFNLENBQUNHLEdBQUcsQ0FBQyxDQUFDSixPQUFPLENBQUNFLENBQUMsQ0FBQyxDQUFDSSxPQUFPLENBQUMsR0FBR04sT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ssU0FBUztNQUMxRDtJQUNKO0lBQ0EsT0FBT04sTUFBTTtFQUNqQjtFQUdBTyxhQUFhLENBQUNDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUU7SUFDN0IsSUFBSUMsR0FBRyxHQUFHLEVBQUU7SUFFWixJQUFJRCxJQUFJLEtBQUtFLFNBQVMsRUFBRTtNQUNwQixLQUFLLElBQUlYLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsRUFBRSxFQUFFO1FBQ3hCVSxHQUFHLENBQUNFLElBQUksQ0FBQ0osSUFBSSxDQUFDUixDQUFDLENBQUMsQ0FBQ08sS0FBSyxDQUFDLENBQUM7TUFDNUI7SUFDSixDQUFDLE1BQU07TUFDSCxJQUFJTSxXQUFXLEdBQUdMLElBQUksQ0FBQ0MsSUFBSSxDQUFDLENBQUNGLEtBQUssQ0FBQztNQUNuQyxJQUFJTyxRQUFRLEdBQUdOLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsS0FBSyxDQUFDO01BQzdCRyxHQUFHLENBQUNFLElBQUksQ0FBQ0MsV0FBVyxDQUFDO01BQ3JCQSxXQUFXLEdBQUdDLFFBQVEsR0FBR0osR0FBRyxDQUFDRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RDtJQUVBLE9BQU9GLEdBQUc7RUFDZDtBQUNKO0FBR0EsK0RBQWV6QixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvYmVhLmpzP2U4YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExJTktTIGZyb20gJy4vbGlua3MuanMnO1xuaW1wb3J0IGFwaVV0aWwgZnJvbSAnLi9hcGlVdGlsLmpzJztcblxuY2xhc3MgQmVhIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5nZHBMaW5rID0gT2JqZWN0LnZhbHVlcyhMSU5LU1snZ2RwJ10pLmpvaW4oJycpO1xuICAgICAgICB0aGlzLnBlcnNvbmFsSW5jb21lTGluayA9IE9iamVjdC52YWx1ZXMoTElOS1NbJ3BlcnNvbmFsSW5jb21lJ10pLmpvaW4oJycpO1xuICAgIH1cblxuXG4gICAgc3RhdGljIGFzeW5jIGZldGNoRGF0YShhcGlMaW5rKSB7XG4gICAgICAgIGNvbnN0IGRhdGFBcnJheSA9IGF3YWl0IGFwaVV0aWwuZmV0Y2hFbmRwb2ludChhcGlMaW5rKTtcbiAgICAgICAgbGV0IHR3b0RBcnJheU9mRGF0YSA9IGRhdGFBcnJheVsnQkVBQVBJJ11bJ1Jlc3VsdHMnXVsnRGF0YSddO1xuXG4gICAgICAgIHJldHVybiBCZWEuY3JlYXRlR2RwT2JqZWN0KHR3b0RBcnJheU9mRGF0YSk7XG4gICAgfVxuXG5cbiAgICBzdGF0aWMgY3JlYXRlR2RwT2JqZWN0KGRhdGFBcnIpIHtcbiAgICAgICAgdmFyIG91dHB1dCA9IHt9O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGFBcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBrZXkgPSBkYXRhQXJyW2ldLlRpbWVQZXJpb2QgLSAyMDE3O1xuICAgICAgICAgICAgaWYob3V0cHV0W2tleV0pe1xuICAgICAgICAgICAgICAgIG91dHB1dFtrZXldW2RhdGFBcnJbaV0uR2VvTmFtZV0gPSBkYXRhQXJyW2ldLkRhdGFWYWx1ZVxuICAgICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgICAgIG91dHB1dFtrZXldID0ge307XG4gICAgICAgICAgICAgICAgb3V0cHV0W2tleV1bZGF0YUFycltpXS5HZW9OYW1lXSA9IGRhdGFBcnJbaV0uRGF0YVZhbHVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG5cblxuICAgIGdldFN0YXRlU3RhdHMoc3RhdGUsIGRhdGEsIHllYXIpIHtcbiAgICAgICAgbGV0IGdkcCA9IFtdXG5cbiAgICAgICAgaWYgKHllYXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgICAgICBnZHAucHVzaChkYXRhW2ldW3N0YXRlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgY3VycmVudFllYXIgPSBkYXRhW3llYXJdW3N0YXRlXVxuICAgICAgICAgICAgbGV0IGxhc3RZZWFyID0gZGF0YVsxXVtzdGF0ZV1cbiAgICAgICAgICAgIGdkcC5wdXNoKGN1cnJlbnRZZWFyKTtcbiAgICAgICAgICAgIGN1cnJlbnRZZWFyID4gbGFzdFllYXIgPyBnZHAucHVzaCgxKSA6IGdkcC5wdXNoKDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdkcFxuICAgIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBCZWE7XG4iXSwibmFtZXMiOlsiTElOS1MiLCJhcGlVdGlsIiwiQmVhIiwiY29uc3RydWN0b3IiLCJnZHBMaW5rIiwiT2JqZWN0IiwidmFsdWVzIiwiam9pbiIsInBlcnNvbmFsSW5jb21lTGluayIsImZldGNoRGF0YSIsImFwaUxpbmsiLCJkYXRhQXJyYXkiLCJmZXRjaEVuZHBvaW50IiwidHdvREFycmF5T2ZEYXRhIiwiY3JlYXRlR2RwT2JqZWN0IiwiZGF0YUFyciIsIm91dHB1dCIsImkiLCJsZW5ndGgiLCJrZXkiLCJUaW1lUGVyaW9kIiwiR2VvTmFtZSIsIkRhdGFWYWx1ZSIsImdldFN0YXRlU3RhdHMiLCJzdGF0ZSIsImRhdGEiLCJ5ZWFyIiwiZ2RwIiwidW5kZWZpbmVkIiwicHVzaCIsImN1cnJlbnRZZWFyIiwibGFzdFllYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/bea.js\n");

/***/ }),

/***/ "./src/scripts/census.js":
/*!*******************************!*\
  !*** ./src/scripts/census.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\n\n\nclass Census {\n  constructor() {\n    this.populationLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].population);\n    this.employmentLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].employment);\n  }\n  static async fetchData(links) {\n    let dataByYear = {};\n    dataByYear['data'] = links[0].includes('population') ? 'population' : 'employment';\n    for (let i = 0; i < 5; i++) {\n      let apiLink = links[i];\n      const dataArrayOfCurrYear = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n      const jsonData = JSON.parse(JSON.stringify(dataArrayOfCurrYear));\n      dataByYear[i] = Census.createPopulationObject(jsonData);\n    }\n    return dataByYear;\n  }\n  static createPopulationObject(data) {\n    let jsonObject;\n    if (Array.isArray(data) && data.length > 0) {\n      let keys = data[0]; // keys are the first row\n      keys = keys.map(key => key === 'POP_2021' || key === 'POP_2020' ? key = 'POP' : key);\n      jsonObject = data.slice(1).reduce((acc, item) => {\n        let nameIdx = keys.includes('NAME') ? keys.indexOf('NAME') : keys.indexOf(\"GEONAME\");\n        acc[item[nameIdx]] = keys.reduce((obj, key, index) => {\n          if (key !== 'NAME') {\n            obj[key] = item[index];\n          }\n          return obj;\n        }, {});\n        acc['dataType'] = keys[0];\n        return acc;\n      }, {});\n    }\n    return jsonObject;\n  }\n  getStateStats = (state, data, year) => {\n    let searchKey = this.searchKey(data);\n    if (year === undefined) {\n      return this.historicalData(state, data, searchKey);\n    } else {\n      return this.mostRecentYear(state, data, year, searchKey);\n    }\n  };\n  searchKey = data => {\n    let stateObj = data[0]['Alabama'];\n    return stateObj['TOT_EMP'] ? 'TOT_EMP' : 'POP';\n  };\n  mostRecentYear = (state, data, year, searchKey) => {\n    let outputData = [data[year][state][searchKey]];\n    let currentYear = parseInt(data[year][state][searchKey]);\n    let lastYear = parseInt(data[1][state][searchKey]);\n    let status = currentYear > lastYear ? 1 : 0;\n    outputData.push(status);\n    return outputData;\n  };\n  historicalData = (state, data, searchKey) => {\n    let outputData = [];\n    for (let i = 0; i < 5; i++) {\n      let statValue = data[i][state][searchKey];\n      if (statValue === undefined) continue;\n      outputData.push(statValue);\n    }\n\n    // let histObj = {\n    //     values: outputData,\n    //     dataType: data['data']\n    // }\n\n    return outputData;\n  };\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Census);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsRUFBRSxFQUFFO01BQ3hCLElBQUl1QyxTQUFTLEdBQUc5QixJQUFJLENBQUNULENBQUMsQ0FBQyxDQUFDMEIsS0FBSyxDQUFDLENBQUNFLFNBQVMsQ0FBQztNQUN6QyxJQUFJVyxTQUFTLEtBQUtWLFNBQVMsRUFBRTtNQUU3QkksVUFBVSxDQUFDSyxJQUFJLENBQUNDLFNBQVMsQ0FBQztJQUM5Qjs7SUFFQTtJQUNBO0lBQ0E7SUFDQTs7SUFFQSxPQUFPTixVQUFVO0VBQ3JCLENBQUM7QUFJTDtBQUVBLCtEQUFlM0MsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9zY3JpcHRzL2NlbnN1cy5qcz9iYjVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMSU5LUyBmcm9tICcuL2xpbmtzLmpzJztcbmltcG9ydCBhcGlVdGlsIGZyb20gJy4vYXBpVXRpbC5qcyc7XG5cbmNsYXNzIENlbnN1cyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucG9wdWxhdGlvbkxpbmtzID0gT2JqZWN0LnZhbHVlcyhMSU5LU1sncG9wdWxhdGlvbiddKTtcbiAgICAgICAgdGhpcy5lbXBsb3ltZW50TGlua3MgPSBPYmplY3QudmFsdWVzKExJTktTWydlbXBsb3ltZW50J10pO1xuICAgIH1cblxuICAgIHN0YXRpYyBhc3luYyBmZXRjaERhdGEobGlua3MpIHtcbiAgICAgICAgbGV0IGRhdGFCeVllYXIgPSB7fTtcbiAgICAgICAgZGF0YUJ5WWVhclsnZGF0YSddID0gbGlua3NbMF0uaW5jbHVkZXMoJ3BvcHVsYXRpb24nKSA/ICdwb3B1bGF0aW9uJyA6ICdlbXBsb3ltZW50JztcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xuICAgICAgICAgICAgbGV0IGFwaUxpbmsgPSBsaW5rc1tpXTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGFBcnJheU9mQ3VyclllYXIgPSBhd2FpdCBhcGlVdGlsLmZldGNoRW5kcG9pbnQoYXBpTGluayk7XG5cbiAgICAgICAgICAgIGNvbnN0IGpzb25EYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkYXRhQXJyYXlPZkN1cnJZZWFyKSk7XG4gICAgICAgICAgICBkYXRhQnlZZWFyW2ldID0gQ2Vuc3VzLmNyZWF0ZVBvcHVsYXRpb25PYmplY3QoanNvbkRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRhdGFCeVllYXI7XG4gICAgfVxuXG4gICAgc3RhdGljIGNyZWF0ZVBvcHVsYXRpb25PYmplY3QoZGF0YSkge1xuICAgICAgICBsZXQganNvbk9iamVjdDtcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSAmJiBkYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGxldCBrZXlzID0gZGF0YVswXTsgLy8ga2V5cyBhcmUgdGhlIGZpcnN0IHJvd1xuICAgICAgICAgICAga2V5cyA9IGtleXMubWFwKChrZXkpID0+IGtleSA9PT0gJ1BPUF8yMDIxJyB8fCBrZXkgPT09ICdQT1BfMjAyMCcgPyBrZXkgPSAnUE9QJyA6IGtleSk7XG5cbiAgICAgICAgICAgIGpzb25PYmplY3QgPSBkYXRhLnNsaWNlKDEpLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IG5hbWVJZHggPSBrZXlzLmluY2x1ZGVzKCdOQU1FJykgPyBrZXlzLmluZGV4T2YoJ05BTUUnKSA6IGtleXMuaW5kZXhPZihcIkdFT05BTUVcIik7XG4gICAgICAgICAgICAgICAgYWNjW2l0ZW1bbmFtZUlkeF1dID0ga2V5cy5yZWR1Y2UoKG9iaiwga2V5LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ICE9PSAnTkFNRScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ialtrZXldID0gaXRlbVtpbmRleF07XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICAgICAgICAgIH0sIHt9KTtcbiAgICAgICAgICAgICAgICBhY2NbJ2RhdGFUeXBlJ10gPSBrZXlzWzBdXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH0sIHt9KTtcbiAgICAgICAgfVxuXG4gICAgICAgcmV0dXJuIGpzb25PYmplY3Q7XG4gICAgfVxuXG4gICAgZ2V0U3RhdGVTdGF0cyA9IChzdGF0ZSwgZGF0YSwgeWVhcikgPT4ge1xuICAgICAgICBsZXQgc2VhcmNoS2V5ID0gdGhpcy5zZWFyY2hLZXkoZGF0YSk7XG5cbiAgICAgICAgaWYgKHllYXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGlzdG9yaWNhbERhdGEoc3RhdGUsIGRhdGEsIHNlYXJjaEtleSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5tb3N0UmVjZW50WWVhcihzdGF0ZSwgZGF0YSwgeWVhciwgc2VhcmNoS2V5KVxuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICAgc2VhcmNoS2V5ID0gKGRhdGEpID0+IHtcbiAgICAgICAgbGV0IHN0YXRlT2JqID0gZGF0YVswXVsnQWxhYmFtYSddXG4gICAgICAgIHJldHVybiBzdGF0ZU9ialsnVE9UX0VNUCddID8gJ1RPVF9FTVAnIDogJ1BPUCc7XG4gICAgfVxuXG5cbiAgICBtb3N0UmVjZW50WWVhciA9IChzdGF0ZSwgZGF0YSwgeWVhciwgc2VhcmNoS2V5KSA9PiB7XG4gICAgICAgICAgICBsZXQgb3V0cHV0RGF0YSA9IFtkYXRhW3llYXJdW3N0YXRlXVtzZWFyY2hLZXldXTtcblxuICAgICAgICAgICAgbGV0IGN1cnJlbnRZZWFyID0gcGFyc2VJbnQoZGF0YVt5ZWFyXVtzdGF0ZV1bc2VhcmNoS2V5XSk7XG4gICAgICAgICAgICBsZXQgbGFzdFllYXIgPSBwYXJzZUludChkYXRhWzFdW3N0YXRlXVtzZWFyY2hLZXldKTtcblxuICAgICAgICAgICAgbGV0IHN0YXR1cyA9IGN1cnJlbnRZZWFyID4gbGFzdFllYXIgPyAxIDogMFxuICAgICAgICAgICAgb3V0cHV0RGF0YS5wdXNoKHN0YXR1cyk7XG5cbiAgICAgICAgICAgIHJldHVybiBvdXRwdXREYXRhO1xuICAgIH1cblxuXG4gICAgaGlzdG9yaWNhbERhdGEgPSAoc3RhdGUsIGRhdGEsIHNlYXJjaEtleSkgPT4ge1xuICAgICAgICBsZXQgb3V0cHV0RGF0YSA9IFtdO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNTsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgc3RhdFZhbHVlID0gZGF0YVtpXVtzdGF0ZV1bc2VhcmNoS2V5XTtcbiAgICAgICAgICAgIGlmIChzdGF0VmFsdWUgPT09IHVuZGVmaW5lZCkgY29udGludWU7XG5cbiAgICAgICAgICAgIG91dHB1dERhdGEucHVzaChzdGF0VmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gbGV0IGhpc3RPYmogPSB7XG4gICAgICAgIC8vICAgICB2YWx1ZXM6IG91dHB1dERhdGEsXG4gICAgICAgIC8vICAgICBkYXRhVHlwZTogZGF0YVsnZGF0YSddXG4gICAgICAgIC8vIH1cblxuICAgICAgICByZXR1cm4gb3V0cHV0RGF0YTtcbiAgICB9XG5cblxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IENlbnN1cztcbiJdLCJuYW1lcyI6WyJMSU5LUyIsImFwaVV0aWwiLCJDZW5zdXMiLCJjb25zdHJ1Y3RvciIsInBvcHVsYXRpb25MaW5rcyIsIk9iamVjdCIsInZhbHVlcyIsImVtcGxveW1lbnRMaW5rcyIsImZldGNoRGF0YSIsImxpbmtzIiwiZGF0YUJ5WWVhciIsImluY2x1ZGVzIiwiaSIsImFwaUxpbmsiLCJkYXRhQXJyYXlPZkN1cnJZZWFyIiwiZmV0Y2hFbmRwb2ludCIsImpzb25EYXRhIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiY3JlYXRlUG9wdWxhdGlvbk9iamVjdCIsImRhdGEiLCJqc29uT2JqZWN0IiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwia2V5cyIsIm1hcCIsImtleSIsInNsaWNlIiwicmVkdWNlIiwiYWNjIiwiaXRlbSIsIm5hbWVJZHgiLCJpbmRleE9mIiwib2JqIiwiaW5kZXgiLCJnZXRTdGF0ZVN0YXRzIiwic3RhdGUiLCJ5ZWFyIiwic2VhcmNoS2V5IiwidW5kZWZpbmVkIiwiaGlzdG9yaWNhbERhdGEiLCJtb3N0UmVjZW50WWVhciIsInN0YXRlT2JqIiwib3V0cHV0RGF0YSIsImN1cnJlbnRZZWFyIiwicGFyc2VJbnQiLCJsYXN0WWVhciIsInN0YXR1cyIsInB1c2giLCJzdGF0VmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/census.js\n");

/***/ }),

/***/ "./src/scripts/links.js":
/*!******************************!*\
  !*** ./src/scripts/links.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst LINKS = {\n  'population': {\n    0: 'https://api.census.gov/data/2021/pep/population?get=POP_2021,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/2021/pep/population?get=POP_2020,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/2019/pep/population?get=POP,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/2018/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/2017/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'employment': {\n    0: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2021&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2020&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2019&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2018&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2017&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'gdp': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=1&TableName=CAGDP2&ResultFormat=JSON',\n  'personalIncome': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=30&TableName=SAINC50&Year=2017,2018,2019,2020,2021&ResultFormat=JSON'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (LINKS);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9saW5rcy5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsS0FBSyxHQUFHO0VBQ1YsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLDRIQUE0SDtJQUMvSCxDQUFDLEVBQUUsNEhBQTRIO0lBQy9ILENBQUMsRUFBRSx1SEFBdUg7SUFDMUgsQ0FBQyxFQUFFLDBIQUEwSDtJQUM3SCxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUUsaUlBQWlJO0lBQ3BJLENBQUMsRUFBRSxpSUFBaUk7SUFDcEksQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsS0FBSyxFQUFFLDRLQUE0SztFQUNuTCxnQkFBZ0IsRUFBRTtBQUN0QixDQUFDO0FBRUQsK0RBQWVBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9saW5rcy5qcz8yZTYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IExJTktTID0ge1xuICAgICdwb3B1bGF0aW9uJzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIxLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAxOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIwLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAyOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMTkvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUCxOQU1FJmZvcj1zdGF0ZToqJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMzogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS8yMDE4L3BlcC9wb3B1bGF0aW9uP2dldD1QT1AsR0VPTkFNRSZmb3I9c3RhdGU6KiZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvMjAxNy9wZXAvcG9wdWxhdGlvbj9nZXQ9UE9QLEdFT05BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnXG4gICAgfSxcblxuICAgICdlbXBsb3ltZW50Jzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAyMSZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDE6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDIwJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMjogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS90aW1lc2VyaWVzL2dvdnM/Z2V0PU5BTUUsVE9UX0VNUCZmb3I9c3RhdGU6KiZ0aW1lPTIwMTkma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAzOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAxOCZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDE3JmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJ1xuICAgIH0sXG5cbiAgICAnZ2RwJzogJ2h0dHBzOi8vYXBwcy5iZWEuZ292L2FwaS9kYXRhPyZVc2VySUQ9NjNEMDdEMEItODc0NC00MTlELTgyMUMtNjU2Q0IxMTIzOUQyJm1ldGhvZD1nZXRkYXRhJmRhdGFzZXRuYW1lPVJlZ2lvbmFsJkdlb0ZpcHM9U1RBVEUmTGluZUNvZGU9MSZUYWJsZU5hbWU9Q0FHRFAyJlJlc3VsdEZvcm1hdD1KU09OJyxcbiAgICAncGVyc29uYWxJbmNvbWUnOiAnaHR0cHM6Ly9hcHBzLmJlYS5nb3YvYXBpL2RhdGE/JlVzZXJJRD02M0QwN0QwQi04NzQ0LTQxOUQtODIxQy02NTZDQjExMjM5RDImbWV0aG9kPWdldGRhdGEmZGF0YXNldG5hbWU9UmVnaW9uYWwmR2VvRmlwcz1TVEFURSZMaW5lQ29kZT0zMCZUYWJsZU5hbWU9U0FJTkM1MCZZZWFyPTIwMTcsMjAxOCwyMDE5LDIwMjAsMjAyMSZSZXN1bHRGb3JtYXQ9SlNPTidcbn1cblxuZXhwb3J0IGRlZmF1bHQgTElOS1M7XG4iXSwibmFtZXMiOlsiTElOS1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/links.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./src/scripts/state.js\");\n\nfunction map(us, stats, statesObject, setupLineChart) {\n  var selection = d3.select(\"#smap\");\n  let width = selection._groups[0][0].clientWidth - 10;\n  const height = selection._groups[0][0].clientHeight - 10;\n  const path = d3.geoPath();\n  function zoomed(event) {\n    const {\n      transform\n    } = event;\n    g.attr(\"transform\", transform);\n    g.attr(\"stroke-width\", 1 / transform.k);\n  }\n  const svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]).on(\"click\", reset);\n  const bBox = path.bounds(topojson.feature(us, us.objects.states));\n  const scale = 0.95 / Math.max((bBox[1][0] - bBox[0][0]) / width, (bBox[1][1] - bBox[0][1]) / height);\n  const translate = [(width - scale * (bBox[1][0] + bBox[0][0])) / 2, (height - scale * (bBox[1][1] + bBox[0][1])) / 2];\n  const zoom = d3.zoom().scaleExtent([scale, 8]) // Set the minimum scale to the calculated scale\n  .on(\"zoom\", zoomed);\n  const g = svg.append(\"g\");\n  g.attr(\"transform\", `translate(${translate}) scale(${scale})`);\n  const states = g.append(\"g\").style(\"fill\", \"#29DEF2\").attr(\"fill\", \"#172573\").attr(\"cursor\", \"pointer\").selectAll(\"path\").data(topojson.feature(us, us.objects.states).features).join(\"path\").on(\"click\", clicked).attr(\"d\", path);\n  states.append(\"title\").text(d => d.properties.name);\n  g.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"black\").attr(\"stroke-linejoin\", \"round\").attr(\"d\", path(topojson.mesh(us, us.objects.states, (a, b) => a !== b)));\n  svg.call(zoom);\n  svg.call(zoom.transform, d3.zoomIdentity.translate(translate[0], translate[1]).scale(scale));\n  function reset() {\n    states.transition().style(\"fill\", \"#404040\");\n    svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(translate[0], translate[1]).scale(scale));\n  }\n  function clicked(event, d) {\n    const [[x0, y0], [x1, y1]] = path.bounds(d);\n    event.stopPropagation();\n    states.transition().style(\"fill\", \"#262626\");\n    d3.select(this).transition().style(\"fill\", \"#29DEF2\");\n    svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(width / 2, height / 2).scale(Math.min(3, 0.4 / Math.max((x1 - x0) / width, (y1 - y0) / height))).translate(-(x0 + x1) / 2, -(y0 + y1) / 2), d3.pointer(event, svg.node()));\n    let clickedStateName = d.properties.name;\n    let clickedState = statesObject[clickedStateName];\n    stats.update(clickedState);\n  }\n  return svg.node();\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (map);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/scripts/state.js":
/*!******************************!*\
  !*** ./src/scripts/state.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass State {\n  static setupStates(data) {\n    let states = {};\n    let names = State.stateNames();\n    for (let i = 0; i < 50; i++) {\n      data['name'] = names[i];\n      states[names[i]] = new State(names[i], data);\n    }\n    return states;\n  }\n  constructor(name, data) {\n    this.name = name;\n    let populationArray = data.getStatsCensus(name, data.populationHistorical, 0);\n    this.population = (parseInt(populationArray[0]) / 1000000).toFixed(2);\n    this.populationStatus = populationArray[1];\n    this.populationHist = data.getStatsCensus(name, data.populationHistorical);\n    let employmentArray = data.getStatsCensus(name, data.employmentHistorical, 0);\n    this.employment = (parseInt(employmentArray[0]) / parseInt(populationArray[0]) * 100).toFixed(2);\n    //     (parseInt((employmentArray[0])) / 1000).toFixed(2);\n    this.employmentStatus = employmentArray[1];\n    this.employmentHist = data.getStatsCensus(name, data.employmentHistorical);\n    let gdpArray = data.getStatsBea(name, data.gdpHistorical, 4);\n    this.gdp = (parseInt(gdpArray[0].split(',').join('')) / 1000000).toFixed(2);\n    this.gdpStatus = gdpArray[1];\n    this.gdpHist = data.getStatsBea(name, data.gdpHistorical);\n    let personalIncomeArray = data.getStatsBea(name, data.personalIncomeHistorical, 4);\n    this.personalincome = personalIncomeArray[0];\n    this.personalIncomeStatus = personalIncomeArray[1];\n    this.personalIncomeHist = data.getStatsBea(name, data.personalIncomeHistorical);\n  }\n  static stateNames = () => {\n    return ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n  };\n  static setUpLineChartHistorical = function (dataArrayFiveYears) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'US';\n    let dates = ['2021-04-02', '2020-04-02', '2019-04-02', '2018-04-02', '2017-04-02'];\n    let historicalData = [];\n    dataArrayFiveYears.forEach((ele, i) => {\n      let lineData = {};\n\n      // let presentOfTotal = (parseInt(ele) / window['usTotal'][i] * 100).toFixed(10);\n      // lineData[window['chartCategory']] = parseFloat(presentOfTotal);\n      lineData['date'] = new Date(dates[i]);\n      lineData[window['chartCategory']] = parseInt(ele) / 1000000;\n      lineData['state'] = name;\n      historicalData.push(lineData);\n    });\n    return historicalData;\n  };\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxRQUFRLEdBQUcsQ0FBQyxDQUFDOztNQUVqQjtNQUNBO01BQ0FBLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJQyxJQUFJLENBQUNMLEtBQUssQ0FBQy9CLENBQUMsQ0FBQyxDQUFDO01BQ3JDbUMsUUFBUSxDQUFDRSxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRzlCLFFBQVEsQ0FBQzJCLEdBQUcsQ0FBQyxHQUFHLE9BQU87TUFDM0RDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBR2pDLElBQUk7TUFFeEI4QixjQUFjLENBQUNNLElBQUksQ0FBQ0gsUUFBUSxDQUFDO0lBQ3JDLENBQUMsQ0FBQztJQUVGLE9BQU9ILGNBQWM7RUFDN0IsQ0FBQztBQUNUO0FBR0EsK0RBQWV0QyxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvc3RhdGUuanM/YTNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTdGF0ZSB7XG4gICAgICAgIHN0YXRpYyBzZXR1cFN0YXRlcyhkYXRhKSB7XG4gICAgICAgICAgICAgICAgbGV0IHN0YXRlcyA9IHt9O1xuICAgICAgICAgICAgICAgIGxldCBuYW1lcyA9IFN0YXRlLnN0YXRlTmFtZXMoKTtcblxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNTA7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVsnbmFtZSddID0gbmFtZXNbaV07XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZXNbbmFtZXNbaV1dID0gbmV3IFN0YXRlKG5hbWVzW2ldLCBkYXRhKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgIHJldHVybiBzdGF0ZXM7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdHJ1Y3RvcihuYW1lLCBkYXRhKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuXG4gICAgICAgICAgICBsZXQgcG9wdWxhdGlvbkFycmF5ID0gZGF0YS5nZXRTdGF0c0NlbnN1cyhuYW1lLCBkYXRhLnBvcHVsYXRpb25IaXN0b3JpY2FsLCAwKTtcbiAgICAgICAgICAgIHRoaXMucG9wdWxhdGlvbiA9IChwYXJzZUludCgocG9wdWxhdGlvbkFycmF5WzBdKSkgLyAxMDAwMDAwKS50b0ZpeGVkKDIpO1xuICAgICAgICAgICAgdGhpcy5wb3B1bGF0aW9uU3RhdHVzID0gcG9wdWxhdGlvbkFycmF5WzFdO1xuICAgICAgICAgICAgdGhpcy5wb3B1bGF0aW9uSGlzdCA9IGRhdGEuZ2V0U3RhdHNDZW5zdXMobmFtZSwgZGF0YS5wb3B1bGF0aW9uSGlzdG9yaWNhbCk7XG5cblxuICAgICAgICAgICAgbGV0IGVtcGxveW1lbnRBcnJheSA9IGRhdGEuZ2V0U3RhdHNDZW5zdXMobmFtZSwgZGF0YS5lbXBsb3ltZW50SGlzdG9yaWNhbCwgMCk7XG4gICAgICAgICAgICB0aGlzLmVtcGxveW1lbnQgPSAocGFyc2VJbnQoKGVtcGxveW1lbnRBcnJheVswXSkpIC8gcGFyc2VJbnQocG9wdWxhdGlvbkFycmF5WzBdKSAqIDEwMCkudG9GaXhlZCgyKVxuICAgICAgICAvLyAgICAgKHBhcnNlSW50KChlbXBsb3ltZW50QXJyYXlbMF0pKSAvIDEwMDApLnRvRml4ZWQoMik7XG4gICAgICAgICAgICB0aGlzLmVtcGxveW1lbnRTdGF0dXMgPSBlbXBsb3ltZW50QXJyYXlbMV07XG4gICAgICAgICAgICB0aGlzLmVtcGxveW1lbnRIaXN0ID0gZGF0YS5nZXRTdGF0c0NlbnN1cyhuYW1lLCBkYXRhLmVtcGxveW1lbnRIaXN0b3JpY2FsKTtcblxuICAgICAgICAgICAgbGV0IGdkcEFycmF5ID0gZGF0YS5nZXRTdGF0c0JlYShuYW1lLCBkYXRhLmdkcEhpc3RvcmljYWwsIDQpO1xuICAgICAgICAgICAgdGhpcy5nZHAgPSAocGFyc2VJbnQoKGdkcEFycmF5WzBdLnNwbGl0KCcsJykuam9pbignJykpKSAvIDEwMDAwMDApLnRvRml4ZWQoMik7XG4gICAgICAgICAgICB0aGlzLmdkcFN0YXR1cyA9IGdkcEFycmF5WzFdO1xuICAgICAgICAgICAgdGhpcy5nZHBIaXN0ID0gZGF0YS5nZXRTdGF0c0JlYShuYW1lLCBkYXRhLmdkcEhpc3RvcmljYWwpXG5cbiAgICAgICAgICAgIGxldCBwZXJzb25hbEluY29tZUFycmF5ID0gZGF0YS5nZXRTdGF0c0JlYShuYW1lLCBkYXRhLnBlcnNvbmFsSW5jb21lSGlzdG9yaWNhbCwgNCk7XG4gICAgICAgICAgICB0aGlzLnBlcnNvbmFsaW5jb21lID0gcGVyc29uYWxJbmNvbWVBcnJheVswXTtcbiAgICAgICAgICAgIHRoaXMucGVyc29uYWxJbmNvbWVTdGF0dXMgPSBwZXJzb25hbEluY29tZUFycmF5WzFdO1xuICAgICAgICAgICAgdGhpcy5wZXJzb25hbEluY29tZUhpc3QgPSBkYXRhLmdldFN0YXRzQmVhKG5hbWUsIGRhdGEucGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRpYyBzdGF0ZU5hbWVzID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBbJ0FsYWJhbWEnLCAnQWxhc2thJywgJ0FyaXpvbmEnLCAnQXJrYW5zYXMnLCAnQ2FsaWZvcm5pYScsICdDb2xvcmFkbycsICdDb25uZWN0aWN1dCcsICdEZWxhd2FyZScsICdGbG9yaWRhJywgJ0dlb3JnaWEnLCAnSGF3YWlpJywgJ0lkYWhvJywgJ0lsbGlub2lzJywgJ0luZGlhbmEnLCAnSW93YScsICdLYW5zYXMnLCAnS2VudHVja3knLCAnTG91aXNpYW5hJywgJ01haW5lJywgJ01hcnlsYW5kJywgJ01hc3NhY2h1c2V0dHMnLCAnTWljaGlnYW4nLCAnTWlubmVzb3RhJywgJ01pc3Npc3NpcHBpJywgJ01pc3NvdXJpJywgJ01vbnRhbmEnLCAnTmVicmFza2EnLCAnTmV2YWRhJywgJ05ldyBIYW1wc2hpcmUnLCAnTmV3IEplcnNleScsICdOZXcgTWV4aWNvJywgJ05ldyBZb3JrJywgJ05vcnRoIENhcm9saW5hJywgJ05vcnRoIERha290YScsICdPaGlvJywgJ09rbGFob21hJywgJ09yZWdvbicsICdQZW5uc3lsdmFuaWEnLCAnUmhvZGUgSXNsYW5kJywgJ1NvdXRoIENhcm9saW5hJywgJ1NvdXRoIERha290YScsICdUZW5uZXNzZWUnLCAnVGV4YXMnLCAnVXRhaCcsICdWZXJtb250JywgJ1ZpcmdpbmlhJywgJ1dhc2hpbmd0b24nLCAnV2VzdCBWaXJnaW5pYScsICdXaXNjb25zaW4nLCAnV3lvbWluZyddXG4gICAgICAgIH1cblxuXG4gICAgICAgIHN0YXRpYyBzZXRVcExpbmVDaGFydEhpc3RvcmljYWwgPSAoZGF0YUFycmF5Rml2ZVllYXJzLCBuYW1lPSdVUycpID0+IHtcblxuICAgICAgICAgICAgICAgIGxldCBkYXRlcyA9IFsnMjAyMS0wNC0wMicsICcyMDIwLTA0LTAyJywgJzIwMTktMDQtMDInLCAnMjAxOC0wNC0wMicsICcyMDE3LTA0LTAyJ11cbiAgICAgICAgICAgICAgICBsZXQgaGlzdG9yaWNhbERhdGEgPSBbXTtcblxuICAgICAgICAgICAgICAgIGRhdGFBcnJheUZpdmVZZWFycy5mb3JFYWNoKChlbGUsIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBsaW5lRGF0YSA9IHt9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBsZXQgcHJlc2VudE9mVG90YWwgPSAocGFyc2VJbnQoZWxlKSAvIHdpbmRvd1sndXNUb3RhbCddW2ldICogMTAwKS50b0ZpeGVkKDEwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxpbmVEYXRhW3dpbmRvd1snY2hhcnRDYXRlZ29yeSddXSA9IHBhcnNlRmxvYXQocHJlc2VudE9mVG90YWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGluZURhdGFbJ2RhdGUnXSA9IG5ldyBEYXRlKGRhdGVzW2ldKVxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZURhdGFbd2luZG93WydjaGFydENhdGVnb3J5J11dID0gcGFyc2VJbnQoZWxlKSAvIDEwMDAwMDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lRGF0YVsnc3RhdGUnXSA9IG5hbWU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGhpc3RvcmljYWxEYXRhLnB1c2gobGluZURhdGEpXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gaGlzdG9yaWNhbERhdGE7XG4gICAgICAgIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTdGF0ZTtcbiJdLCJuYW1lcyI6WyJTdGF0ZSIsInNldHVwU3RhdGVzIiwiZGF0YSIsInN0YXRlcyIsIm5hbWVzIiwic3RhdGVOYW1lcyIsImkiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJwb3B1bGF0aW9uQXJyYXkiLCJnZXRTdGF0c0NlbnN1cyIsInBvcHVsYXRpb25IaXN0b3JpY2FsIiwicG9wdWxhdGlvbiIsInBhcnNlSW50IiwidG9GaXhlZCIsInBvcHVsYXRpb25TdGF0dXMiLCJwb3B1bGF0aW9uSGlzdCIsImVtcGxveW1lbnRBcnJheSIsImVtcGxveW1lbnRIaXN0b3JpY2FsIiwiZW1wbG95bWVudCIsImVtcGxveW1lbnRTdGF0dXMiLCJlbXBsb3ltZW50SGlzdCIsImdkcEFycmF5IiwiZ2V0U3RhdHNCZWEiLCJnZHBIaXN0b3JpY2FsIiwiZ2RwIiwic3BsaXQiLCJqb2luIiwiZ2RwU3RhdHVzIiwiZ2RwSGlzdCIsInBlcnNvbmFsSW5jb21lQXJyYXkiLCJwZXJzb25hbEluY29tZUhpc3RvcmljYWwiLCJwZXJzb25hbGluY29tZSIsInBlcnNvbmFsSW5jb21lU3RhdHVzIiwicGVyc29uYWxJbmNvbWVIaXN0Iiwic2V0VXBMaW5lQ2hhcnRIaXN0b3JpY2FsIiwiZGF0YUFycmF5Rml2ZVllYXJzIiwiZGF0ZXMiLCJoaXN0b3JpY2FsRGF0YSIsImZvckVhY2giLCJlbGUiLCJsaW5lRGF0YSIsIkRhdGUiLCJ3aW5kb3ciLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/state.js\n");

/***/ }),

/***/ "./src/scripts/stats.js":
/*!******************************!*\
  !*** ./src/scripts/stats.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./src/scripts/state.js\");\n\nclass Stats {\n  constructor(divEl, states) {\n    this.divEl = divEl;\n    this.state = states['Alabama'];\n    divEl.appendChild(this.setUpStats(this.state));\n  }\n  setUpStats(state) {\n    let ul = document.createElement('ul');\n    let i = 0;\n    let suffix = ['Mln', 'K'];\n    for (let key in state) {\n      if (key === 'setUpLineChartHistorical') continue;\n      let lastFourLetters = key.slice(key.length - 4);\n      let lastSixLetters = key.slice(key.length - 6);\n      if (lastFourLetters === 'Hist') continue;\n      if (lastSixLetters === 'Status') continue;\n      let liEl = document.createElement('li');\n      let divName = document.createElement('div');\n      let divValue = document.createElement('div');\n      let capitalizeName = key.toUpperCase();\n      let statsValue = state[key];\n      divName.innerHTML = capitalizeName;\n      divValue.innerHTML = statsValue;\n      this.setValueColor(state, key, divValue);\n      liEl.appendChild(divName);\n      liEl.appendChild(divValue);\n      liEl.setAttribute('class', 'stats-item');\n      if (i !== 0) {\n        let divSuffix = document.createElement('div');\n        let index = i % 2 === 0 ? 1 : 0;\n        if (capitalizeName === 'EMPLOYMENT') {\n          divSuffix.innerHTML = '%';\n        } else {\n          divSuffix.innerHTML = suffix[index];\n        }\n\n        // divSuffix.style = 'font-size: 10px';\n        // divSuffix.style = 'height: 100hv';\n\n        liEl.appendChild(divSuffix);\n      }\n      if (i > 0) {\n        liEl.classList.add('class', 'selectable');\n      }\n      ul.appendChild(liEl);\n      i++;\n    }\n    ul.setAttribute('id', 'stats-ul');\n    return ul;\n  }\n  update(state) {\n    let lis = document.querySelectorAll('#stats ul li');\n    // Object.keys(state).forEach((key, i) => {\n\n    for (let i = 0; i < lis.length; i++) {\n      let innerElements = lis[i].querySelectorAll('div');\n      let stateAttribute = innerElements[0].innerText.toLowerCase();\n      let divValue = lis[i].querySelectorAll('div')[1];\n      this.setValueColor(state, stateAttribute, divValue);\n      divValue.innerHTML = `${state[stateAttribute]}`;\n    }\n  }\n  setValueColor(state, key, divValue) {\n    if (key !== 'name') {\n      let status = state[key + 'Status'];\n      status || state[status] === 1 ? divValue.style = 'color: green' : divValue.style = 'color: red';\n    }\n  }\n  chartData(data) {\n    window['usTotal'] = [];\n    this.setCategory();\n    let category = window['chartCategory'];\n    let getStatsCensusHist = data['getStatsCensus']; // TODO: Determine which data api endpoint to use\n\n    let allStatesHistValuesAllYears = [];\n    Object.keys(data[category][0]).forEach(stateName => {\n      if (stateName !== 'dataType') {\n        allStatesHistValuesAllYears.push(getStatsCensusHist(stateName, data[category]));\n      }\n    });\n    let totalHistValuesAllYears = [];\n    for (let i = 0; i < 5; i++) {\n      let count = 0;\n      allStatesHistValuesAllYears.forEach(stateHistValues => {\n        count += parseInt(stateHistValues[i]);\n      });\n      window['usTotal'].push(count);\n      totalHistValuesAllYears.push(Math.round(count / 52));\n    }\n    return _state__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setUpLineChartHistorical(totalHistValuesAllYears);\n  }\n  setCategory() {\n    if (window['chartCategory'] === undefined) {\n      window['chartCategory'] = 'populationHistorical';\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stats);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/stats.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;