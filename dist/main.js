/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/lineChart.js":
/*!***************************!*\
  !*** ./dist/lineChart.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction LineChart(data) {\n  let {\n    x = _ref => {\n      let [x] = _ref;\n      return x;\n    },\n    // given d in data, returns the (temporal) x-value\n    y = _ref2 => {\n      let [, y] = _ref2;\n      return y;\n    },\n    // given d in data, returns the (quantitative) y-value\n    z = () => 1,\n    // given d in data, returns the (categorical) z-value\n    title,\n    // given d in data, returns the title text\n    defined,\n    // for gaps in data\n    curve = d3.curveLinear,\n    // method of interpolation between points\n    marginTop = 50,\n    // top margin, in pixels\n    marginRight = 60,\n    // right margin, in pixels\n    marginBottom = 50,\n    // bottom margin, in pixels\n    marginLeft = 70,\n    // left margin, in pixels\n    width = 640,\n    // outer width, in pixels\n    height = 400,\n    // outer height, in pixels\n    xType = d3.scaleUtc,\n    // type of x-scale\n    xDomain,\n    // [xmin, xmax]\n    xRange = [marginLeft, width - marginRight],\n    // [left, right]\n    yType = d3.scaleLinear,\n    // type of y-scale\n    yDomain,\n    // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop],\n    // [bottom, top]\n    yFormat,\n    // a format specifier string for the y-axis\n    yLabel,\n    // a label for the y-axis\n    zDomain,\n    // array of z-values\n    color = \"green\",\n    // stroke color of line, as a constant or a function of *z*\n    strokeLinecap,\n    // stroke line cap of line\n    strokeLinejoin,\n    // stroke line join of line\n    strokeWidth = 2.5,\n    // stroke width of line\n    strokeOpacity,\n    // stroke opacity of line\n    mixBlendMode = \"multiply\",\n    // blend mode of lines\n    voronoi // show a Voronoi overlay? (for debugging)\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Compute values.\n  // debugger\n  const X = d3.map(data, x);\n  const Y = d3.map(data, y);\n  const Z = d3.map(data, z);\n  const O = d3.map(data, d => d);\n  if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n  const D = d3.map(data, defined);\n\n  // Compute default domains, and unique the z-domain.\n  if (xDomain === undefined) xDomain = d3.extent(X);\n  if (yDomain === undefined) yDomain = [0, d3.max(Y, d => typeof d === \"string\" ? +d : d)];\n  if (zDomain === undefined) zDomain = Z;\n  zDomain = new d3.InternSet(zDomain);\n\n  // Omit any data not present in the z-domain.\n  const I = d3.range(X.length).filter(i => zDomain.has(Z[i]));\n\n  // Construct scales and axes.\n  const xScale = xType(xDomain, xRange);\n  const yScale = yType(yDomain, yRange);\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 60, yFormat);\n\n  // Compute titles.\n  const T = title === undefined ? Z : title === null ? null : d3.map(data, title);\n\n  // Construct a line generator.\n  const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").style(\"-webkit-tap-highlight-color\", \"transparent\").on(\"pointerenter\", pointerentered).on(\"pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n\n  // An optional Voronoi display (for fun).\n  if (voronoi) svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"green\").attr(\"d\", d3.Delaunay.from(I, i => xScale(X[i]), i => yScale(Y[i])).voronoi([0, 0, width, height]).render());\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).call(xAxis);\n\n  // Y axis\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).attr(\"font-size\", 13) // font size of y-axis\n  .call(g => g.select(\".domain\").remove()).call(voronoi ? () => {} : g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft - 70).attr(\"y\", -marginRight + 10).attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"green\").attr(\"text-anchor\", \"start\").text(yLabel));\n  const path = svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke\", typeof color === \"string\" ? color : null).attr(\"stroke-linecap\", strokeLinecap).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-width\", strokeWidth).attr(\"stroke-opacity\", strokeOpacity).selectAll(\"path\").data(d3.group(I, i => Z[i])).join(\"path\").style(\"mix-blend-mode\", mixBlendMode).attr(\"stroke\", typeof color === \"function\" ? _ref3 => {\n    let [z] = _ref3;\n    return color(z);\n  } : null).attr(\"d\", _ref4 => {\n    let [, I] = _ref4;\n    return line(I);\n  });\n  const dot = svg.append(\"g\").attr(\"display\", \"none\");\n  dot.append(\"circle\").attr(\"r\", 3.5).attr(\"fill\", \"yellow\");\n  dot.append(\"text\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 15).attr(\"fill\", \"white\").attr(\"text-anchor\", \"middle\").attr(\"y\", -8);\n  function pointermoved(event) {\n    const [xm, ym] = d3.pointer(event);\n    const i = d3.least(I, i => Math.hypot(xScale(X[i]) - xm, yScale(Y[i]) - ym)); // closest point\n    path.style(\"stroke\", _ref5 => {\n      let [z] = _ref5;\n      return Z[i] === z ? null : \"#ddd\";\n    }).filter(_ref6 => {\n      let [z] = _ref6;\n      return Z[i] === z;\n    }).raise();\n    dot.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n    if (T) dot.select(\"text\").text(T[i]);\n    svg.property(\"value\", O[i]).dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  function pointerentered() {\n    path.style(\"mix-blend-mode\", null).style(\"stroke\", \"#ddd\");\n    dot.attr(\"display\", null);\n  }\n  function pointerleft() {\n    path.style(\"mix-blend-mode\", mixBlendMode).style(\"stroke\", null);\n    dot.attr(\"display\", \"none\");\n    svg.node().value = null;\n    svg.dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  return Object.assign(svg.node(), {\n    value: null\n  });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (LineChart);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dist/lineChart.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/map */ \"./src/scripts/map.js\");\n/* harmony import */ var _scripts_census__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/census */ \"./src/scripts/census.js\");\n/* harmony import */ var _scripts_bea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/bea */ \"./src/scripts/bea.js\");\n/* harmony import */ var _scripts_stats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/stats */ \"./src/scripts/stats.js\");\n/* harmony import */ var _scripts_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/state */ \"./src/scripts/state.js\");\n/* harmony import */ var _dist_lineChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dist/lineChart */ \"./dist/lineChart.js\");\n\n\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const mapDiv = document.getElementById('map');\n  const statsEl = document.getElementById('stats');\n  mapDiv.style.width = '100%';\n\n  // Load map\n  const res = await fetch(`https://cdn.jsdelivr.net/npm/us-atlas@3/states-albers-10m.json`);\n  const mapJson = await res.json();\n\n  // Fetch and setup data\n  const data = await setupData();\n  const states = _scripts_state__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setupStates(data);\n  const stats = new _scripts_stats__WEBPACK_IMPORTED_MODULE_3__[\"default\"](statsEl, states);\n  const loadMap = (0,_scripts_map__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mapJson, stats, states);\n  mapDiv.appendChild(loadMap);\n  let alabama = states['Alabama'].populationHist;\n  let chartInput = [];\n  alabama.forEach((ele, i) => {\n    let obj = {};\n    let date = new Date(`2000-0${i + 1}-01`);\n    obj['date'] = date;\n    obj['population'] = parseInt(ele.slice(0, 3));\n    obj['state'] = 'Alabama';\n    chartInput.push(obj);\n  });\n  let chart = (0,_dist_lineChart__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(chartInput, {\n    x: d => d.date,\n    y: d => d.population,\n    z: d => d.state,\n    yDomain: [450, 550],\n    yLabel: \"↑ Unemployment (%)\",\n    height: 500,\n    width: 500,\n    color: \"gray\"\n  });\n  let bar = document.getElementById('chart');\n  bar.appendChild(chart);\n});\nconst setupData = async () => {\n  const census = new _scripts_census__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  const bea = new _scripts_bea__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  const populationHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(census.populationLinks);\n  const employmentHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(census.employmentLinks);\n  const gdpHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchData(bea.gdpLink);\n  const personalIncomeHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_2__[\"default\"].fetchData(bea.personalIncomeLink);\n  const data = {\n    'name': '',\n    'populationHistorical': populationHistorical,\n    'employmentHistorical': employmentHistorical,\n    'gdpHistorical': gdpHistorical,\n    'personalIncomeHistorical': personalIncomeHistorical,\n    'getStatsCensus': census.getStateStats,\n    'getStatsBea': bea.getStateStats\n  };\n  return data;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxhQUFhLEdBQUcsTUFBTXRELDhEQUFhLENBQUNnRCxHQUFHLENBQUNPLE9BQU8sQ0FBQztFQUN0RCxNQUFNQyx3QkFBd0IsR0FBRyxNQUFNeEQsOERBQWEsQ0FBQ2dELEdBQUcsQ0FBQ1Msa0JBQWtCLENBQUM7RUFFNUUsTUFBTXpDLElBQUksR0FBRztJQUNYLE1BQU0sRUFBRSxFQUFFO0lBQ1Ysc0JBQXNCLEVBQUVpQyxvQkFBb0I7SUFDNUMsc0JBQXNCLEVBQUVHLG9CQUFvQjtJQUM1QyxlQUFlLEVBQUVFLGFBQWE7SUFDOUIsMEJBQTBCLEVBQUVFLHdCQUF3QjtJQUNwRCxnQkFBZ0IsRUFBRVQsTUFBTSxDQUFDVyxhQUFhO0lBQ3RDLGFBQWEsRUFBRVYsR0FBRyxDQUFDVTtFQUNyQixDQUFDO0VBRUQsT0FBTzFDLElBQUk7QUFDYixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1hcCBmcm9tICcuL3NjcmlwdHMvbWFwJztcbmltcG9ydCBDZW5zdXMgZnJvbSAnLi9zY3JpcHRzL2NlbnN1cyc7XG5pbXBvcnQgQmVhIGZyb20gJy4vc2NyaXB0cy9iZWEnO1xuaW1wb3J0IFN0YXRzIGZyb20gJy4vc2NyaXB0cy9zdGF0cyc7XG5pbXBvcnQgU3RhdGUgZnJvbSAnLi9zY3JpcHRzL3N0YXRlJztcbmltcG9ydCAqIGFzIFBsb3QgZnJvbSBcIkBvYnNlcnZhYmxlaHEvcGxvdFwiO1xuaW1wb3J0IExpbmVDaGFydCBmcm9tICcuLi9kaXN0L2xpbmVDaGFydCc7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IG1hcERpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKTtcbiAgY29uc3Qgc3RhdHNFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGF0cycpO1xuICBtYXBEaXYuc3R5bGUud2lkdGggPSAnMTAwJSc7XG5cblxuICAvLyBMb2FkIG1hcFxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS91cy1hdGxhc0AzL3N0YXRlcy1hbGJlcnMtMTBtLmpzb25gKVxuICBjb25zdCBtYXBKc29uID0gYXdhaXQgcmVzLmpzb24oKVxuXG5cbiAgLy8gRmV0Y2ggYW5kIHNldHVwIGRhdGFcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHNldHVwRGF0YSgpXG4gIGNvbnN0IHN0YXRlcyA9IFN0YXRlLnNldHVwU3RhdGVzKGRhdGEpO1xuICBjb25zdCBzdGF0cyA9IG5ldyBTdGF0cyhzdGF0c0VsLCBzdGF0ZXMpO1xuXG4gIGNvbnN0IGxvYWRNYXAgPSBtYXAobWFwSnNvbiwgc3RhdHMsIHN0YXRlcyk7XG4gIG1hcERpdi5hcHBlbmRDaGlsZChsb2FkTWFwKTtcblxuICBsZXQgYWxhYmFtYSA9IHN0YXRlc1snQWxhYmFtYSddLnBvcHVsYXRpb25IaXN0O1xuXG4gIGxldCBjaGFydElucHV0ID0gW11cblxuICBhbGFiYW1hLmZvckVhY2goKGVsZSwgaSkgPT4ge1xuICAgIGxldCBvYmogPSB7fTtcblxuICAgIGxldCBkYXRlID0gbmV3IERhdGUoYDIwMDAtMCR7aSArIDF9LTAxYClcbiAgICBvYmpbJ2RhdGUnXSA9IGRhdGU7XG4gICAgb2JqWydwb3B1bGF0aW9uJ10gPSBwYXJzZUludChlbGUuc2xpY2UoMCwgMykpXG4gICAgb2JqWydzdGF0ZSddID0gJ0FsYWJhbWEnXG4gICAgY2hhcnRJbnB1dC5wdXNoKG9iailcbiAgfSlcblxuXG4gIGxldCBjaGFydCA9IExpbmVDaGFydChjaGFydElucHV0LCB7XG4gICAgeDogZCA9PiBkLmRhdGUsXG4gICAgeTogZCA9PiBkLnBvcHVsYXRpb24sXG4gICAgejogZCA9PiBkLnN0YXRlLFxuICAgIHlEb21haW46IFs0NTAsIDU1MF0sXG4gICAgeUxhYmVsOiBcIuKGkSBVbmVtcGxveW1lbnQgKCUpXCIsXG4gICAgaGVpZ2h0OiA1MDAsXG4gICAgd2lkdGg6IDUwMCxcbiAgICBjb2xvcjogXCJncmF5XCIsXG4gIH0pXG5cbiAgbGV0IGJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGFydCcpO1xuICBiYXIuYXBwZW5kQ2hpbGQoY2hhcnQpXG5cbn0pO1xuXG5cblxuY29uc3Qgc2V0dXBEYXRhID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBjZW5zdXMgPSBuZXcgQ2Vuc3VzKCk7XG4gIGNvbnN0IGJlYSA9IG5ldyBCZWEoKTtcbiAgY29uc3QgcG9wdWxhdGlvbkhpc3RvcmljYWwgPSBhd2FpdCBDZW5zdXMuZmV0Y2hEYXRhKGNlbnN1cy5wb3B1bGF0aW9uTGlua3MpO1xuICBjb25zdCBlbXBsb3ltZW50SGlzdG9yaWNhbCA9IGF3YWl0IENlbnN1cy5mZXRjaERhdGEoY2Vuc3VzLmVtcGxveW1lbnRMaW5rcyk7XG4gIGNvbnN0IGdkcEhpc3RvcmljYWwgPSBhd2FpdCBCZWEuZmV0Y2hEYXRhKGJlYS5nZHBMaW5rKTtcbiAgY29uc3QgcGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsID0gYXdhaXQgQmVhLmZldGNoRGF0YShiZWEucGVyc29uYWxJbmNvbWVMaW5rKTtcblxuICBjb25zdCBkYXRhID0ge1xuICAgICduYW1lJzogJycsXG4gICAgJ3BvcHVsYXRpb25IaXN0b3JpY2FsJzogcG9wdWxhdGlvbkhpc3RvcmljYWwsXG4gICAgJ2VtcGxveW1lbnRIaXN0b3JpY2FsJzogZW1wbG95bWVudEhpc3RvcmljYWwsXG4gICAgJ2dkcEhpc3RvcmljYWwnOiBnZHBIaXN0b3JpY2FsLFxuICAgICdwZXJzb25hbEluY29tZUhpc3RvcmljYWwnOiBwZXJzb25hbEluY29tZUhpc3RvcmljYWwsXG4gICAgJ2dldFN0YXRzQ2Vuc3VzJzogY2Vuc3VzLmdldFN0YXRlU3RhdHMsXG4gICAgJ2dldFN0YXRzQmVhJzogYmVhLmdldFN0YXRlU3RhdHMsXG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cbiJdLCJuYW1lcyI6WyJtYXAiLCJDZW5zdXMiLCJCZWEiLCJTdGF0cyIsIlN0YXRlIiwiUGxvdCIsIkxpbmVDaGFydCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1hcERpdiIsImdldEVsZW1lbnRCeUlkIiwic3RhdHNFbCIsInN0eWxlIiwid2lkdGgiLCJyZXMiLCJmZXRjaCIsIm1hcEpzb24iLCJqc29uIiwiZGF0YSIsInNldHVwRGF0YSIsInN0YXRlcyIsInNldHVwU3RhdGVzIiwic3RhdHMiLCJsb2FkTWFwIiwiYXBwZW5kQ2hpbGQiLCJhbGFiYW1hIiwicG9wdWxhdGlvbkhpc3QiLCJjaGFydElucHV0IiwiZm9yRWFjaCIsImVsZSIsImkiLCJvYmoiLCJkYXRlIiwiRGF0ZSIsInBhcnNlSW50Iiwic2xpY2UiLCJwdXNoIiwiY2hhcnQiLCJ4IiwiZCIsInkiLCJwb3B1bGF0aW9uIiwieiIsInN0YXRlIiwieURvbWFpbiIsInlMYWJlbCIsImhlaWdodCIsImNvbG9yIiwiYmFyIiwiY2Vuc3VzIiwiYmVhIiwicG9wdWxhdGlvbkhpc3RvcmljYWwiLCJmZXRjaERhdGEiLCJwb3B1bGF0aW9uTGlua3MiLCJlbXBsb3ltZW50SGlzdG9yaWNhbCIsImVtcGxveW1lbnRMaW5rcyIsImdkcEhpc3RvcmljYWwiLCJnZHBMaW5rIiwicGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsIiwicGVyc29uYWxJbmNvbWVMaW5rIiwiZ2V0U3RhdGVTdGF0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/apiUtil.js":
/*!********************************!*\
  !*** ./src/scripts/apiUtil.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst apiUtil = {\n  fetchEndpoint: async function (apiLink) {\n    return fetch(apiLink).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    }).then(data => data).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiUtil);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGlVdGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLEdBQUc7RUFDWkMsYUFBYSxFQUFFLGdCQUFlQyxPQUFPLEVBQUU7SUFDbkMsT0FBT0MsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FDaEJFLElBQUksQ0FBRUMsUUFBUSxJQUFLO01BQ2hCLElBQUksQ0FBQ0EsUUFBUSxDQUFDQyxFQUFFLEVBQUU7UUFDZCxNQUFNLElBQUlDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQztNQUNsRDtNQUNBLE9BQU9GLFFBQVEsQ0FBQ0csSUFBSSxFQUFFO0lBQzFCLENBQUMsQ0FBQyxDQUNESixJQUFJLENBQUNLLElBQUksSUFBSUEsSUFBSSxDQUFDLENBQ2xCQyxLQUFLLENBQUVDLEtBQUssSUFBSztNQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBQyxxREFBcUQsRUFBRUEsS0FBSyxDQUFDO0lBQy9FLENBQUMsQ0FBQztFQUNWO0FBQ0osQ0FBQztBQUdELCtEQUFlWCxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvYXBpVXRpbC5qcz81ZTZkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwaVV0aWwgPSB7XG4gICAgZmV0Y2hFbmRwb2ludDogYXN5bmMgZnVuY3Rpb24oYXBpTGluaykge1xuICAgICAgICByZXR1cm4gZmV0Y2goYXBpTGluaylcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3QgT0snKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihkYXRhID0+IGRhdGEpXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggeW91ciBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IGFwaVV0aWw7XG4iXSwibmFtZXMiOlsiYXBpVXRpbCIsImZldGNoRW5kcG9pbnQiLCJhcGlMaW5rIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsIkVycm9yIiwianNvbiIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/apiUtil.js\n");

/***/ }),

/***/ "./src/scripts/bea.js":
/*!****************************!*\
  !*** ./src/scripts/bea.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\n\n\nclass Bea {\n  constructor() {\n    this.gdpLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gdp).join('');\n    this.personalIncomeLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].personalIncome).join('');\n  }\n  static async fetchData(apiLink) {\n    const dataArray = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n    let twoDArrayOfData = dataArray['BEAAPI']['Results']['Data'];\n    return Bea.createGdpObject(twoDArrayOfData);\n  }\n  static createGdpObject(dataArr) {\n    var output = {};\n    for (let i = 0; i < dataArr.length; i++) {\n      let key = dataArr[i].TimePeriod - 2017;\n      if (output[key]) {\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      } else {\n        output[key] = {};\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      }\n    }\n    return output;\n  }\n  getStateStats(state, data, year) {\n    let gdp = [];\n    if (year === undefined) {\n      for (let i = 0; i < 5; i++) {\n        gdp.push(data[i][state]);\n      }\n    } else {\n      let currentYear = data[year][state];\n      let lastYear = data[1][state];\n      gdp.push(currentYear);\n      currentYear > lastYear ? gdp.push(1) : gdp.push(0);\n    }\n    return gdp;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bea);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iZWEuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStCO0FBQ0k7QUFFbkMsTUFBTUUsR0FBRyxDQUFDO0VBQ05DLFdBQVcsR0FBRztJQUNWLElBQUksQ0FBQ0MsT0FBTyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ04scURBQVksQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ25ELElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdILE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTixnRUFBdUIsQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0VBQzdFO0VBR0EsYUFBYUUsU0FBUyxDQUFDQyxPQUFPLEVBQUU7SUFDNUIsTUFBTUMsU0FBUyxHQUFHLE1BQU1WLGlFQUFxQixDQUFDUyxPQUFPLENBQUM7SUFDdEQsSUFBSUcsZUFBZSxHQUFHRixTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBRTVELE9BQU9ULEdBQUcsQ0FBQ1ksZUFBZSxDQUFDRCxlQUFlLENBQUM7RUFDL0M7RUFHQSxPQUFPQyxlQUFlLENBQUNDLE9BQU8sRUFBRTtJQUM1QixJQUFJQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtNQUNyQyxJQUFJRSxHQUFHLEdBQUdKLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNHLFVBQVUsR0FBRyxJQUFJO01BQ3RDLElBQUdKLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEVBQUM7UUFDWEgsTUFBTSxDQUFDRyxHQUFHLENBQUMsQ0FBQ0osT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ksT0FBTyxDQUFDLEdBQUdOLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNLLFNBQVM7TUFDMUQsQ0FBQyxNQUFLO1FBQ0ZOLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCSCxNQUFNLENBQUNHLEdBQUcsQ0FBQyxDQUFDSixPQUFPLENBQUNFLENBQUMsQ0FBQyxDQUFDSSxPQUFPLENBQUMsR0FBR04sT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ssU0FBUztNQUMxRDtJQUNKO0lBQ0EsT0FBT04sTUFBTTtFQUNqQjtFQUdBTyxhQUFhLENBQUNDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUU7SUFDN0IsSUFBSUMsR0FBRyxHQUFHLEVBQUU7SUFFWixJQUFJRCxJQUFJLEtBQUtFLFNBQVMsRUFBRTtNQUNwQixLQUFLLElBQUlYLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsRUFBRSxFQUFFO1FBQ3hCVSxHQUFHLENBQUNFLElBQUksQ0FBQ0osSUFBSSxDQUFDUixDQUFDLENBQUMsQ0FBQ08sS0FBSyxDQUFDLENBQUM7TUFDNUI7SUFDSixDQUFDLE1BQU07TUFDSCxJQUFJTSxXQUFXLEdBQUdMLElBQUksQ0FBQ0MsSUFBSSxDQUFDLENBQUNGLEtBQUssQ0FBQztNQUNuQyxJQUFJTyxRQUFRLEdBQUdOLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsS0FBSyxDQUFDO01BQzdCRyxHQUFHLENBQUNFLElBQUksQ0FBQ0MsV0FBVyxDQUFDO01BQ3JCQSxXQUFXLEdBQUdDLFFBQVEsR0FBR0osR0FBRyxDQUFDRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RDtJQUVBLE9BQU9GLEdBQUc7RUFDZDtBQUNKO0FBR0EsK0RBQWV6QixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvYmVhLmpzP2U4YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExJTktTIGZyb20gJy4vbGlua3MuanMnO1xuaW1wb3J0IGFwaVV0aWwgZnJvbSAnLi9hcGlVdGlsLmpzJztcblxuY2xhc3MgQmVhIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5nZHBMaW5rID0gT2JqZWN0LnZhbHVlcyhMSU5LU1snZ2RwJ10pLmpvaW4oJycpO1xuICAgICAgICB0aGlzLnBlcnNvbmFsSW5jb21lTGluayA9IE9iamVjdC52YWx1ZXMoTElOS1NbJ3BlcnNvbmFsSW5jb21lJ10pLmpvaW4oJycpO1xuICAgIH1cblxuXG4gICAgc3RhdGljIGFzeW5jIGZldGNoRGF0YShhcGlMaW5rKSB7XG4gICAgICAgIGNvbnN0IGRhdGFBcnJheSA9IGF3YWl0IGFwaVV0aWwuZmV0Y2hFbmRwb2ludChhcGlMaW5rKTtcbiAgICAgICAgbGV0IHR3b0RBcnJheU9mRGF0YSA9IGRhdGFBcnJheVsnQkVBQVBJJ11bJ1Jlc3VsdHMnXVsnRGF0YSddO1xuXG4gICAgICAgIHJldHVybiBCZWEuY3JlYXRlR2RwT2JqZWN0KHR3b0RBcnJheU9mRGF0YSk7XG4gICAgfVxuXG5cbiAgICBzdGF0aWMgY3JlYXRlR2RwT2JqZWN0KGRhdGFBcnIpIHtcbiAgICAgICAgdmFyIG91dHB1dCA9IHt9O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGFBcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBrZXkgPSBkYXRhQXJyW2ldLlRpbWVQZXJpb2QgLSAyMDE3O1xuICAgICAgICAgICAgaWYob3V0cHV0W2tleV0pe1xuICAgICAgICAgICAgICAgIG91dHB1dFtrZXldW2RhdGFBcnJbaV0uR2VvTmFtZV0gPSBkYXRhQXJyW2ldLkRhdGFWYWx1ZVxuICAgICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgICAgIG91dHB1dFtrZXldID0ge307XG4gICAgICAgICAgICAgICAgb3V0cHV0W2tleV1bZGF0YUFycltpXS5HZW9OYW1lXSA9IGRhdGFBcnJbaV0uRGF0YVZhbHVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG5cblxuICAgIGdldFN0YXRlU3RhdHMoc3RhdGUsIGRhdGEsIHllYXIpIHtcbiAgICAgICAgbGV0IGdkcCA9IFtdXG5cbiAgICAgICAgaWYgKHllYXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgICAgICBnZHAucHVzaChkYXRhW2ldW3N0YXRlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgY3VycmVudFllYXIgPSBkYXRhW3llYXJdW3N0YXRlXVxuICAgICAgICAgICAgbGV0IGxhc3RZZWFyID0gZGF0YVsxXVtzdGF0ZV1cbiAgICAgICAgICAgIGdkcC5wdXNoKGN1cnJlbnRZZWFyKTtcbiAgICAgICAgICAgIGN1cnJlbnRZZWFyID4gbGFzdFllYXIgPyBnZHAucHVzaCgxKSA6IGdkcC5wdXNoKDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdkcFxuICAgIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBCZWE7XG4iXSwibmFtZXMiOlsiTElOS1MiLCJhcGlVdGlsIiwiQmVhIiwiY29uc3RydWN0b3IiLCJnZHBMaW5rIiwiT2JqZWN0IiwidmFsdWVzIiwiam9pbiIsInBlcnNvbmFsSW5jb21lTGluayIsImZldGNoRGF0YSIsImFwaUxpbmsiLCJkYXRhQXJyYXkiLCJmZXRjaEVuZHBvaW50IiwidHdvREFycmF5T2ZEYXRhIiwiY3JlYXRlR2RwT2JqZWN0IiwiZGF0YUFyciIsIm91dHB1dCIsImkiLCJsZW5ndGgiLCJrZXkiLCJUaW1lUGVyaW9kIiwiR2VvTmFtZSIsIkRhdGFWYWx1ZSIsImdldFN0YXRlU3RhdHMiLCJzdGF0ZSIsImRhdGEiLCJ5ZWFyIiwiZ2RwIiwidW5kZWZpbmVkIiwicHVzaCIsImN1cnJlbnRZZWFyIiwibGFzdFllYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/bea.js\n");

/***/ }),

/***/ "./src/scripts/census.js":
/*!*******************************!*\
  !*** ./src/scripts/census.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nclass Census {\n  constructor() {\n    _defineProperty(this, \"getStateStats\", (state, data, year) => {\n      let employment = [];\n      let searchKey = this.searchKey(data);\n      if (year === undefined) {\n        for (let i = 0; i < 5; i++) {\n          let employmentNumber = data[i][state][searchKey];\n          employment.push(employmentNumber);\n        }\n      } else {\n        employment.push(data[year][state][searchKey]);\n        let currentYear = parseInt(data[year][state][searchKey]);\n        let lastYear = parseInt(data[1][state][searchKey]);\n        currentYear > lastYear ? employment.push(1) : employment.push(0);\n      }\n      return employment;\n    });\n    _defineProperty(this, \"searchKey\", data => {\n      let stateObj = data[0]['Alabama'];\n      return stateObj['TOT_EMP'] ? 'TOT_EMP' : 'POP';\n    });\n    this.populationLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].population);\n    this.employmentLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].employment);\n  }\n  static async fetchData(links) {\n    let populationByYear = {};\n    for (let i = 0; i < 5; i++) {\n      let apiLink = links[i];\n      const dataArrayOfCurrYear = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n      const jsonData = JSON.parse(JSON.stringify(dataArrayOfCurrYear));\n      populationByYear[i] = Census.createPopulationObject(jsonData);\n    }\n    return populationByYear;\n  }\n  static createPopulationObject(data) {\n    let jsonObject;\n    if (Array.isArray(data) && data.length > 0) {\n      let keys = data[0]; // keys are the first row\n      keys = keys.map(key => key === 'POP_2021' || key === 'POP_2020' ? key = 'POP' : key);\n      jsonObject = data.slice(1).reduce((acc, item) => {\n        let nameIdx = keys.includes('NAME') ? keys.indexOf('NAME') : keys.indexOf(\"GEONAME\");\n        acc[item[nameIdx]] = keys.reduce((obj, key, index) => {\n          if (key !== 'NAME') {\n            obj[key] = item[index];\n          }\n          return obj;\n        }, {});\n        return acc;\n      }, {});\n    }\n    return jsonObject;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Census);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QSxJQUFJLENBQUNDLEdBQUcsQ0FBRUMsR0FBRyxJQUFLQSxHQUFHLEtBQUssVUFBVSxJQUFJQSxHQUFHLEtBQUssVUFBVSxHQUFHQSxHQUFHLEdBQUcsS0FBSyxHQUFHQSxHQUFHLENBQUM7TUFFdEZOLFVBQVUsR0FBRzNCLElBQUksQ0FBQ2tDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUNDLEdBQUcsRUFBRUMsSUFBSSxLQUFLO1FBQzdDLElBQUlDLE9BQU8sR0FBR1AsSUFBSSxDQUFDUSxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUdSLElBQUksQ0FBQ1MsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHVCxJQUFJLENBQUNTLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDcEZKLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLENBQUMsQ0FBQyxHQUFHUCxJQUFJLENBQUNJLE1BQU0sQ0FBQyxDQUFDTSxHQUFHLEVBQUVSLEdBQUcsRUFBRVMsS0FBSyxLQUFLO1VBQ2xELElBQUlULEdBQUcsS0FBSyxNQUFNLEVBQUU7WUFDaEJRLEdBQUcsQ0FBQ1IsR0FBRyxDQUFDLEdBQUdJLElBQUksQ0FBQ0ssS0FBSyxDQUFDO1VBQzFCO1VBRUEsT0FBT0QsR0FBRztRQUNkLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNOLE9BQU9MLEdBQUc7TUFDZCxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDVjtJQUVELE9BQU9ULFVBQVU7RUFDcEI7QUEwQko7QUFFQSwrREFBZTlCLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9jZW5zdXMuanM/YmI1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTElOS1MgZnJvbSAnLi9saW5rcy5qcyc7XG5pbXBvcnQgYXBpVXRpbCBmcm9tICcuL2FwaVV0aWwuanMnO1xuXG5jbGFzcyBDZW5zdXMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnBvcHVsYXRpb25MaW5rcyA9IE9iamVjdC52YWx1ZXMoTElOS1NbJ3BvcHVsYXRpb24nXSk7XG4gICAgICAgIHRoaXMuZW1wbG95bWVudExpbmtzID0gT2JqZWN0LnZhbHVlcyhMSU5LU1snZW1wbG95bWVudCddKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgYXN5bmMgZmV0Y2hEYXRhKGxpbmtzKSB7XG4gICAgICAgIGxldCBwb3B1bGF0aW9uQnlZZWFyID0ge307XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgIGxldCBhcGlMaW5rID0gbGlua3NbaV07XG4gICAgICAgICAgICBjb25zdCBkYXRhQXJyYXlPZkN1cnJZZWFyID0gYXdhaXQgYXBpVXRpbC5mZXRjaEVuZHBvaW50KGFwaUxpbmspO1xuXG4gICAgICAgICAgICBjb25zdCBqc29uRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YUFycmF5T2ZDdXJyWWVhcikpO1xuICAgICAgICAgICAgcG9wdWxhdGlvbkJ5WWVhcltpXSA9IENlbnN1cy5jcmVhdGVQb3B1bGF0aW9uT2JqZWN0KGpzb25EYXRhKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwb3B1bGF0aW9uQnlZZWFyO1xuICAgIH1cblxuICAgIHN0YXRpYyBjcmVhdGVQb3B1bGF0aW9uT2JqZWN0KGRhdGEpIHtcbiAgICAgICAgbGV0IGpzb25PYmplY3Q7XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBsZXQga2V5cyA9IGRhdGFbMF07IC8vIGtleXMgYXJlIHRoZSBmaXJzdCByb3dcbiAgICAgICAgICAgIGtleXMgPSBrZXlzLm1hcCgoa2V5KSA9PiBrZXkgPT09ICdQT1BfMjAyMScgfHwga2V5ID09PSAnUE9QXzIwMjAnID8ga2V5ID0gJ1BPUCcgOiBrZXkpO1xuXG4gICAgICAgICAgICBqc29uT2JqZWN0ID0gZGF0YS5zbGljZSgxKS5yZWR1Y2UoKGFjYywgaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBuYW1lSWR4ID0ga2V5cy5pbmNsdWRlcygnTkFNRScpID8ga2V5cy5pbmRleE9mKCdOQU1FJykgOiBrZXlzLmluZGV4T2YoXCJHRU9OQU1FXCIpO1xuICAgICAgICAgICAgICAgIGFjY1tpdGVtW25hbWVJZHhdXSA9IGtleXMucmVkdWNlKChvYmosIGtleSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGtleSAhPT0gJ05BTUUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmpba2V5XSA9IGl0ZW1baW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9iajtcbiAgICAgICAgICAgICAgICB9LCB7fSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH0sIHt9KTtcbiAgICAgICAgfVxuXG4gICAgICAgcmV0dXJuIGpzb25PYmplY3Q7XG4gICAgfVxuXG4gICAgZ2V0U3RhdGVTdGF0cyA9IChzdGF0ZSwgZGF0YSwgeWVhcikgPT4ge1xuICAgICAgICBsZXQgZW1wbG95bWVudCA9IFtdO1xuICAgICAgICBsZXQgc2VhcmNoS2V5ID0gdGhpcy5zZWFyY2hLZXkoZGF0YSk7XG5cbiAgICAgICAgaWYgKHllYXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgICAgICBsZXQgZW1wbG95bWVudE51bWJlciA9IGRhdGFbaV1bc3RhdGVdW3NlYXJjaEtleV07XG4gICAgICAgICAgICAgICAgZW1wbG95bWVudC5wdXNoKGVtcGxveW1lbnROdW1iZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZW1wbG95bWVudC5wdXNoKGRhdGFbeWVhcl1bc3RhdGVdW3NlYXJjaEtleV0pO1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRZZWFyID0gcGFyc2VJbnQoZGF0YVt5ZWFyXVtzdGF0ZV1bc2VhcmNoS2V5XSk7XG4gICAgICAgICAgICBsZXQgbGFzdFllYXIgPSBwYXJzZUludChkYXRhWzFdW3N0YXRlXVtzZWFyY2hLZXldKTtcbiAgICAgICAgICAgIGN1cnJlbnRZZWFyID4gbGFzdFllYXIgPyBlbXBsb3ltZW50LnB1c2goMSkgOiBlbXBsb3ltZW50LnB1c2goMClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBlbXBsb3ltZW50O1xuICAgIH1cblxuXG4gICAgIHNlYXJjaEtleSA9IChkYXRhKSA9PiB7XG4gICAgICAgIGxldCBzdGF0ZU9iaiA9IGRhdGFbMF1bJ0FsYWJhbWEnXVxuICAgICAgICByZXR1cm4gc3RhdGVPYmpbJ1RPVF9FTVAnXSA/ICdUT1RfRU1QJyA6ICdQT1AnO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2Vuc3VzO1xuIl0sIm5hbWVzIjpbIkxJTktTIiwiYXBpVXRpbCIsIkNlbnN1cyIsImNvbnN0cnVjdG9yIiwic3RhdGUiLCJkYXRhIiwieWVhciIsImVtcGxveW1lbnQiLCJzZWFyY2hLZXkiLCJ1bmRlZmluZWQiLCJpIiwiZW1wbG95bWVudE51bWJlciIsInB1c2giLCJjdXJyZW50WWVhciIsInBhcnNlSW50IiwibGFzdFllYXIiLCJzdGF0ZU9iaiIsInBvcHVsYXRpb25MaW5rcyIsIk9iamVjdCIsInZhbHVlcyIsImVtcGxveW1lbnRMaW5rcyIsImZldGNoRGF0YSIsImxpbmtzIiwicG9wdWxhdGlvbkJ5WWVhciIsImFwaUxpbmsiLCJkYXRhQXJyYXlPZkN1cnJZZWFyIiwiZmV0Y2hFbmRwb2ludCIsImpzb25EYXRhIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiY3JlYXRlUG9wdWxhdGlvbk9iamVjdCIsImpzb25PYmplY3QiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJrZXlzIiwibWFwIiwia2V5Iiwic2xpY2UiLCJyZWR1Y2UiLCJhY2MiLCJpdGVtIiwibmFtZUlkeCIsImluY2x1ZGVzIiwiaW5kZXhPZiIsIm9iaiIsImluZGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/census.js\n");

/***/ }),

/***/ "./src/scripts/links.js":
/*!******************************!*\
  !*** ./src/scripts/links.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst LINKS = {\n  'population': {\n    0: 'https://api.census.gov/data/2021/pep/population?get=POP_2021,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/2021/pep/population?get=POP_2020,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/2019/pep/population?get=POP,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/2018/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/2017/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'employment': {\n    0: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2021&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2020&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2019&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2018&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2017&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'gdp': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=1&TableName=CAGDP2&ResultFormat=JSON',\n  'personalIncome': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=30&TableName=SAINC50&ResultFormat=JSON'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (LINKS);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9saW5rcy5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsS0FBSyxHQUFHO0VBQ1YsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLDRIQUE0SDtJQUMvSCxDQUFDLEVBQUUsNEhBQTRIO0lBQy9ILENBQUMsRUFBRSx1SEFBdUg7SUFDMUgsQ0FBQyxFQUFFLDBIQUEwSDtJQUM3SCxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUUsaUlBQWlJO0lBQ3BJLENBQUMsRUFBRSxpSUFBaUk7SUFDcEksQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsS0FBSyxFQUFFLDRLQUE0SztFQUNuTCxnQkFBZ0IsRUFBRTtBQUN0QixDQUFDO0FBRUQsK0RBQWVBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9saW5rcy5qcz8yZTYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IExJTktTID0ge1xuICAgICdwb3B1bGF0aW9uJzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIxLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAxOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIwLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAyOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMTkvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUCxOQU1FJmZvcj1zdGF0ZToqJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMzogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS8yMDE4L3BlcC9wb3B1bGF0aW9uP2dldD1QT1AsR0VPTkFNRSZmb3I9c3RhdGU6KiZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvMjAxNy9wZXAvcG9wdWxhdGlvbj9nZXQ9UE9QLEdFT05BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnXG4gICAgfSxcblxuICAgICdlbXBsb3ltZW50Jzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAyMSZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDE6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDIwJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMjogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS90aW1lc2VyaWVzL2dvdnM/Z2V0PU5BTUUsVE9UX0VNUCZmb3I9c3RhdGU6KiZ0aW1lPTIwMTkma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAzOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAxOCZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDE3JmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJ1xuICAgIH0sXG5cbiAgICAnZ2RwJzogJ2h0dHBzOi8vYXBwcy5iZWEuZ292L2FwaS9kYXRhPyZVc2VySUQ9NjNEMDdEMEItODc0NC00MTlELTgyMUMtNjU2Q0IxMTIzOUQyJm1ldGhvZD1nZXRkYXRhJmRhdGFzZXRuYW1lPVJlZ2lvbmFsJkdlb0ZpcHM9U1RBVEUmTGluZUNvZGU9MSZUYWJsZU5hbWU9Q0FHRFAyJlJlc3VsdEZvcm1hdD1KU09OJyxcbiAgICAncGVyc29uYWxJbmNvbWUnOiAnaHR0cHM6Ly9hcHBzLmJlYS5nb3YvYXBpL2RhdGE/JlVzZXJJRD02M0QwN0QwQi04NzQ0LTQxOUQtODIxQy02NTZDQjExMjM5RDImbWV0aG9kPWdldGRhdGEmZGF0YXNldG5hbWU9UmVnaW9uYWwmR2VvRmlwcz1TVEFURSZMaW5lQ29kZT0zMCZUYWJsZU5hbWU9U0FJTkM1MCZSZXN1bHRGb3JtYXQ9SlNPTidcbn1cblxuZXhwb3J0IGRlZmF1bHQgTElOS1M7XG4iXSwibmFtZXMiOlsiTElOS1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/links.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction map(us, stats, stateObject) {\n  const width = 1800;\n  const height = 810;\n  const path = d3.geoPath();\n  function zoomed(event) {\n    const {\n      transform\n    } = event;\n    g.attr(\"transform\", transform);\n    g.attr(\"stroke-width\", 1 / transform.k);\n  }\n  const zoom = d3.zoom().scaleExtent([1, 8]).on(\"zoom\", zoomed);\n  const svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]).on(\"click\", reset);\n  const g = svg.append(\"g\");\n  const states = g.append(\"g\").attr(\"fill\", \"#404040\").attr(\"cursor\", \"pointer\").selectAll(\"path\").data(topojson.feature(us, us.objects.states).features).join(\"path\").on(\"click\", clicked).attr(\"d\", path);\n  states.append(\"title\").text(d => d.properties.name);\n  g.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"gray\").attr(\"stroke-linejoin\", \"round\").attr(\"d\", path(topojson.mesh(us, us.objects.states, (a, b) => a !== b)));\n  svg.call(zoom);\n  function reset() {\n    states.transition().style(\"fill\", \"#404040\");\n    svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity, d3.zoomTransform(svg.node()).invert([width / 2, height / 2]));\n  }\n  function clicked(event, d) {\n    const [[x0, y0], [x1, y1]] = path.bounds(d);\n    event.stopPropagation();\n    states.transition().style(\"fill\", \"#262626\");\n    d3.select(this).transition().style(\"fill\", \"darkgray\");\n    svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(width / 2, height / 2).scale(Math.min(3, 0.4 / Math.max((x1 - x0) / width, (y1 - y0) / height))).translate(-(x0 + x1) / 2, -(y0 + y1) / 2), d3.pointer(event, svg.node()));\n    stats.update(stateObject[d.properties.name]);\n  }\n  return svg.node();\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (map);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQUcsQ0FBQyxDQUFDLEVBQzVDMUMsRUFBRSxDQUFDbUQsT0FBTyxDQUFDaEQsS0FBSyxFQUFFUSxHQUFHLENBQUMwQixJQUFJLEVBQUUsQ0FBQyxDQUM5QjtJQUVEMUMsS0FBSyxDQUFDeUQsTUFBTSxDQUFDeEQsV0FBVyxDQUFDNkIsQ0FBQyxDQUFDQyxVQUFVLENBQUNDLElBQUksQ0FBQyxDQUFDO0VBQzlDO0VBR0EsT0FBT2hCLEdBQUcsQ0FBQzBCLElBQUksRUFBRTtBQUNuQjtBQUdBLCtEQUFlNUMsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9zY3JpcHRzL21hcC5qcz9mNTZkIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG1hcCh1cywgc3RhdHMsIHN0YXRlT2JqZWN0KSB7XG4gIGNvbnN0IHdpZHRoID0gMTgwMDtcbiAgY29uc3QgaGVpZ2h0ID0gODEwO1xuXG4gIGNvbnN0IHBhdGggPSBkMy5nZW9QYXRoKClcblxuICBmdW5jdGlvbiB6b29tZWQoZXZlbnQpIHtcbiAgICBjb25zdCB7dHJhbnNmb3JtfSA9IGV2ZW50O1xuICAgIGcuYXR0cihcInRyYW5zZm9ybVwiLCB0cmFuc2Zvcm0pO1xuICAgIGcuYXR0cihcInN0cm9rZS13aWR0aFwiLCAxIC8gdHJhbnNmb3JtLmspO1xuICB9XG5cbiAgY29uc3Qgem9vbSA9IGQzLnpvb20oKVxuICAgICAgLnNjYWxlRXh0ZW50KFsxLCA4XSlcbiAgICAgIC5vbihcInpvb21cIiwgem9vbWVkKTtcblxuICBjb25zdCBzdmcgPSBkMy5jcmVhdGUoXCJzdmdcIilcbiAgICAgIC5hdHRyKFwidmlld0JveFwiLCBbMCwgMCwgd2lkdGgsIGhlaWdodF0pXG4gICAgICAub24oXCJjbGlja1wiLCByZXNldCk7XG5cbiAgY29uc3QgZyA9IHN2Zy5hcHBlbmQoXCJnXCIpO1xuXG4gIGNvbnN0IHN0YXRlcyA9IGcuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiIzQwNDA0MFwiKVxuICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgXCJwb2ludGVyXCIpXG4gICAgLnNlbGVjdEFsbChcInBhdGhcIilcbiAgICAuZGF0YSh0b3BvanNvbi5mZWF0dXJlKHVzLCB1cy5vYmplY3RzLnN0YXRlcykuZmVhdHVyZXMpXG4gICAgLmpvaW4oXCJwYXRoXCIpXG4gICAgICAub24oXCJjbGlja1wiLCBjbGlja2VkKVxuICAgICAgLmF0dHIoXCJkXCIsIHBhdGgpO1xuXG4gIHN0YXRlcy5hcHBlbmQoXCJ0aXRsZVwiKVxuICAgICAgLnRleHQoZCA9PiBkLnByb3BlcnRpZXMubmFtZSk7XG5cbiAgZy5hcHBlbmQoXCJwYXRoXCIpXG4gICAgICAuYXR0cihcImZpbGxcIiwgXCJub25lXCIpXG4gICAgICAuYXR0cihcInN0cm9rZVwiLCBcImdyYXlcIilcbiAgICAgIC5hdHRyKFwic3Ryb2tlLWxpbmVqb2luXCIsIFwicm91bmRcIilcbiAgICAgIC5hdHRyKFwiZFwiLCBwYXRoKHRvcG9qc29uLm1lc2godXMsIHVzLm9iamVjdHMuc3RhdGVzLCAoYSwgYikgPT4gYSAhPT0gYikpKTtcblxuICBzdmcuY2FsbCh6b29tKTtcblxuICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICBzdGF0ZXMudHJhbnNpdGlvbigpLnN0eWxlKFwiZmlsbFwiLCBcIiM0MDQwNDBcIik7XG4gICAgc3ZnLnRyYW5zaXRpb24oKS5kdXJhdGlvbig3NTApLmNhbGwoXG4gICAgICB6b29tLnRyYW5zZm9ybSxcbiAgICAgIGQzLnpvb21JZGVudGl0eSxcbiAgICAgIGQzLnpvb21UcmFuc2Zvcm0oc3ZnLm5vZGUoKSkuaW52ZXJ0KFt3aWR0aCAvIDIsIGhlaWdodCAvIDJdKVxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjbGlja2VkKGV2ZW50LCBkKSB7XG4gICAgY29uc3QgW1t4MCwgeTBdLCBbeDEsIHkxXV0gPSBwYXRoLmJvdW5kcyhkKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBzdGF0ZXMudHJhbnNpdGlvbigpLnN0eWxlKFwiZmlsbFwiLCBcIiMyNjI2MjZcIik7XG4gICAgZDMuc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5zdHlsZShcImZpbGxcIiwgXCJkYXJrZ3JheVwiKTtcbiAgICBzdmcudHJhbnNpdGlvbigpLmR1cmF0aW9uKDc1MCkuY2FsbChcbiAgICAgIHpvb20udHJhbnNmb3JtLFxuICAgICAgZDMuem9vbUlkZW50aXR5XG4gICAgICAgIC50cmFuc2xhdGUod2lkdGggLyAyLCBoZWlnaHQgLyAyKVxuICAgICAgICAuc2NhbGUoTWF0aC5taW4oMywgMC40IC8gTWF0aC5tYXgoKHgxIC0geDApIC8gd2lkdGgsICh5MSAtIHkwKSAvIGhlaWdodCkpKVxuICAgICAgICAudHJhbnNsYXRlKC0oeDAgKyB4MSkgLyAyLCAtKHkwICsgeTEpIC8gMiksXG4gICAgICBkMy5wb2ludGVyKGV2ZW50LCBzdmcubm9kZSgpKVxuICAgICk7XG5cbiAgICBzdGF0cy51cGRhdGUoc3RhdGVPYmplY3RbZC5wcm9wZXJ0aWVzLm5hbWVdKVxuICB9XG5cblxuICByZXR1cm4gc3ZnLm5vZGUoKTtcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBtYXA7XG4iXSwibmFtZXMiOlsibWFwIiwidXMiLCJzdGF0cyIsInN0YXRlT2JqZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJwYXRoIiwiZDMiLCJnZW9QYXRoIiwiem9vbWVkIiwiZXZlbnQiLCJ0cmFuc2Zvcm0iLCJnIiwiYXR0ciIsImsiLCJ6b29tIiwic2NhbGVFeHRlbnQiLCJvbiIsInN2ZyIsImNyZWF0ZSIsInJlc2V0IiwiYXBwZW5kIiwic3RhdGVzIiwic2VsZWN0QWxsIiwiZGF0YSIsInRvcG9qc29uIiwiZmVhdHVyZSIsIm9iamVjdHMiLCJmZWF0dXJlcyIsImpvaW4iLCJjbGlja2VkIiwidGV4dCIsImQiLCJwcm9wZXJ0aWVzIiwibmFtZSIsIm1lc2giLCJhIiwiYiIsImNhbGwiLCJ0cmFuc2l0aW9uIiwic3R5bGUiLCJkdXJhdGlvbiIsInpvb21JZGVudGl0eSIsInpvb21UcmFuc2Zvcm0iLCJub2RlIiwiaW52ZXJ0IiwieDAiLCJ5MCIsIngxIiwieTEiLCJib3VuZHMiLCJzdG9wUHJvcGFnYXRpb24iLCJzZWxlY3QiLCJ0cmFuc2xhdGUiLCJzY2FsZSIsIk1hdGgiLCJtaW4iLCJtYXgiLCJwb2ludGVyIiwidXBkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/scripts/state.js":
/*!******************************!*\
  !*** ./src/scripts/state.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass State {\n  static setupStates(data) {\n    let states = {};\n    let names = State.stateNames();\n    for (let i = 0; i < 50; i++) {\n      data['name'] = names[i];\n      states[names[i]] = new State(names[i], data);\n    }\n    return states;\n  }\n  constructor(name, data) {\n    this.name = name;\n    this.population = data.getStatsCensus(name, data.populationHistorical, 0);\n    this.populationHist = data.getStatsCensus(name, data.populationHistorical);\n    this.employment = data.getStatsCensus(name, data.employmentHistorical, 0);\n    this.gdp = data.getStatsBea(name, data.gdpHistorical, 4);\n    this.personalIncome = data.getStatsBea(name, data.personalIncomeHistorical, 4);\n  }\n}\n_defineProperty(State, \"stateNames\", () => {\n  return ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zdGF0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsS0FBSyxDQUFDO0VBQ0osT0FBT0MsV0FBVyxDQUFDQyxJQUFJLEVBQUU7SUFDakIsSUFBSUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNmLElBQUlDLEtBQUssR0FBR0osS0FBSyxDQUFDSyxVQUFVLEVBQUU7SUFFOUIsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUcsRUFBRSxFQUFFQSxDQUFDLEVBQUUsRUFBRTtNQUNyQkosSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHRSxLQUFLLENBQUNFLENBQUMsQ0FBQztNQUN2QkgsTUFBTSxDQUFDQyxLQUFLLENBQUNFLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSU4sS0FBSyxDQUFDSSxLQUFLLENBQUNFLENBQUMsQ0FBQyxFQUFFSixJQUFJLENBQUM7SUFDcEQ7SUFFQSxPQUFPQyxNQUFNO0VBQ3JCO0VBRUFJLFdBQVcsQ0FBQ0MsSUFBSSxFQUFFTixJQUFJLEVBQUU7SUFDcEIsSUFBSSxDQUFDTSxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdQLElBQUksQ0FBQ1EsY0FBYyxDQUFDRixJQUFJLEVBQUVOLElBQUksQ0FBQ1Msb0JBQW9CLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLElBQUksQ0FBQ0MsY0FBYyxHQUFHVixJQUFJLENBQUNRLGNBQWMsQ0FBQ0YsSUFBSSxFQUFFTixJQUFJLENBQUNTLG9CQUFvQixDQUFDO0lBQzFFLElBQUksQ0FBQ0UsVUFBVSxHQUFHWCxJQUFJLENBQUNRLGNBQWMsQ0FBQ0YsSUFBSSxFQUFFTixJQUFJLENBQUNZLG9CQUFvQixFQUFFLENBQUMsQ0FBQztJQUN6RSxJQUFJLENBQUNDLEdBQUcsR0FBR2IsSUFBSSxDQUFDYyxXQUFXLENBQUNSLElBQUksRUFBRU4sSUFBSSxDQUFDZSxhQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQ3hELElBQUksQ0FBQ0MsY0FBYyxHQUFHaEIsSUFBSSxDQUFDYyxXQUFXLENBQUNSLElBQUksRUFBRU4sSUFBSSxDQUFDaUIsd0JBQXdCLEVBQUUsQ0FBQyxDQUFDO0VBQ2xGO0FBS1I7QUFBQyxnQkF6QktuQixLQUFLLGdCQXNCaUIsTUFBTTtFQUNsQixPQUFPLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxTQUFTLENBQUM7QUFDN25CLENBQUM7QUFJVCwrREFBZUEsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9zY3JpcHRzL3N0YXRlLmpzP2EzZTciXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU3RhdGUge1xuICAgICAgICBzdGF0aWMgc2V0dXBTdGF0ZXMoZGF0YSkge1xuICAgICAgICAgICAgICAgIGxldCBzdGF0ZXMgPSB7fTtcbiAgICAgICAgICAgICAgICBsZXQgbmFtZXMgPSBTdGF0ZS5zdGF0ZU5hbWVzKCk7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDUwOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFbJ25hbWUnXSA9IG5hbWVzW2ldO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGVzW25hbWVzW2ldXSA9IG5ldyBTdGF0ZShuYW1lc1tpXSwgZGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0YXRlcztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0cnVjdG9yKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgICAgICB0aGlzLnBvcHVsYXRpb24gPSBkYXRhLmdldFN0YXRzQ2Vuc3VzKG5hbWUsIGRhdGEucG9wdWxhdGlvbkhpc3RvcmljYWwsIDApO1xuICAgICAgICAgICAgdGhpcy5wb3B1bGF0aW9uSGlzdCA9IGRhdGEuZ2V0U3RhdHNDZW5zdXMobmFtZSwgZGF0YS5wb3B1bGF0aW9uSGlzdG9yaWNhbCk7XG4gICAgICAgICAgICB0aGlzLmVtcGxveW1lbnQgPSBkYXRhLmdldFN0YXRzQ2Vuc3VzKG5hbWUsIGRhdGEuZW1wbG95bWVudEhpc3RvcmljYWwsIDApO1xuICAgICAgICAgICAgdGhpcy5nZHAgPSBkYXRhLmdldFN0YXRzQmVhKG5hbWUsIGRhdGEuZ2RwSGlzdG9yaWNhbCwgNCk7XG4gICAgICAgICAgICB0aGlzLnBlcnNvbmFsSW5jb21lID0gZGF0YS5nZXRTdGF0c0JlYShuYW1lLCBkYXRhLnBlcnNvbmFsSW5jb21lSGlzdG9yaWNhbCwgNCk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0aWMgc3RhdGVOYW1lcyA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gWydBbGFiYW1hJywgJ0FsYXNrYScsICdBcml6b25hJywgJ0Fya2Fuc2FzJywgJ0NhbGlmb3JuaWEnLCAnQ29sb3JhZG8nLCAnQ29ubmVjdGljdXQnLCAnRGVsYXdhcmUnLCAnRmxvcmlkYScsICdHZW9yZ2lhJywgJ0hhd2FpaScsICdJZGFobycsICdJbGxpbm9pcycsICdJbmRpYW5hJywgJ0lvd2EnLCAnS2Fuc2FzJywgJ0tlbnR1Y2t5JywgJ0xvdWlzaWFuYScsICdNYWluZScsICdNYXJ5bGFuZCcsICdNYXNzYWNodXNldHRzJywgJ01pY2hpZ2FuJywgJ01pbm5lc290YScsICdNaXNzaXNzaXBwaScsICdNaXNzb3VyaScsICdNb250YW5hJywgJ05lYnJhc2thJywgJ05ldmFkYScsICdOZXcgSGFtcHNoaXJlJywgJ05ldyBKZXJzZXknLCAnTmV3IE1leGljbycsICdOZXcgWW9yaycsICdOb3J0aCBDYXJvbGluYScsICdOb3J0aCBEYWtvdGEnLCAnT2hpbycsICdPa2xhaG9tYScsICdPcmVnb24nLCAnUGVubnN5bHZhbmlhJywgJ1Job2RlIElzbGFuZCcsICdTb3V0aCBDYXJvbGluYScsICdTb3V0aCBEYWtvdGEnLCAnVGVubmVzc2VlJywgJ1RleGFzJywgJ1V0YWgnLCAnVmVybW9udCcsICdWaXJnaW5pYScsICdXYXNoaW5ndG9uJywgJ1dlc3QgVmlyZ2luaWEnLCAnV2lzY29uc2luJywgJ1d5b21pbmcnXVxuICAgICAgICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgU3RhdGU7XG4iXSwibmFtZXMiOlsiU3RhdGUiLCJzZXR1cFN0YXRlcyIsImRhdGEiLCJzdGF0ZXMiLCJuYW1lcyIsInN0YXRlTmFtZXMiLCJpIiwiY29uc3RydWN0b3IiLCJuYW1lIiwicG9wdWxhdGlvbiIsImdldFN0YXRzQ2Vuc3VzIiwicG9wdWxhdGlvbkhpc3RvcmljYWwiLCJwb3B1bGF0aW9uSGlzdCIsImVtcGxveW1lbnQiLCJlbXBsb3ltZW50SGlzdG9yaWNhbCIsImdkcCIsImdldFN0YXRzQmVhIiwiZ2RwSGlzdG9yaWNhbCIsInBlcnNvbmFsSW5jb21lIiwicGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/state.js\n");

/***/ }),

/***/ "./src/scripts/stats.js":
/*!******************************!*\
  !*** ./src/scripts/stats.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Stats {\n  constructor(divEl, states) {\n    this.divEl = divEl;\n    this.state = states['Alabama'];\n    divEl.appendChild(this.setUpStats(this.state));\n  }\n  setUpStats(state) {\n    let ul = document.createElement('ul');\n    for (let key in state) {\n      let liEl = document.createElement('li');\n      let upperCaseName = key[0].toUpperCase() + key.slice(1);\n      let stateAttributeValue = state[key];\n      liEl.innerHTML = `${upperCaseName}: ${stateAttributeValue}`;\n      ul.appendChild(liEl);\n    }\n    return ul;\n  }\n  update(state) {\n    let lis = this.divEl.querySelectorAll('ul li');\n    Object.keys(state).forEach((key, i) => {\n      lis[i].innerText = `${key[0].toUpperCase() + key.slice(1)}: ${state[key]}`;\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stats);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zdGF0cy5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTUEsS0FBSyxDQUFDO0VBQ1JDLFdBQVcsQ0FBQ0MsS0FBSyxFQUFFQyxNQUFNLEVBQUU7SUFDdkIsSUFBSSxDQUFDRCxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDRSxLQUFLLEdBQUdELE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDOUJELEtBQUssQ0FBQ0csV0FBVyxDQUFDLElBQUksQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQ0YsS0FBSyxDQUFDLENBQUM7RUFDbEQ7RUFFQUUsVUFBVSxDQUFDRixLQUFLLEVBQUU7SUFDZCxJQUFJRyxFQUFFLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLElBQUksQ0FBQztJQUVyQyxLQUFLLElBQUlDLEdBQUcsSUFBSU4sS0FBSyxFQUFFO01BQ25CLElBQUlPLElBQUksR0FBR0gsUUFBUSxDQUFDQyxhQUFhLENBQUMsSUFBSSxDQUFDO01BQ3ZDLElBQUlHLGFBQWEsR0FBR0YsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDRyxXQUFXLEVBQUUsR0FBR0gsR0FBRyxDQUFDSSxLQUFLLENBQUMsQ0FBQyxDQUFDO01BQ3ZELElBQUlDLG1CQUFtQixHQUFHWCxLQUFLLENBQUNNLEdBQUcsQ0FBQztNQUVwQ0MsSUFBSSxDQUFDSyxTQUFTLEdBQUksR0FBRUosYUFBYyxLQUFJRyxtQkFBb0IsRUFBQztNQUMzRFIsRUFBRSxDQUFDRixXQUFXLENBQUNNLElBQUksQ0FBQztJQUN4QjtJQUVBLE9BQU9KLEVBQUU7RUFDYjtFQUVBVSxNQUFNLENBQUNiLEtBQUssRUFBRTtJQUNWLElBQUljLEdBQUcsR0FBRyxJQUFJLENBQUNoQixLQUFLLENBQUNpQixnQkFBZ0IsQ0FBQyxPQUFPLENBQUM7SUFDOUNDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDakIsS0FBSyxDQUFDLENBQUNrQixPQUFPLENBQUMsQ0FBQ1osR0FBRyxFQUFFYSxDQUFDLEtBQUs7TUFDbkNMLEdBQUcsQ0FBQ0ssQ0FBQyxDQUFDLENBQUNDLFNBQVMsR0FBSSxHQUFFZCxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNHLFdBQVcsRUFBRSxHQUFHSCxHQUFHLENBQUNJLEtBQUssQ0FBQyxDQUFDLENBQUUsS0FBSVYsS0FBSyxDQUFDTSxHQUFHLENBQUUsRUFBQztJQUM5RSxDQUFDLENBQUM7RUFDTjtBQUNKO0FBR0EsK0RBQWVWLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9zdGF0cy5qcz9hNDU2Il0sInNvdXJjZXNDb250ZW50IjpbIlxuY2xhc3MgU3RhdHMge1xuICAgIGNvbnN0cnVjdG9yKGRpdkVsLCBzdGF0ZXMpIHtcbiAgICAgICAgdGhpcy5kaXZFbCA9IGRpdkVsO1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGVzWydBbGFiYW1hJ107XG4gICAgICAgIGRpdkVsLmFwcGVuZENoaWxkKHRoaXMuc2V0VXBTdGF0cyh0aGlzLnN0YXRlKSk7XG4gICAgfVxuXG4gICAgc2V0VXBTdGF0cyhzdGF0ZSkge1xuICAgICAgICBsZXQgdWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuXG4gICAgICAgIGZvciAobGV0IGtleSBpbiBzdGF0ZSkge1xuICAgICAgICAgICAgbGV0IGxpRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICAgICAgbGV0IHVwcGVyQ2FzZU5hbWUgPSBrZXlbMF0udG9VcHBlckNhc2UoKSArIGtleS5zbGljZSgxKTtcbiAgICAgICAgICAgIGxldCBzdGF0ZUF0dHJpYnV0ZVZhbHVlID0gc3RhdGVba2V5XTtcblxuICAgICAgICAgICAgbGlFbC5pbm5lckhUTUwgPSBgJHt1cHBlckNhc2VOYW1lfTogJHtzdGF0ZUF0dHJpYnV0ZVZhbHVlfWA7XG4gICAgICAgICAgICB1bC5hcHBlbmRDaGlsZChsaUVsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB1bDtcbiAgICB9XG5cbiAgICB1cGRhdGUoc3RhdGUpIHtcbiAgICAgICAgbGV0IGxpcyA9IHRoaXMuZGl2RWwucXVlcnlTZWxlY3RvckFsbCgndWwgbGknKTtcbiAgICAgICAgT2JqZWN0LmtleXMoc3RhdGUpLmZvckVhY2goKGtleSwgaSkgPT4ge1xuICAgICAgICAgICAgbGlzW2ldLmlubmVyVGV4dCA9IGAke2tleVswXS50b1VwcGVyQ2FzZSgpICsga2V5LnNsaWNlKDEpfTogJHtzdGF0ZVtrZXldfWA7XG4gICAgICAgIH0pXG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IFN0YXRzO1xuIl0sIm5hbWVzIjpbIlN0YXRzIiwiY29uc3RydWN0b3IiLCJkaXZFbCIsInN0YXRlcyIsInN0YXRlIiwiYXBwZW5kQ2hpbGQiLCJzZXRVcFN0YXRzIiwidWwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJrZXkiLCJsaUVsIiwidXBwZXJDYXNlTmFtZSIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJzdGF0ZUF0dHJpYnV0ZVZhbHVlIiwiaW5uZXJIVE1MIiwidXBkYXRlIiwibGlzIiwicXVlcnlTZWxlY3RvckFsbCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwiaSIsImlubmVyVGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/stats.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;