/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/map */ \"./src/scripts/map.js\");\n/* harmony import */ var _scripts_population__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/population */ \"./src/scripts/population.js\");\n/* harmony import */ var _scripts_stats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/stats */ \"./src/scripts/stats.js\");\n/* harmony import */ var _scripts_state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/state */ \"./src/scripts/state.js\");\n\n\n\n\n\n// import a_api from './scripts/api_foo.js';\n// import census from 'citysdk'\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const mapDiv = document.getElementById('map');\n  mapDiv.style.width = '100%';\n  const res = await fetch(`https://cdn.jsdelivr.net/npm/us-atlas@3/states-albers-10m.json`);\n  const mapJson = await res.json();\n\n  // MAP above\n  const stateNames = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n  const population = new _scripts_population__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  const allYearsPop = await _scripts_population__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchPopulation(population);\n  const alabamaPopulation = population.getStatePopulation('Alabama', allYearsPop, 0);\n  // const alabamaAll = population.getStatePopulation('Texas', allYearsPop)\n\n  const data = {\n    'name': '',\n    'allYearsPop': allYearsPop,\n    'population': population.getStatePopulation\n  };\n  const states = {};\n  for (let i = 0; i < 50; i++) {\n    data['name'] = stateNames[i];\n    states[stateNames[i]] = new _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"](stateNames[i], data);\n  }\n  let alabama = new _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Alabama', data);\n  let texas = new _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Texas', data);\n  let statsEl = document.getElementById('stats');\n  let stats = new _scripts_stats__WEBPACK_IMPORTED_MODULE_2__[\"default\"](statsEl, alabama);\n  stats.update(texas);\n  const foo = (0,_scripts_map__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mapJson, stats, states);\n  mapDiv.appendChild(foo);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUcsQ0FBQztBQUN6QixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWFwIGZyb20gJy4vc2NyaXB0cy9tYXAnO1xuaW1wb3J0IFBvcHVsYXRpb24gZnJvbSAnLi9zY3JpcHRzL3BvcHVsYXRpb24nO1xuaW1wb3J0IFN0YXRzIGZyb20gJy4vc2NyaXB0cy9zdGF0cyc7XG5pbXBvcnQgU3RhdGUgZnJvbSAnLi9zY3JpcHRzL3N0YXRlJztcblxuLy8gaW1wb3J0IGFfYXBpIGZyb20gJy4vc2NyaXB0cy9hcGlfZm9vLmpzJztcbi8vIGltcG9ydCBjZW5zdXMgZnJvbSAnY2l0eXNkaydcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgYXN5bmMgKCkgPT4ge1xuICBjb25zdCBtYXBEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyk7XG4gIG1hcERpdi5zdHlsZS53aWR0aCA9ICcxMDAlJztcblxuXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3VzLWF0bGFzQDMvc3RhdGVzLWFsYmVycy0xMG0uanNvbmApXG4gIGNvbnN0IG1hcEpzb24gPSBhd2FpdCByZXMuanNvbigpXG5cblxuICAvLyBNQVAgYWJvdmVcbiAgY29uc3Qgc3RhdGVOYW1lcyA9IFsnQWxhYmFtYScsICdBbGFza2EnLCAnQXJpem9uYScsICdBcmthbnNhcycsICdDYWxpZm9ybmlhJywgJ0NvbG9yYWRvJywgJ0Nvbm5lY3RpY3V0JywgJ0RlbGF3YXJlJywgJ0Zsb3JpZGEnLCAnR2VvcmdpYScsICdIYXdhaWknLCAnSWRhaG8nLCAnSWxsaW5vaXMnLCAnSW5kaWFuYScsICdJb3dhJywgJ0thbnNhcycsICdLZW50dWNreScsICdMb3Vpc2lhbmEnLCAnTWFpbmUnLCAnTWFyeWxhbmQnLCAnTWFzc2FjaHVzZXR0cycsICdNaWNoaWdhbicsICdNaW5uZXNvdGEnLCAnTWlzc2lzc2lwcGknLCAnTWlzc291cmknLCAnTW9udGFuYScsICdOZWJyYXNrYScsICdOZXZhZGEnLCAnTmV3IEhhbXBzaGlyZScsICdOZXcgSmVyc2V5JywgJ05ldyBNZXhpY28nLCAnTmV3IFlvcmsnLCAnTm9ydGggQ2Fyb2xpbmEnLCAnTm9ydGggRGFrb3RhJywgJ09oaW8nLCAnT2tsYWhvbWEnLCAnT3JlZ29uJywgJ1Blbm5zeWx2YW5pYScsICdSaG9kZSBJc2xhbmQnLCAnU291dGggQ2Fyb2xpbmEnLCAnU291dGggRGFrb3RhJywgJ1Rlbm5lc3NlZScsICdUZXhhcycsICdVdGFoJywgJ1Zlcm1vbnQnLCAnVmlyZ2luaWEnLCAnV2FzaGluZ3RvbicsICdXZXN0IFZpcmdpbmlhJywgJ1dpc2NvbnNpbicsICdXeW9taW5nJ11cblxuICBjb25zdCBwb3B1bGF0aW9uID0gbmV3IFBvcHVsYXRpb24oKTtcbiAgY29uc3QgYWxsWWVhcnNQb3AgPSBhd2FpdCBQb3B1bGF0aW9uLmZldGNoUG9wdWxhdGlvbihwb3B1bGF0aW9uKTtcbiAgY29uc3QgYWxhYmFtYVBvcHVsYXRpb24gPSBwb3B1bGF0aW9uLmdldFN0YXRlUG9wdWxhdGlvbignQWxhYmFtYScsIGFsbFllYXJzUG9wLCAwKVxuICAvLyBjb25zdCBhbGFiYW1hQWxsID0gcG9wdWxhdGlvbi5nZXRTdGF0ZVBvcHVsYXRpb24oJ1RleGFzJywgYWxsWWVhcnNQb3ApXG5cbiAgY29uc3QgZGF0YSA9IHtcbiAgICAnbmFtZSc6ICcnLFxuICAgICdhbGxZZWFyc1BvcCc6IGFsbFllYXJzUG9wLFxuICAgICdwb3B1bGF0aW9uJzogcG9wdWxhdGlvbi5nZXRTdGF0ZVBvcHVsYXRpb25cbiAgfVxuICBjb25zdCBzdGF0ZXMgPSB7fTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IDUwOyBpKyspIHtcbiAgICBkYXRhWyduYW1lJ10gPSBzdGF0ZU5hbWVzW2ldO1xuXG4gICAgc3RhdGVzW3N0YXRlTmFtZXNbaV1dID0gbmV3IFN0YXRlKHN0YXRlTmFtZXNbaV0sIGRhdGEpO1xuICB9XG5cblxuICBsZXQgYWxhYmFtYSA9IG5ldyBTdGF0ZSgnQWxhYmFtYScsIGRhdGEpO1xuICBsZXQgdGV4YXMgPSBuZXcgU3RhdGUoJ1RleGFzJywgZGF0YSk7XG4gIGxldCBzdGF0c0VsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXRzJylcbiAgbGV0IHN0YXRzID0gbmV3IFN0YXRzKHN0YXRzRWwsIGFsYWJhbWEpO1xuICBzdGF0cy51cGRhdGUodGV4YXMpXG4gIGNvbnN0IGZvbyA9IG1hcChtYXBKc29uLCBzdGF0cywgc3RhdGVzKVxuICBtYXBEaXYuYXBwZW5kQ2hpbGQoZm9vKTtcbn0pO1xuIl0sIm5hbWVzIjpbIm1hcCIsIlBvcHVsYXRpb24iLCJTdGF0cyIsIlN0YXRlIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwibWFwRGl2IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsIndpZHRoIiwicmVzIiwiZmV0Y2giLCJtYXBKc29uIiwianNvbiIsInN0YXRlTmFtZXMiLCJwb3B1bGF0aW9uIiwiYWxsWWVhcnNQb3AiLCJmZXRjaFBvcHVsYXRpb24iLCJhbGFiYW1hUG9wdWxhdGlvbiIsImdldFN0YXRlUG9wdWxhdGlvbiIsImRhdGEiLCJzdGF0ZXMiLCJpIiwiYWxhYmFtYSIsInRleGFzIiwic3RhdHNFbCIsInN0YXRzIiwidXBkYXRlIiwiZm9vIiwiYXBwZW5kQ2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/map.js":
/*!****************************!*\
  !*** ./src/scripts/map.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction map(us, stats, stateObject) {\n  const width = 1800;\n  const height = 810;\n  const path = d3.geoPath();\n  function zoomed(event) {\n    const {\n      transform\n    } = event;\n    g.attr(\"transform\", transform);\n    g.attr(\"stroke-width\", 1 / transform.k);\n  }\n  const zoom = d3.zoom().scaleExtent([1, 8]).on(\"zoom\", zoomed);\n  const svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]).on(\"click\", reset);\n  const g = svg.append(\"g\");\n  const states = g.append(\"g\").attr(\"fill\", \"#404040\").attr(\"cursor\", \"pointer\").selectAll(\"path\").data(topojson.feature(us, us.objects.states).features).join(\"path\").on(\"click\", clicked).attr(\"d\", path);\n  states.append(\"title\").text(d => d.properties.name);\n  g.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"gray\").attr(\"stroke-linejoin\", \"round\").attr(\"d\", path(topojson.mesh(us, us.objects.states, (a, b) => a !== b)));\n  svg.call(zoom);\n  function reset() {\n    states.transition().style(\"fill\", \"#404040\");\n    svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity, d3.zoomTransform(svg.node()).invert([width / 2, height / 2]));\n  }\n  function clicked(event, d) {\n    const [[x0, y0], [x1, y1]] = path.bounds(d);\n    event.stopPropagation();\n    states.transition().style(\"fill\", \"#262626\");\n    d3.select(this).transition().style(\"fill\", \"darkgray\");\n    svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(width / 2, height / 2).scale(Math.min(3, 0.4 / Math.max((x1 - x0) / width, (y1 - y0) / height))).translate(-(x0 + x1) / 2, -(y0 + y1) / 2), d3.pointer(event, svg.node()));\n    stats.update(stateObject[d.properties.name]);\n  }\n  return svg.node();\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (map);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQUcsQ0FBQyxDQUFDLEVBQzVDMUMsRUFBRSxDQUFDbUQsT0FBTyxDQUFDaEQsS0FBSyxFQUFFUSxHQUFHLENBQUMwQixJQUFJLEVBQUUsQ0FBQyxDQUM5QjtJQUVEMUMsS0FBSyxDQUFDeUQsTUFBTSxDQUFDeEQsV0FBVyxDQUFDNkIsQ0FBQyxDQUFDQyxVQUFVLENBQUNDLElBQUksQ0FBQyxDQUFDO0VBQzlDO0VBR0EsT0FBT2hCLEdBQUcsQ0FBQzBCLElBQUksRUFBRTtBQUNuQjtBQUdBLCtEQUFlNUMsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9zY3JpcHRzL21hcC5qcz9mNTZkIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG1hcCh1cywgc3RhdHMsIHN0YXRlT2JqZWN0KSB7XG4gIGNvbnN0IHdpZHRoID0gMTgwMDtcbiAgY29uc3QgaGVpZ2h0ID0gODEwO1xuXG4gIGNvbnN0IHBhdGggPSBkMy5nZW9QYXRoKClcblxuICBmdW5jdGlvbiB6b29tZWQoZXZlbnQpIHtcbiAgICBjb25zdCB7dHJhbnNmb3JtfSA9IGV2ZW50O1xuICAgIGcuYXR0cihcInRyYW5zZm9ybVwiLCB0cmFuc2Zvcm0pO1xuICAgIGcuYXR0cihcInN0cm9rZS13aWR0aFwiLCAxIC8gdHJhbnNmb3JtLmspO1xuICB9XG5cbiAgY29uc3Qgem9vbSA9IGQzLnpvb20oKVxuICAgICAgLnNjYWxlRXh0ZW50KFsxLCA4XSlcbiAgICAgIC5vbihcInpvb21cIiwgem9vbWVkKTtcblxuICBjb25zdCBzdmcgPSBkMy5jcmVhdGUoXCJzdmdcIilcbiAgICAgIC5hdHRyKFwidmlld0JveFwiLCBbMCwgMCwgd2lkdGgsIGhlaWdodF0pXG4gICAgICAub24oXCJjbGlja1wiLCByZXNldCk7XG5cbiAgY29uc3QgZyA9IHN2Zy5hcHBlbmQoXCJnXCIpO1xuXG4gIGNvbnN0IHN0YXRlcyA9IGcuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJmaWxsXCIsIFwiIzQwNDA0MFwiKVxuICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgXCJwb2ludGVyXCIpXG4gICAgLnNlbGVjdEFsbChcInBhdGhcIilcbiAgICAuZGF0YSh0b3BvanNvbi5mZWF0dXJlKHVzLCB1cy5vYmplY3RzLnN0YXRlcykuZmVhdHVyZXMpXG4gICAgLmpvaW4oXCJwYXRoXCIpXG4gICAgICAub24oXCJjbGlja1wiLCBjbGlja2VkKVxuICAgICAgLmF0dHIoXCJkXCIsIHBhdGgpO1xuXG4gIHN0YXRlcy5hcHBlbmQoXCJ0aXRsZVwiKVxuICAgICAgLnRleHQoZCA9PiBkLnByb3BlcnRpZXMubmFtZSk7XG5cbiAgZy5hcHBlbmQoXCJwYXRoXCIpXG4gICAgICAuYXR0cihcImZpbGxcIiwgXCJub25lXCIpXG4gICAgICAuYXR0cihcInN0cm9rZVwiLCBcImdyYXlcIilcbiAgICAgIC5hdHRyKFwic3Ryb2tlLWxpbmVqb2luXCIsIFwicm91bmRcIilcbiAgICAgIC5hdHRyKFwiZFwiLCBwYXRoKHRvcG9qc29uLm1lc2godXMsIHVzLm9iamVjdHMuc3RhdGVzLCAoYSwgYikgPT4gYSAhPT0gYikpKTtcblxuICBzdmcuY2FsbCh6b29tKTtcblxuICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICBzdGF0ZXMudHJhbnNpdGlvbigpLnN0eWxlKFwiZmlsbFwiLCBcIiM0MDQwNDBcIik7XG4gICAgc3ZnLnRyYW5zaXRpb24oKS5kdXJhdGlvbig3NTApLmNhbGwoXG4gICAgICB6b29tLnRyYW5zZm9ybSxcbiAgICAgIGQzLnpvb21JZGVudGl0eSxcbiAgICAgIGQzLnpvb21UcmFuc2Zvcm0oc3ZnLm5vZGUoKSkuaW52ZXJ0KFt3aWR0aCAvIDIsIGhlaWdodCAvIDJdKVxuICAgICk7XG4gIH1cblxuICBmdW5jdGlvbiBjbGlja2VkKGV2ZW50LCBkKSB7XG4gICAgY29uc3QgW1t4MCwgeTBdLCBbeDEsIHkxXV0gPSBwYXRoLmJvdW5kcyhkKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBzdGF0ZXMudHJhbnNpdGlvbigpLnN0eWxlKFwiZmlsbFwiLCBcIiMyNjI2MjZcIik7XG4gICAgZDMuc2VsZWN0KHRoaXMpLnRyYW5zaXRpb24oKS5zdHlsZShcImZpbGxcIiwgXCJkYXJrZ3JheVwiKTtcbiAgICBzdmcudHJhbnNpdGlvbigpLmR1cmF0aW9uKDc1MCkuY2FsbChcbiAgICAgIHpvb20udHJhbnNmb3JtLFxuICAgICAgZDMuem9vbUlkZW50aXR5XG4gICAgICAgIC50cmFuc2xhdGUod2lkdGggLyAyLCBoZWlnaHQgLyAyKVxuICAgICAgICAuc2NhbGUoTWF0aC5taW4oMywgMC40IC8gTWF0aC5tYXgoKHgxIC0geDApIC8gd2lkdGgsICh5MSAtIHkwKSAvIGhlaWdodCkpKVxuICAgICAgICAudHJhbnNsYXRlKC0oeDAgKyB4MSkgLyAyLCAtKHkwICsgeTEpIC8gMiksXG4gICAgICBkMy5wb2ludGVyKGV2ZW50LCBzdmcubm9kZSgpKVxuICAgICk7XG5cbiAgICBzdGF0cy51cGRhdGUoc3RhdGVPYmplY3RbZC5wcm9wZXJ0aWVzLm5hbWVdKVxuICB9XG5cblxuICByZXR1cm4gc3ZnLm5vZGUoKTtcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBtYXA7XG4iXSwibmFtZXMiOlsibWFwIiwidXMiLCJzdGF0cyIsInN0YXRlT2JqZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJwYXRoIiwiZDMiLCJnZW9QYXRoIiwiem9vbWVkIiwiZXZlbnQiLCJ0cmFuc2Zvcm0iLCJnIiwiYXR0ciIsImsiLCJ6b29tIiwic2NhbGVFeHRlbnQiLCJvbiIsInN2ZyIsImNyZWF0ZSIsInJlc2V0IiwiYXBwZW5kIiwic3RhdGVzIiwic2VsZWN0QWxsIiwiZGF0YSIsInRvcG9qc29uIiwiZmVhdHVyZSIsIm9iamVjdHMiLCJmZWF0dXJlcyIsImpvaW4iLCJjbGlja2VkIiwidGV4dCIsImQiLCJwcm9wZXJ0aWVzIiwibmFtZSIsIm1lc2giLCJhIiwiYiIsImNhbGwiLCJ0cmFuc2l0aW9uIiwic3R5bGUiLCJkdXJhdGlvbiIsInpvb21JZGVudGl0eSIsInpvb21UcmFuc2Zvcm0iLCJub2RlIiwiaW52ZXJ0IiwieDAiLCJ5MCIsIngxIiwieTEiLCJib3VuZHMiLCJzdG9wUHJvcGFnYXRpb24iLCJzZWxlY3QiLCJ0cmFuc2xhdGUiLCJzY2FsZSIsIk1hdGgiLCJtaW4iLCJtYXgiLCJwb2ludGVyIiwidXBkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/map.js\n");

/***/ }),

/***/ "./src/scripts/population.js":
/*!***********************************!*\
  !*** ./src/scripts/population.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Population {\n  constructor() {\n    this.linksByDate = {\n      0: 'https://api.census.gov/data/2021/pep/population?get=POP_2021,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n      1: 'https://api.census.gov/data/2021/pep/population?get=POP_2020,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n      2: 'https://api.census.gov/data/2019/pep/population?get=POP,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n      3: 'https://api.census.gov/data/2018/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n      4: 'https://api.census.gov/data/2017/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n    };\n  }\n\n  // Iterates over an object of links and fetches population data from census.gov for each year since 2017\n  static async fetchPopulation(linksData) {\n    let populationByYear = {};\n    for (let i = 0; i < 5; i++) {\n      // Grab link from object\n      let apiLink = linksData.linksByDate[i];\n      // Fetch data from API link\n      const dataArray = await fetch(apiLink).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not OK');\n        }\n        return response.json();\n      }).then(data => data).catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n      });\n\n      // Parse data into JSON, but because of the nature of the data, following code returns an 2D array\n      const data = JSON.parse(JSON.stringify(dataArray));\n\n      // Create key-value pair for each ear and its corresponding population data object\n      populationByYear[i] = linksData.createPopulationObject(data);\n      // debugger\n    }\n\n    // debugger\n    return populationByYear;\n  }\n\n  // Create an object from the data array\n  createPopulationObject(data) {\n    let jsonObject;\n    if (Array.isArray(data) && data.length > 0) {\n      let keys = data[0]; // keys are the first row\n      keys = keys.map(key => key === 'POP_2021' || key === 'POP_2020' ? key = 'POP' : key);\n      jsonObject = data.slice(1).reduce((acc, item) => {\n        acc[item[1]] = keys.reduce((obj, key, index) => {\n          if (key !== 'NAME') {\n            obj[key] = item[index];\n          }\n          return obj;\n        }, {});\n        return acc;\n      }, {});\n    }\n    return jsonObject;\n  }\n  getStatePopulation(state, data, year) {\n    let population = [];\n    if (year === undefined) {\n      for (let i = 0; i < 5; i++) {\n        let populationNumber = data[i][state]['POP'];\n        population.push(populationNumber);\n      }\n    } else {\n      // Year should be an integer value from 0 to 4\n      population.push(data[year][state]['POP']);\n      let currentYear = parseInt(data[year][state]['POP']);\n      let lastYear = parseInt(data[1][state]['POP']);\n      currentYear > lastYear ? population.push(1) : population.push(0);\n    }\n    return population;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Population);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/population.js\n");

/***/ }),

/***/ "./src/scripts/state.js":
/*!******************************!*\
  !*** ./src/scripts/state.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass State {\n  constructor(name, data) {\n    this.name = name;\n    this.population = data.population(name, data.allYearsPop, 0);\n    this.populationHist = data.population(name, data.allYearsPop);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zdGF0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsS0FBSyxDQUFDO0VBQ0pDLFdBQVcsQ0FBQ0MsSUFBSSxFQUFFQyxJQUFJLEVBQUU7SUFDcEIsSUFBSSxDQUFDRCxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDRSxVQUFVLEdBQUdELElBQUksQ0FBQ0MsVUFBVSxDQUFDRixJQUFJLEVBQUVDLElBQUksQ0FBQ0UsV0FBVyxFQUFFLENBQUMsQ0FBQztJQUM1RCxJQUFJLENBQUNDLGNBQWMsR0FBR0gsSUFBSSxDQUFDQyxVQUFVLENBQUNGLElBQUksRUFBRUMsSUFBSSxDQUFDRSxXQUFXLENBQUM7RUFDakU7QUFDUjtBQUdBLCtEQUFlTCxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvc3RhdGUuanM/YTNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTdGF0ZSB7XG4gICAgICAgIGNvbnN0cnVjdG9yKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgICAgICB0aGlzLnBvcHVsYXRpb24gPSBkYXRhLnBvcHVsYXRpb24obmFtZSwgZGF0YS5hbGxZZWFyc1BvcCwgMCk7XG4gICAgICAgICAgICB0aGlzLnBvcHVsYXRpb25IaXN0ID0gZGF0YS5wb3B1bGF0aW9uKG5hbWUsIGRhdGEuYWxsWWVhcnNQb3ApO1xuICAgICAgICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgU3RhdGU7XG4iXSwibmFtZXMiOlsiU3RhdGUiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJkYXRhIiwicG9wdWxhdGlvbiIsImFsbFllYXJzUG9wIiwicG9wdWxhdGlvbkhpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/state.js\n");

/***/ }),

/***/ "./src/scripts/stats.js":
/*!******************************!*\
  !*** ./src/scripts/stats.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Stats {\n  constructor(divEl, state) {\n    this.divEl = divEl;\n    this.state = state;\n    divEl.appendChild(this.setUpStats(state));\n  }\n  setUpStats(state) {\n    let ul = document.createElement('ul');\n    for (let key in state) {\n      let li = document.createElement('li');\n      let keyUppercase = key[0].toUpperCase() + key.slice(1);\n      li.innerHTML = `${keyUppercase}: ${state[key]}`;\n      ul.appendChild(li);\n    }\n    return ul;\n  }\n  update(state) {\n    let lis = this.divEl.querySelectorAll('ul li');\n    Object.keys(state).forEach((key, i) => {\n      lis[i].innerText = `${key[0].toUpperCase() + key.slice(1)}: ${state[key]}`;\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stats);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9zdGF0cy5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTUEsS0FBSyxDQUFDO0VBQ1JDLFdBQVcsQ0FBQ0MsS0FBSyxFQUFFQyxLQUFLLEVBQUU7SUFDdEIsSUFBSSxDQUFDRCxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7SUFDbEJELEtBQUssQ0FBQ0UsV0FBVyxDQUFDLElBQUksQ0FBQ0MsVUFBVSxDQUFDRixLQUFLLENBQUMsQ0FBQztFQUM3QztFQUVBRSxVQUFVLENBQUNGLEtBQUssRUFBRTtJQUNkLElBQUlHLEVBQUUsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsSUFBSSxDQUFDO0lBRXJDLEtBQUssSUFBSUMsR0FBRyxJQUFJTixLQUFLLEVBQUU7TUFDbkIsSUFBSU8sRUFBRSxHQUFHSCxRQUFRLENBQUNDLGFBQWEsQ0FBQyxJQUFJLENBQUM7TUFDckMsSUFBSUcsWUFBWSxHQUFHRixHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUNHLFdBQVcsRUFBRSxHQUFHSCxHQUFHLENBQUNJLEtBQUssQ0FBQyxDQUFDLENBQUM7TUFDdERILEVBQUUsQ0FBQ0ksU0FBUyxHQUFJLEdBQUVILFlBQWEsS0FBSVIsS0FBSyxDQUFDTSxHQUFHLENBQUUsRUFBQztNQUMvQ0gsRUFBRSxDQUFDRixXQUFXLENBQUNNLEVBQUUsQ0FBQztJQUN0QjtJQUVBLE9BQU9KLEVBQUU7RUFDYjtFQUVBUyxNQUFNLENBQUNaLEtBQUssRUFBRTtJQUNWLElBQUlhLEdBQUcsR0FBRyxJQUFJLENBQUNkLEtBQUssQ0FBQ2UsZ0JBQWdCLENBQUMsT0FBTyxDQUFDO0lBQzlDQyxNQUFNLENBQUNDLElBQUksQ0FBQ2hCLEtBQUssQ0FBQyxDQUFDaUIsT0FBTyxDQUFDLENBQUNYLEdBQUcsRUFBRVksQ0FBQyxLQUFLO01BQ25DTCxHQUFHLENBQUNLLENBQUMsQ0FBQyxDQUFDQyxTQUFTLEdBQUksR0FBRWIsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDRyxXQUFXLEVBQUUsR0FBR0gsR0FBRyxDQUFDSSxLQUFLLENBQUMsQ0FBQyxDQUFFLEtBQUlWLEtBQUssQ0FBQ00sR0FBRyxDQUFFLEVBQUM7SUFDOUUsQ0FBQyxDQUFDO0VBQ047QUFDSjtBQUdBLCtEQUFlVCxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvc3RhdHMuanM/YTQ1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmNsYXNzIFN0YXRzIHtcbiAgICBjb25zdHJ1Y3RvcihkaXZFbCwgc3RhdGUpIHtcbiAgICAgICAgdGhpcy5kaXZFbCA9IGRpdkVsO1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICAgIGRpdkVsLmFwcGVuZENoaWxkKHRoaXMuc2V0VXBTdGF0cyhzdGF0ZSkpO1xuICAgIH1cblxuICAgIHNldFVwU3RhdHMoc3RhdGUpIHtcbiAgICAgICAgbGV0IHVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcblxuICAgICAgICBmb3IgKGxldCBrZXkgaW4gc3RhdGUpIHtcbiAgICAgICAgICAgIGxldCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgICAgICBsZXQga2V5VXBwZXJjYXNlID0ga2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBrZXkuc2xpY2UoMSlcbiAgICAgICAgICAgIGxpLmlubmVySFRNTCA9IGAke2tleVVwcGVyY2FzZX06ICR7c3RhdGVba2V5XX1gO1xuICAgICAgICAgICAgdWwuYXBwZW5kQ2hpbGQobGkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHVsO1xuICAgIH1cblxuICAgIHVwZGF0ZShzdGF0ZSkge1xuICAgICAgICBsZXQgbGlzID0gdGhpcy5kaXZFbC5xdWVyeVNlbGVjdG9yQWxsKCd1bCBsaScpO1xuICAgICAgICBPYmplY3Qua2V5cyhzdGF0ZSkuZm9yRWFjaCgoa2V5LCBpKSA9PiB7XG4gICAgICAgICAgICBsaXNbaV0uaW5uZXJUZXh0ID0gYCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBrZXkuc2xpY2UoMSl9OiAke3N0YXRlW2tleV19YDtcbiAgICAgICAgfSlcbiAgICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgU3RhdHM7XG4iXSwibmFtZXMiOlsiU3RhdHMiLCJjb25zdHJ1Y3RvciIsImRpdkVsIiwic3RhdGUiLCJhcHBlbmRDaGlsZCIsInNldFVwU3RhdHMiLCJ1bCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImtleSIsImxpIiwia2V5VXBwZXJjYXNlIiwidG9VcHBlckNhc2UiLCJzbGljZSIsImlubmVySFRNTCIsInVwZGF0ZSIsImxpcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImkiLCJpbm5lclRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/stats.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;