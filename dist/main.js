/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/lineChart.js":
/*!***************************!*\
  !*** ./dist/lineChart.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction LineChart(data) {\n  let {\n    x = _ref => {\n      let [x] = _ref;\n      return x;\n    },\n    // given d in data, returns the (temporal) x-value\n    y = _ref2 => {\n      let [, y] = _ref2;\n      return y;\n    },\n    // given d in data, returns the (quantitative) y-value\n    z = () => 1,\n    // given d in data, returns the (categorical) z-value\n    title,\n    // given d in data, returns the title text\n    defined,\n    // for gaps in data\n    curve = d3.curveLinear,\n    // method of interpolation between points\n    marginTop = 50,\n    // top margin, in pixels\n    marginRight = 0,\n    // right margin, in pixels\n    marginBottom = 50,\n    // bottom margin, in pixels\n    marginLeft = 30,\n    // left margin, in pixels\n    width,\n    // outer width, in pixels\n    height,\n    // outer height, in pixels\n    xType = d3.scaleUtc,\n    // type of x-scale\n    xDomain,\n    // [xmin, xmax]\n    xRange = [marginLeft, width - marginRight],\n    // [left, right]\n    yType = d3.scaleLinear,\n    // type of y-scale\n    yDomain,\n    // [ymin, ymax]\n    yRange = [height - marginBottom, marginTop],\n    // [bottom, top]\n    yFormat,\n    // a format specifier string for the y-axis\n    yLabel,\n    // a label for the y-axis\n    zDomain,\n    // array of z-values\n    color = \"currentColor\",\n    // stroke color of line, as a constant or a function of *z*\n    strokeLinecap,\n    // stroke line cap of line\n    strokeLinejoin,\n    // stroke line join of line\n    strokeWidth = 1.0,\n    // stroke width of line\n    strokeOpacity,\n    // stroke opacity of line\n    mixBlendMode = \"multiply\",\n    // blend mode of lines\n    voronoi // show a Voronoi overlay? (for debugging)\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Compute values.\n\n  const X = d3.map(data, x);\n  const Y = d3.map(data, y);\n  const Z = d3.map(data, z);\n  const O = d3.map(data, d => d);\n  if (defined === undefined) defined = (d, i) => !isNaN(X[i]) && !isNaN(Y[i]);\n  const D = d3.map(data, defined);\n\n  // Compute default domains, and unique the z-domain.\n  if (xDomain === undefined) xDomain = d3.extent(X);\n  if (yDomain === undefined) yDomain = [0, d3.max(Y, d => typeof d === \"string\" ? +d : d)];\n  if (zDomain === undefined) zDomain = Z;\n  zDomain = new d3.InternSet(zDomain);\n\n  // Omit any data not present in the z-domain.\n  const I = d3.range(X.length).filter(i => zDomain.has(Z[i]));\n\n  // width = d3.select(\"chart\")._groups[0][0].clientWidth;\n  // height = d3.select(\"chart\")._groups[0][0].clientHeight;\n  // Construct scales and axes.\n  const xScale = xType(xDomain, xRange);\n  const yScale = yType(yDomain, yRange);\n  const xAxis = d3.axisBottom(xScale).ticks(width / 80).tickSizeOuter(0);\n  const yAxis = d3.axisLeft(yScale).ticks(height / 60, yFormat);\n\n  // Compute titles.\n  const T = title === undefined ? Z : title === null ? null : d3.map(data, title);\n\n  // Construct a line generator.\n  const line = d3.line().defined(i => D[i]).curve(curve).x(i => xScale(X[i])).y(i => yScale(Y[i]));\n  const svg = d3.create(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic;\").style(\"-webkit-tap-highlight-color\", \"transparent\").on(\"pointerenter\", pointerentered).on(\"pointermove\", pointermoved).on(\"pointerleave\", pointerleft).on(\"touchstart\", event => event.preventDefault());\n\n  // An optional Voronoi display (for fun).\n  if (voronoi) svg.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"red\").attr(\"d\", d3.Delaunay.from(I, i => xScale(X[i]), i => yScale(Y[i])).voronoi([0, 0, width, height]).render());\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height - marginBottom})`).attr(\"stroke-opacity\", \"0.3\").call(xAxis);\n\n  // Y axis\n  svg.append(\"g\").attr(\"transform\", `translate(${marginLeft},0)`).call(yAxis).attr(\"font-size\", 15) // font size of y-axis\n  .attr(\"font-family\", \"Inconsolata, monospace\").call(g => g.select(\".domain\").remove()).call(voronoi ? () => {} : g => g.selectAll(\".tick line\").clone().attr(\"x2\", width - marginLeft - marginRight).attr(\"stroke-opacity\", 0.1)).call(g => g.append(\"text\").attr(\"x\", -marginLeft - 70).attr(\"y\", -marginRight + 10).attr(\"transform\", \"rotate(-90)\").attr(\"fill\", \"green\").attr(\"text-anchor\", \"start\"));\n  // .text(yLabel));\n\n  const path = svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke\", typeof color === \"string\" ? color : null).attr(\"stroke-linecap\", strokeLinecap).attr(\"stroke-linejoin\", strokeLinejoin).attr(\"stroke-width\", strokeWidth).attr(\"stroke-opacity\", strokeOpacity).selectAll(\"path\").data(d3.group(I, i => Z[i])).join(\"path\")\n  // .style(\"mix-blend-mode\", mixBlendMode)\n  .style(\"stroke\", \"#ddd\").attr(\"stroke\", typeof color === \"function\" ? _ref3 => {\n    let [z] = _ref3;\n    return color(z);\n  } : null).attr(\"d\", _ref4 => {\n    let [, I] = _ref4;\n    return line(I);\n  });\n  const dot = svg.append(\"g\").attr(\"display\", \"none\");\n  dot.append(\"circle\").attr(\"r\", 3.5).attr(\"fill\", \"white\");\n  dot.append(\"text\").attr(\"font-family\", \"Inter\").attr(\"font-size\", 13).attr(\"fill\", \"white\").attr(\"text-anchor\", \"middle\").attr(\"y\", -8);\n  function pointermoved(event) {\n    const [xm, ym] = d3.pointer(event);\n    const i = d3.least(I, i => Math.hypot(xScale(X[i]) - xm, yScale(Y[i]) - ym)); // closest point\n    path.style(\"stroke-width\", _ref5 => {\n      let [z] = _ref5;\n      return Z[i] === z ? 3 : strokeWidth;\n    }).style(\"stroke\", _ref6 => {\n      let [z] = _ref6;\n      return Z[i] === z ? null : \"#ddd\";\n    }).filter(_ref7 => {\n      let [z] = _ref7;\n      return Z[i] === z;\n    }).raise(); // inactive lines\n    // path.style(\"stroke\", ([z]) => Z[i] === z ? null : \"#ddd\").filter(([z]) => Z[i] === z).raise(); // inactive lines\n    // path.style(\"stroke-width\", 3);\n    dot.attr(\"transform\", `translate(${xScale(X[i])},${yScale(Y[i])})`);\n    if (T) dot.select(\"text\").text(T[i]);\n    svg.property(\"value\", O[i]).dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  function pointerentered() {\n    path.style(\"mix-blend-mode\", null).style(\"stroke\", \"#ddd\");\n    dot.attr(\"display\", null);\n  }\n  function pointerleft() {\n    // path.style(\"mix-blend-mode\", mixBlendMode).style(\"stroke\", null);\n    dot.attr(\"display\", \"none\");\n    svg.node().value = null;\n    svg.dispatch(\"input\", {\n      bubbles: true\n    });\n  }\n  return Object.assign(svg.node(), {\n    value: null\n  });\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (LineChart);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./dist/lineChart.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_census__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/census */ \"./src/scripts/census.js\");\n/* harmony import */ var _scripts_bea__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/bea */ \"./src/scripts/bea.js\");\n/* harmony import */ var _scripts_stats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/stats */ \"./src/scripts/stats.js\");\n/* harmony import */ var _scripts_state__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/state */ \"./src/scripts/state.js\");\n/* harmony import */ var _dist_lineChart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dist/lineChart */ \"./dist/lineChart.js\");\n// import map from './scripts/map';\n\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  // const mapDiv = document.getElementById('map');\n  const statsEl = document.getElementById('stats');\n  // mapDiv.style.width = '100%';\n\n  // Load map\n  const res = await fetch(`https://cdn.jsdelivr.net/npm/us-atlas@3/states-albers-10m.json`);\n  // const mapJson = await res.json()\n\n  // Fetch and setup data\n  const data = await setupData();\n  const states = _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setupStates(data);\n  const stats = new _scripts_stats__WEBPACK_IMPORTED_MODULE_2__[\"default\"](statsEl, states);\n  window['chartCategory'] = 'populationHistorical';\n  window['usData'] = stats.chartData(data);\n\n  // const loadMap = map(mapJson, stats, states, setupLineChart);\n  // mapDiv.appendChild(loadMap);\n\n  const stateData = _scripts_state__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setUpLineChartHistorical(states['Ohio'].populationHist, 'Ohio');\n  const chart = setupLineChart(window['usData'].concat(stateData));\n  const lineChart = document.getElementById('chart');\n  lineChart.appendChild(chart);\n  const loading = document.getElementsByClassName('loading');\n  loading[0].style.display = 'none';\n  let modButton = document.getElementById('modul_button');\n  modButton.style.display = 'block';\n  modButton.addEventListener('click', () => {\n    document.getElementById('modul').remove();\n  });\n});\nconst setupData = async () => {\n  const census = new _scripts_census__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n  const bea = new _scripts_bea__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  const populationHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fetchData(census.populationLinks);\n  const employmentHistorical = await _scripts_census__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fetchData(census.employmentLinks);\n  const gdpHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(bea.gdpLink);\n  const personalIncomeHistorical = await _scripts_bea__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchData(bea.personalIncomeLink);\n  const data = {\n    'name': '',\n    'populationHistorical': populationHistorical,\n    'employmentHistorical': employmentHistorical,\n    'gdpHistorical': gdpHistorical,\n    'personalIncomeHistorical': personalIncomeHistorical,\n    'getStatsCensus': census.getStateStats,\n    'getStatsBea': bea.getStateStats\n  };\n  return data;\n};\nconst setupLineChart = data => {\n  return (0,_dist_lineChart__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(data, {\n    x: d => d.date,\n    y: d => d.populationHistorical,\n    z: d => d.state,\n    yDomain: [1, 30],\n    yLabel: \"↑ Unemployment (%)\",\n    height: 500,\n    width: 500,\n    color: \"#29DEF2\"\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MkRBQVMsQ0FBQ08sSUFBSSxFQUFFO0lBQ25CaUMsQ0FBQyxFQUFFQyxDQUFDLElBQUlBLENBQUMsQ0FBQ0MsSUFBSTtJQUNkQyxDQUFDLEVBQUVGLENBQUMsSUFBSUEsQ0FBQyxDQUFDWCxvQkFBb0I7SUFDOUJjLENBQUMsRUFBRUgsQ0FBQyxJQUFJQSxDQUFDLENBQUNJLEtBQUs7SUFDZkMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUNoQkMsTUFBTSxFQUFFLG9CQUFvQjtJQUM1QkMsTUFBTSxFQUFFLEdBQUc7SUFDWEMsS0FBSyxFQUFFLEdBQUc7SUFDVkMsS0FBSyxFQUFFO0VBQ1gsQ0FBQyxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXdlYnBhY2stcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBtYXAgZnJvbSAnLi9zY3JpcHRzL21hcCc7XG5pbXBvcnQgQ2Vuc3VzIGZyb20gJy4vc2NyaXB0cy9jZW5zdXMnO1xuaW1wb3J0IEJlYSBmcm9tICcuL3NjcmlwdHMvYmVhJztcbmltcG9ydCBTdGF0cyBmcm9tICcuL3NjcmlwdHMvc3RhdHMnO1xuaW1wb3J0IFN0YXRlIGZyb20gJy4vc2NyaXB0cy9zdGF0ZSc7XG5pbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4uL2Rpc3QvbGluZUNoYXJ0JztcblxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIGNvbnN0IG1hcERpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKTtcbiAgICBjb25zdCBzdGF0c0VsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXRzJyk7XG4gICAgLy8gbWFwRGl2LnN0eWxlLndpZHRoID0gJzEwMCUnO1xuXG4gICAgLy8gTG9hZCBtYXBcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS91cy1hdGxhc0AzL3N0YXRlcy1hbGJlcnMtMTBtLmpzb25gKVxuICAgIC8vIGNvbnN0IG1hcEpzb24gPSBhd2FpdCByZXMuanNvbigpXG5cbiAgICAvLyBGZXRjaCBhbmQgc2V0dXAgZGF0YVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBzZXR1cERhdGEoKVxuICAgIGNvbnN0IHN0YXRlcyA9IFN0YXRlLnNldHVwU3RhdGVzKGRhdGEpO1xuICAgIGNvbnN0IHN0YXRzID0gbmV3IFN0YXRzKHN0YXRzRWwsIHN0YXRlcyk7XG5cbiAgICB3aW5kb3dbJ2NoYXJ0Q2F0ZWdvcnknXSA9ICdwb3B1bGF0aW9uSGlzdG9yaWNhbCdcbiAgICB3aW5kb3dbJ3VzRGF0YSddID0gc3RhdHMuY2hhcnREYXRhKGRhdGEpO1xuXG5cbiAgICAvLyBjb25zdCBsb2FkTWFwID0gbWFwKG1hcEpzb24sIHN0YXRzLCBzdGF0ZXMsIHNldHVwTGluZUNoYXJ0KTtcbiAgICAvLyBtYXBEaXYuYXBwZW5kQ2hpbGQobG9hZE1hcCk7XG5cblxuICAgIGNvbnN0IHN0YXRlRGF0YSA9IFN0YXRlLnNldFVwTGluZUNoYXJ0SGlzdG9yaWNhbChzdGF0ZXNbJ09oaW8nXS5wb3B1bGF0aW9uSGlzdCwgJ09oaW8nKTtcbiAgICBjb25zdCBjaGFydCA9IHNldHVwTGluZUNoYXJ0KHdpbmRvd1sndXNEYXRhJ10uY29uY2F0KHN0YXRlRGF0YSkpO1xuICAgIGNvbnN0IGxpbmVDaGFydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGFydCcpO1xuICAgIGxpbmVDaGFydC5hcHBlbmRDaGlsZChjaGFydClcblxuICAgIGNvbnN0IGxvYWRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdsb2FkaW5nJyk7XG4gICAgbG9hZGluZ1swXS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gICAgbGV0IG1vZEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2R1bF9idXR0b24nKVxuICAgIG1vZEJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBtb2RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2R1bCcpLnJlbW92ZSgpO1xuICAgIH0pO1xufSk7XG5cblxuY29uc3Qgc2V0dXBEYXRhID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGNlbnN1cyA9IG5ldyBDZW5zdXMoKTtcbiAgICBjb25zdCBiZWEgPSBuZXcgQmVhKCk7XG4gICAgY29uc3QgcG9wdWxhdGlvbkhpc3RvcmljYWwgPSBhd2FpdCBDZW5zdXMuZmV0Y2hEYXRhKGNlbnN1cy5wb3B1bGF0aW9uTGlua3MpO1xuICAgIGNvbnN0IGVtcGxveW1lbnRIaXN0b3JpY2FsID0gYXdhaXQgQ2Vuc3VzLmZldGNoRGF0YShjZW5zdXMuZW1wbG95bWVudExpbmtzKTtcbiAgICBjb25zdCBnZHBIaXN0b3JpY2FsID0gYXdhaXQgQmVhLmZldGNoRGF0YShiZWEuZ2RwTGluayk7XG4gICAgY29uc3QgcGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsID0gYXdhaXQgQmVhLmZldGNoRGF0YShiZWEucGVyc29uYWxJbmNvbWVMaW5rKTtcblxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICAgICduYW1lJzogJycsXG4gICAgICAgICdwb3B1bGF0aW9uSGlzdG9yaWNhbCc6IHBvcHVsYXRpb25IaXN0b3JpY2FsLFxuICAgICAgICAnZW1wbG95bWVudEhpc3RvcmljYWwnOiBlbXBsb3ltZW50SGlzdG9yaWNhbCxcbiAgICAgICAgJ2dkcEhpc3RvcmljYWwnOiBnZHBIaXN0b3JpY2FsLFxuICAgICAgICAncGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsJzogcGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsLFxuICAgICAgICAnZ2V0U3RhdHNDZW5zdXMnOiBjZW5zdXMuZ2V0U3RhdGVTdGF0cyxcbiAgICAgICAgJ2dldFN0YXRzQmVhJzogYmVhLmdldFN0YXRlU3RhdHMsXG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGE7XG59XG5cblxuY29uc3Qgc2V0dXBMaW5lQ2hhcnQgPSAoZGF0YSkgPT4ge1xuXG4gICAgcmV0dXJuIExpbmVDaGFydChkYXRhLCB7XG4gICAgICAgIHg6IGQgPT4gZC5kYXRlLFxuICAgICAgICB5OiBkID0+IGQucG9wdWxhdGlvbkhpc3RvcmljYWwsXG4gICAgICAgIHo6IGQgPT4gZC5zdGF0ZSxcbiAgICAgICAgeURvbWFpbjogWzEsIDMwXSxcbiAgICAgICAgeUxhYmVsOiBcIuKGkSBVbmVtcGxveW1lbnQgKCUpXCIsXG4gICAgICAgIGhlaWdodDogNTAwLFxuICAgICAgICB3aWR0aDogNTAwLFxuICAgICAgICBjb2xvcjogXCIjMjlERUYyXCIsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsiQ2Vuc3VzIiwiQmVhIiwiU3RhdHMiLCJTdGF0ZSIsIkxpbmVDaGFydCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0YXRzRWwiLCJnZXRFbGVtZW50QnlJZCIsInJlcyIsImZldGNoIiwiZGF0YSIsInNldHVwRGF0YSIsInN0YXRlcyIsInNldHVwU3RhdGVzIiwic3RhdHMiLCJ3aW5kb3ciLCJjaGFydERhdGEiLCJzdGF0ZURhdGEiLCJzZXRVcExpbmVDaGFydEhpc3RvcmljYWwiLCJwb3B1bGF0aW9uSGlzdCIsImNoYXJ0Iiwic2V0dXBMaW5lQ2hhcnQiLCJjb25jYXQiLCJsaW5lQ2hhcnQiLCJhcHBlbmRDaGlsZCIsImxvYWRpbmciLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic3R5bGUiLCJkaXNwbGF5IiwibW9kQnV0dG9uIiwicmVtb3ZlIiwiY2Vuc3VzIiwiYmVhIiwicG9wdWxhdGlvbkhpc3RvcmljYWwiLCJmZXRjaERhdGEiLCJwb3B1bGF0aW9uTGlua3MiLCJlbXBsb3ltZW50SGlzdG9yaWNhbCIsImVtcGxveW1lbnRMaW5rcyIsImdkcEhpc3RvcmljYWwiLCJnZHBMaW5rIiwicGVyc29uYWxJbmNvbWVIaXN0b3JpY2FsIiwicGVyc29uYWxJbmNvbWVMaW5rIiwiZ2V0U3RhdGVTdGF0cyIsIngiLCJkIiwiZGF0ZSIsInkiLCJ6Iiwic3RhdGUiLCJ5RG9tYWluIiwieUxhYmVsIiwiaGVpZ2h0Iiwid2lkdGgiLCJjb2xvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/apiUtil.js":
/*!********************************!*\
  !*** ./src/scripts/apiUtil.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst apiUtil = {\n  fetchEndpoint: async function (apiLink) {\n    return fetch(apiLink).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not OK');\n      }\n      return response.json();\n    }).then(data => data).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiUtil);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hcGlVdGlsLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLEdBQUc7RUFDWkMsYUFBYSxFQUFFLGdCQUFlQyxPQUFPLEVBQUU7SUFDbkMsT0FBT0MsS0FBSyxDQUFDRCxPQUFPLENBQUMsQ0FDaEJFLElBQUksQ0FBRUMsUUFBUSxJQUFLO01BQ2hCLElBQUksQ0FBQ0EsUUFBUSxDQUFDQyxFQUFFLEVBQUU7UUFDZCxNQUFNLElBQUlDLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQztNQUNsRDtNQUNBLE9BQU9GLFFBQVEsQ0FBQ0csSUFBSSxFQUFFO0lBQzFCLENBQUMsQ0FBQyxDQUNESixJQUFJLENBQUNLLElBQUksSUFBSUEsSUFBSSxDQUFDLENBQ2xCQyxLQUFLLENBQUVDLEtBQUssSUFBSztNQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBQyxxREFBcUQsRUFBRUEsS0FBSyxDQUFDO0lBQy9FLENBQUMsQ0FBQztFQUNWO0FBQ0osQ0FBQztBQUdELCtEQUFlWCxPQUFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvYXBpVXRpbC5qcz81ZTZkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwaVV0aWwgPSB7XG4gICAgZmV0Y2hFbmRwb2ludDogYXN5bmMgZnVuY3Rpb24oYXBpTGluaykge1xuICAgICAgICByZXR1cm4gZmV0Y2goYXBpTGluaylcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIHJlc3BvbnNlIHdhcyBub3QgT0snKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihkYXRhID0+IGRhdGEpXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggeW91ciBmZXRjaCBvcGVyYXRpb246JywgZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IGFwaVV0aWw7XG4iXSwibmFtZXMiOlsiYXBpVXRpbCIsImZldGNoRW5kcG9pbnQiLCJhcGlMaW5rIiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJvayIsIkVycm9yIiwianNvbiIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/apiUtil.js\n");

/***/ }),

/***/ "./src/scripts/bea.js":
/*!****************************!*\
  !*** ./src/scripts/bea.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\n\n\nclass Bea {\n  constructor() {\n    this.gdpLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gdp).join('');\n    this.personalIncomeLink = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].personalIncome).join('');\n  }\n  static async fetchData(apiLink) {\n    const dataArray = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n    let twoDArrayOfData = dataArray['BEAAPI']['Results']['Data'];\n    return Bea.createGdpObject(twoDArrayOfData);\n  }\n  static createGdpObject(dataArr) {\n    var output = {};\n    for (let i = 0; i < dataArr.length; i++) {\n      let key = dataArr[i].TimePeriod - 2017;\n      if (output[key]) {\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      } else {\n        output[key] = {};\n        output[key][dataArr[i].GeoName] = dataArr[i].DataValue;\n      }\n    }\n    return output;\n  }\n  getStateStats(state, data, year) {\n    let gdp = [];\n    if (year === undefined) {\n      for (let i = 0; i < 5; i++) {\n        gdp.push(data[i][state]);\n      }\n    } else {\n      let currentYear = data[year][state];\n      let lastYear = data[1][state];\n      gdp.push(currentYear);\n      currentYear > lastYear ? gdp.push(1) : gdp.push(0);\n    }\n    return gdp;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bea);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iZWEuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQStCO0FBQ0k7QUFFbkMsTUFBTUUsR0FBRyxDQUFDO0VBQ05DLFdBQVcsR0FBRztJQUNWLElBQUksQ0FBQ0MsT0FBTyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ04scURBQVksQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0lBQ25ELElBQUksQ0FBQ0Msa0JBQWtCLEdBQUdILE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTixnRUFBdUIsQ0FBQyxDQUFDTyxJQUFJLENBQUMsRUFBRSxDQUFDO0VBQzdFO0VBR0EsYUFBYUUsU0FBUyxDQUFDQyxPQUFPLEVBQUU7SUFDNUIsTUFBTUMsU0FBUyxHQUFHLE1BQU1WLGlFQUFxQixDQUFDUyxPQUFPLENBQUM7SUFDdEQsSUFBSUcsZUFBZSxHQUFHRixTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBRTVELE9BQU9ULEdBQUcsQ0FBQ1ksZUFBZSxDQUFDRCxlQUFlLENBQUM7RUFDL0M7RUFHQSxPQUFPQyxlQUFlLENBQUNDLE9BQU8sRUFBRTtJQUM1QixJQUFJQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLE9BQU8sQ0FBQ0csTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtNQUNyQyxJQUFJRSxHQUFHLEdBQUdKLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNHLFVBQVUsR0FBRyxJQUFJO01BQ3RDLElBQUdKLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEVBQUM7UUFDWEgsTUFBTSxDQUFDRyxHQUFHLENBQUMsQ0FBQ0osT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ksT0FBTyxDQUFDLEdBQUdOLE9BQU8sQ0FBQ0UsQ0FBQyxDQUFDLENBQUNLLFNBQVM7TUFDMUQsQ0FBQyxNQUFLO1FBQ0ZOLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCSCxNQUFNLENBQUNHLEdBQUcsQ0FBQyxDQUFDSixPQUFPLENBQUNFLENBQUMsQ0FBQyxDQUFDSSxPQUFPLENBQUMsR0FBR04sT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FBQ0ssU0FBUztNQUMxRDtJQUNKO0lBQ0EsT0FBT04sTUFBTTtFQUNqQjtFQUdBTyxhQUFhLENBQUNDLEtBQUssRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUU7SUFDN0IsSUFBSUMsR0FBRyxHQUFHLEVBQUU7SUFFWixJQUFJRCxJQUFJLEtBQUtFLFNBQVMsRUFBRTtNQUNwQixLQUFLLElBQUlYLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsRUFBRSxFQUFFO1FBQ3hCVSxHQUFHLENBQUNFLElBQUksQ0FBQ0osSUFBSSxDQUFDUixDQUFDLENBQUMsQ0FBQ08sS0FBSyxDQUFDLENBQUM7TUFDNUI7SUFDSixDQUFDLE1BQU07TUFDSCxJQUFJTSxXQUFXLEdBQUdMLElBQUksQ0FBQ0MsSUFBSSxDQUFDLENBQUNGLEtBQUssQ0FBQztNQUNuQyxJQUFJTyxRQUFRLEdBQUdOLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsS0FBSyxDQUFDO01BQzdCRyxHQUFHLENBQUNFLElBQUksQ0FBQ0MsV0FBVyxDQUFDO01BQ3JCQSxXQUFXLEdBQUdDLFFBQVEsR0FBR0osR0FBRyxDQUFDRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0UsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RDtJQUVBLE9BQU9GLEdBQUc7RUFDZDtBQUNKO0FBR0EsK0RBQWV6QixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2VicGFjay1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvYmVhLmpzP2U4YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExJTktTIGZyb20gJy4vbGlua3MuanMnO1xuaW1wb3J0IGFwaVV0aWwgZnJvbSAnLi9hcGlVdGlsLmpzJztcblxuY2xhc3MgQmVhIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5nZHBMaW5rID0gT2JqZWN0LnZhbHVlcyhMSU5LU1snZ2RwJ10pLmpvaW4oJycpO1xuICAgICAgICB0aGlzLnBlcnNvbmFsSW5jb21lTGluayA9IE9iamVjdC52YWx1ZXMoTElOS1NbJ3BlcnNvbmFsSW5jb21lJ10pLmpvaW4oJycpO1xuICAgIH1cblxuXG4gICAgc3RhdGljIGFzeW5jIGZldGNoRGF0YShhcGlMaW5rKSB7XG4gICAgICAgIGNvbnN0IGRhdGFBcnJheSA9IGF3YWl0IGFwaVV0aWwuZmV0Y2hFbmRwb2ludChhcGlMaW5rKTtcbiAgICAgICAgbGV0IHR3b0RBcnJheU9mRGF0YSA9IGRhdGFBcnJheVsnQkVBQVBJJ11bJ1Jlc3VsdHMnXVsnRGF0YSddO1xuXG4gICAgICAgIHJldHVybiBCZWEuY3JlYXRlR2RwT2JqZWN0KHR3b0RBcnJheU9mRGF0YSk7XG4gICAgfVxuXG5cbiAgICBzdGF0aWMgY3JlYXRlR2RwT2JqZWN0KGRhdGFBcnIpIHtcbiAgICAgICAgdmFyIG91dHB1dCA9IHt9O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGFBcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBrZXkgPSBkYXRhQXJyW2ldLlRpbWVQZXJpb2QgLSAyMDE3O1xuICAgICAgICAgICAgaWYob3V0cHV0W2tleV0pe1xuICAgICAgICAgICAgICAgIG91dHB1dFtrZXldW2RhdGFBcnJbaV0uR2VvTmFtZV0gPSBkYXRhQXJyW2ldLkRhdGFWYWx1ZVxuICAgICAgICAgICAgfSBlbHNle1xuICAgICAgICAgICAgICAgIG91dHB1dFtrZXldID0ge307XG4gICAgICAgICAgICAgICAgb3V0cHV0W2tleV1bZGF0YUFycltpXS5HZW9OYW1lXSA9IGRhdGFBcnJbaV0uRGF0YVZhbHVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG5cblxuICAgIGdldFN0YXRlU3RhdHMoc3RhdGUsIGRhdGEsIHllYXIpIHtcbiAgICAgICAgbGV0IGdkcCA9IFtdXG5cbiAgICAgICAgaWYgKHllYXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgICAgICAgICAgICBnZHAucHVzaChkYXRhW2ldW3N0YXRlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgY3VycmVudFllYXIgPSBkYXRhW3llYXJdW3N0YXRlXVxuICAgICAgICAgICAgbGV0IGxhc3RZZWFyID0gZGF0YVsxXVtzdGF0ZV1cbiAgICAgICAgICAgIGdkcC5wdXNoKGN1cnJlbnRZZWFyKTtcbiAgICAgICAgICAgIGN1cnJlbnRZZWFyID4gbGFzdFllYXIgPyBnZHAucHVzaCgxKSA6IGdkcC5wdXNoKDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdkcFxuICAgIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBCZWE7XG4iXSwibmFtZXMiOlsiTElOS1MiLCJhcGlVdGlsIiwiQmVhIiwiY29uc3RydWN0b3IiLCJnZHBMaW5rIiwiT2JqZWN0IiwidmFsdWVzIiwiam9pbiIsInBlcnNvbmFsSW5jb21lTGluayIsImZldGNoRGF0YSIsImFwaUxpbmsiLCJkYXRhQXJyYXkiLCJmZXRjaEVuZHBvaW50IiwidHdvREFycmF5T2ZEYXRhIiwiY3JlYXRlR2RwT2JqZWN0IiwiZGF0YUFyciIsIm91dHB1dCIsImkiLCJsZW5ndGgiLCJrZXkiLCJUaW1lUGVyaW9kIiwiR2VvTmFtZSIsIkRhdGFWYWx1ZSIsImdldFN0YXRlU3RhdHMiLCJzdGF0ZSIsImRhdGEiLCJ5ZWFyIiwiZ2RwIiwidW5kZWZpbmVkIiwicHVzaCIsImN1cnJlbnRZZWFyIiwibGFzdFllYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/bea.js\n");

/***/ }),

/***/ "./src/scripts/census.js":
/*!*******************************!*\
  !*** ./src/scripts/census.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./links.js */ \"./src/scripts/links.js\");\n/* harmony import */ var _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiUtil.js */ \"./src/scripts/apiUtil.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nclass Census {\n  constructor() {\n    _defineProperty(this, \"getStateStats\", (state, data, year) => {\n      let searchKey = this.searchKey(data);\n      if (year === undefined) {\n        return this.historicalData(state, data, searchKey);\n      } else {\n        return this.mostRecentYear(state, data, year, searchKey);\n      }\n    });\n    _defineProperty(this, \"searchKey\", data => {\n      let stateObj = data[0]['Alabama'];\n      return stateObj['TOT_EMP'] ? 'TOT_EMP' : 'POP';\n    });\n    _defineProperty(this, \"mostRecentYear\", (state, data, year, searchKey) => {\n      let outputData = [data[year][state][searchKey]];\n      let currentYear = parseInt(data[year][state][searchKey]);\n      let lastYear = parseInt(data[1][state][searchKey]);\n      let status = currentYear > lastYear ? 1 : 0;\n      outputData.push(status);\n      return outputData;\n    });\n    _defineProperty(this, \"historicalData\", (state, data, searchKey) => {\n      let outputData = [];\n      for (let i = 0; i < 5; i++) {\n        let statValue = data[i][state][searchKey];\n        if (statValue === undefined) continue;\n        outputData.push(statValue);\n      }\n\n      // let histObj = {\n      //     values: outputData,\n      //     dataType: data['data']\n      // }\n\n      return outputData;\n    });\n    this.populationLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].population);\n    this.employmentLinks = Object.values(_links_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].employment);\n  }\n  static async fetchData(links) {\n    let dataByYear = {};\n    dataByYear['data'] = links[0].includes('population') ? 'population' : 'employment';\n    for (let i = 0; i < 5; i++) {\n      let apiLink = links[i];\n      const dataArrayOfCurrYear = await _apiUtil_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fetchEndpoint(apiLink);\n      const jsonData = JSON.parse(JSON.stringify(dataArrayOfCurrYear));\n      dataByYear[i] = Census.createPopulationObject(jsonData);\n    }\n    return dataByYear;\n  }\n  static createPopulationObject(data) {\n    let jsonObject;\n    if (Array.isArray(data) && data.length > 0) {\n      let keys = data[0]; // keys are the first row\n      keys = keys.map(key => key === 'POP_2021' || key === 'POP_2020' ? key = 'POP' : key);\n      jsonObject = data.slice(1).reduce((acc, item) => {\n        let nameIdx = keys.includes('NAME') ? keys.indexOf('NAME') : keys.indexOf(\"GEONAME\");\n        acc[item[nameIdx]] = keys.reduce((obj, key, index) => {\n          if (key !== 'NAME') {\n            obj[key] = item[index];\n          }\n          return obj;\n        }, {});\n        acc['dataType'] = keys[0];\n        return acc;\n      }, {});\n    }\n    return jsonObject;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Census);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/census.js\n");

/***/ }),

/***/ "./src/scripts/links.js":
/*!******************************!*\
  !*** ./src/scripts/links.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst LINKS = {\n  'population': {\n    0: 'https://api.census.gov/data/2021/pep/population?get=POP_2021,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/2021/pep/population?get=POP_2020,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/2019/pep/population?get=POP,NAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/2018/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/2017/pep/population?get=POP,GEONAME&for=state:*&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'employment': {\n    0: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2021&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    1: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2020&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    2: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2019&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    3: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2018&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d',\n    4: 'https://api.census.gov/data/timeseries/govs?get=NAME,TOT_EMP&for=state:*&time=2017&key=80815206a6c8e5c391e74cfd3884b9b0d90f316d'\n  },\n  'gdp': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=1&TableName=CAGDP2&ResultFormat=JSON',\n  'personalIncome': 'https://apps.bea.gov/api/data?&UserID=63D07D0B-8744-419D-821C-656CB11239D2&method=getdata&datasetname=Regional&GeoFips=STATE&LineCode=30&TableName=SAINC50&Year=2017,2018,2019,2020,2021&ResultFormat=JSON'\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (LINKS);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9saW5rcy5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsS0FBSyxHQUFHO0VBQ1YsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLDRIQUE0SDtJQUMvSCxDQUFDLEVBQUUsNEhBQTRIO0lBQy9ILENBQUMsRUFBRSx1SEFBdUg7SUFDMUgsQ0FBQyxFQUFFLDBIQUEwSDtJQUM3SCxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsWUFBWSxFQUFFO0lBQ1YsQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUUsaUlBQWlJO0lBQ3BJLENBQUMsRUFBRSxpSUFBaUk7SUFDcEksQ0FBQyxFQUFFLGlJQUFpSTtJQUNwSSxDQUFDLEVBQUU7RUFDUCxDQUFDO0VBRUQsS0FBSyxFQUFFLDRLQUE0SztFQUNuTCxnQkFBZ0IsRUFBRTtBQUN0QixDQUFDO0FBRUQsK0RBQWVBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvc2NyaXB0cy9saW5rcy5qcz8yZTYxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IExJTktTID0ge1xuICAgICdwb3B1bGF0aW9uJzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIxLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAxOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMjEvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUF8yMDIwLE5BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAyOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhLzIwMTkvcGVwL3BvcHVsYXRpb24/Z2V0PVBPUCxOQU1FJmZvcj1zdGF0ZToqJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMzogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS8yMDE4L3BlcC9wb3B1bGF0aW9uP2dldD1QT1AsR0VPTkFNRSZmb3I9c3RhdGU6KiZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvMjAxNy9wZXAvcG9wdWxhdGlvbj9nZXQ9UE9QLEdFT05BTUUmZm9yPXN0YXRlOioma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnXG4gICAgfSxcblxuICAgICdlbXBsb3ltZW50Jzoge1xuICAgICAgICAwOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAyMSZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDE6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDIwJmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJyxcbiAgICAgICAgMjogJ2h0dHBzOi8vYXBpLmNlbnN1cy5nb3YvZGF0YS90aW1lc2VyaWVzL2dvdnM/Z2V0PU5BTUUsVE9UX0VNUCZmb3I9c3RhdGU6KiZ0aW1lPTIwMTkma2V5PTgwODE1MjA2YTZjOGU1YzM5MWU3NGNmZDM4ODRiOWIwZDkwZjMxNmQnLFxuICAgICAgICAzOiAnaHR0cHM6Ly9hcGkuY2Vuc3VzLmdvdi9kYXRhL3RpbWVzZXJpZXMvZ292cz9nZXQ9TkFNRSxUT1RfRU1QJmZvcj1zdGF0ZToqJnRpbWU9MjAxOCZrZXk9ODA4MTUyMDZhNmM4ZTVjMzkxZTc0Y2ZkMzg4NGI5YjBkOTBmMzE2ZCcsXG4gICAgICAgIDQ6ICdodHRwczovL2FwaS5jZW5zdXMuZ292L2RhdGEvdGltZXNlcmllcy9nb3ZzP2dldD1OQU1FLFRPVF9FTVAmZm9yPXN0YXRlOiomdGltZT0yMDE3JmtleT04MDgxNTIwNmE2YzhlNWMzOTFlNzRjZmQzODg0YjliMGQ5MGYzMTZkJ1xuICAgIH0sXG5cbiAgICAnZ2RwJzogJ2h0dHBzOi8vYXBwcy5iZWEuZ292L2FwaS9kYXRhPyZVc2VySUQ9NjNEMDdEMEItODc0NC00MTlELTgyMUMtNjU2Q0IxMTIzOUQyJm1ldGhvZD1nZXRkYXRhJmRhdGFzZXRuYW1lPVJlZ2lvbmFsJkdlb0ZpcHM9U1RBVEUmTGluZUNvZGU9MSZUYWJsZU5hbWU9Q0FHRFAyJlJlc3VsdEZvcm1hdD1KU09OJyxcbiAgICAncGVyc29uYWxJbmNvbWUnOiAnaHR0cHM6Ly9hcHBzLmJlYS5nb3YvYXBpL2RhdGE/JlVzZXJJRD02M0QwN0QwQi04NzQ0LTQxOUQtODIxQy02NTZDQjExMjM5RDImbWV0aG9kPWdldGRhdGEmZGF0YXNldG5hbWU9UmVnaW9uYWwmR2VvRmlwcz1TVEFURSZMaW5lQ29kZT0zMCZUYWJsZU5hbWU9U0FJTkM1MCZZZWFyPTIwMTcsMjAxOCwyMDE5LDIwMjAsMjAyMSZSZXN1bHRGb3JtYXQ9SlNPTidcbn1cblxuZXhwb3J0IGRlZmF1bHQgTElOS1M7XG4iXSwibmFtZXMiOlsiTElOS1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/links.js\n");

/***/ }),

/***/ "./src/scripts/state.js":
/*!******************************!*\
  !*** ./src/scripts/state.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass State {\n  static setupStates(data) {\n    let states = {};\n    let names = State.stateNames();\n    for (let i = 0; i < 50; i++) {\n      data['name'] = names[i];\n      states[names[i]] = new State(names[i], data);\n    }\n    return states;\n  }\n  constructor(name, data) {\n    this.name = name;\n    let populationArray = data.getStatsCensus(name, data.populationHistorical, 0);\n    this.population = (parseInt(populationArray[0]) / 1000000).toFixed(2);\n    this.populationStatus = populationArray[1];\n    this.populationHist = data.getStatsCensus(name, data.populationHistorical);\n    let employmentArray = data.getStatsCensus(name, data.employmentHistorical, 0);\n    this.employment = (parseInt(employmentArray[0]) / parseInt(populationArray[0]) * 100).toFixed(2);\n    //     (parseInt((employmentArray[0])) / 1000).toFixed(2);\n    this.employmentStatus = employmentArray[1];\n    this.employmentHist = data.getStatsCensus(name, data.employmentHistorical);\n    let gdpArray = data.getStatsBea(name, data.gdpHistorical, 4);\n    this.gdp = (parseInt(gdpArray[0].split(',').join('')) / 1000000).toFixed(2);\n    this.gdpStatus = gdpArray[1];\n    this.gdpHist = data.getStatsBea(name, data.gdpHistorical);\n    let personalIncomeArray = data.getStatsBea(name, data.personalIncomeHistorical, 4);\n    this.personalincome = personalIncomeArray[0];\n    this.personalIncomeStatus = personalIncomeArray[1];\n    this.personalIncomeHist = data.getStatsBea(name, data.personalIncomeHistorical);\n  }\n}\n_defineProperty(State, \"stateNames\", () => {\n  return ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n});\n_defineProperty(State, \"setUpLineChartHistorical\", function (dataArrayFiveYears) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'US';\n  let dates = ['2021-04-02', '2020-04-02', '2019-04-02', '2018-04-02', '2017-04-02'];\n  let historicalData = [];\n  dataArrayFiveYears.forEach((ele, i) => {\n    let lineData = {};\n\n    // let presentOfTotal = (parseInt(ele) / window['usTotal'][i] * 100).toFixed(10);\n    // lineData[window['chartCategory']] = parseFloat(presentOfTotal);\n    lineData['date'] = new Date(dates[i]);\n    lineData[window['chartCategory']] = parseInt(ele) / 1000000;\n    lineData['state'] = name;\n    historicalData.push(lineData);\n  });\n  return historicalData;\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/state.js\n");

/***/ }),

/***/ "./src/scripts/stats.js":
/*!******************************!*\
  !*** ./src/scripts/stats.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./src/scripts/state.js\");\n\nclass Stats {\n  constructor(divEl, states) {\n    this.divEl = divEl;\n    this.state = states['Alabama'];\n    divEl.appendChild(this.setUpStats(this.state));\n  }\n  setUpStats(state) {\n    let ul = document.createElement('ul');\n    let i = 0;\n    let suffix = ['Mln', 'K'];\n    for (let key in state) {\n      if (key === 'setUpLineChartHistorical') continue;\n      let lastFourLetters = key.slice(key.length - 4);\n      let lastSixLetters = key.slice(key.length - 6);\n      if (lastFourLetters === 'Hist') continue;\n      if (lastSixLetters === 'Status') continue;\n      let liEl = document.createElement('li');\n      let divName = document.createElement('div');\n      let divValue = document.createElement('div');\n      let capitalizeName = key.toUpperCase();\n      let statsValue = state[key];\n      divName.innerHTML = capitalizeName;\n      divValue.innerHTML = statsValue;\n      this.setValueColor(state, key, divValue);\n      liEl.appendChild(divName);\n      liEl.appendChild(divValue);\n      liEl.setAttribute('class', 'stats-item');\n      if (i !== 0) {\n        let divSuffix = document.createElement('div');\n        let index = i % 2 === 0 ? 1 : 0;\n        if (capitalizeName === 'EMPLOYMENT') {\n          divSuffix.innerHTML = '%';\n        } else {\n          divSuffix.innerHTML = suffix[index];\n        }\n        divSuffix.style = 'font-size: 10px';\n        divSuffix.style = 'height: 100hv';\n        liEl.appendChild(divSuffix);\n      }\n      if (i > 0) {\n        liEl.classList.add('class', 'selectable');\n      }\n      ul.appendChild(liEl);\n      i++;\n    }\n    ul.setAttribute('id', 'stats-ul');\n    return ul;\n  }\n  update(state) {\n    let lis = document.querySelectorAll('#stats ul li');\n    // Object.keys(state).forEach((key, i) => {\n\n    for (let i = 0; i < lis.length; i++) {\n      let innerElements = lis[i].querySelectorAll('div');\n      let stateAttribute = innerElements[0].innerText.toLowerCase();\n      let divValue = lis[i].querySelectorAll('div')[1];\n      this.setValueColor(state, stateAttribute, divValue);\n      divValue.innerHTML = `${state[stateAttribute]}`;\n    }\n  }\n  setValueColor(state, key, divValue) {\n    if (key !== 'name') {\n      let status = state[key + 'Status'];\n      status || state[status] === 1 ? divValue.style = 'color: green' : divValue.style = 'color: red';\n    }\n  }\n  chartData(data) {\n    window['usTotal'] = [];\n    this.setCategory();\n    let category = window['chartCategory'];\n    let getStatsCensusHist = data['getStatsCensus']; // TODO: Determine which data api endpoint to use\n\n    let allStatesHistValuesAllYears = [];\n    Object.keys(data[category][0]).forEach(stateName => {\n      if (stateName !== 'dataType') {\n        allStatesHistValuesAllYears.push(getStatsCensusHist(stateName, data[category]));\n      }\n    });\n    let totalHistValuesAllYears = [];\n    for (let i = 0; i < 5; i++) {\n      let count = 0;\n      allStatesHistValuesAllYears.forEach(stateHistValues => {\n        count += parseInt(stateHistValues[i]);\n      });\n      window['usTotal'].push(count);\n      totalHistValuesAllYears.push(Math.round(count / 52));\n    }\n    return _state__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setUpLineChartHistorical(totalHistValuesAllYears);\n  }\n  setCategory() {\n    if (window['chartCategory'] === undefined) {\n      window['chartCategory'] = 'populationHistorical';\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stats);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/stats.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJwYWNrLXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;